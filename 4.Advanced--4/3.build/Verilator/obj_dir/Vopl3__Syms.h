// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Symbol table internal header
//
// Internal details; most calling programs do not need this header,
// unless using verilator public meta comments.

#ifndef _VOPL3__SYMS_H_
#define _VOPL3__SYMS_H_  // guard

#include "verilated_heavy.h"

// INCLUDE MODULE CLASSES
#include "Vopl3.h"
#include "Vopl3___024unit.h"
#include "Vopl3_mem_multi_bank__D1_DB12_O2_N2.h"
#include "Vopl3_mem_multi_bank__D8_DB16_N2.h"
#include "Vopl3_mem_simple_dual_port_async_read__pi13.h"
#include "Vopl3_mem_simple_dual_port_async_read__pi8.h"
#include "Vopl3_mem_simple_dual_port_async_read__pi7.h"
#include "Vopl3_mem_simple_dual_port_async_read__pi6.h"
#include "Vopl3_mem_simple_dual_port_async_read__pi4.h"
#include "Vopl3_mem_simple_dual_port_async_read__pi3.h"
#include "Vopl3_mem_simple_dual_port__pi12.h"
#include "Vopl3_mem_simple_dual_port__pi5.h"

// SYMS CLASS
class Vopl3__Syms : public VerilatedSyms {
  public:
    
    // LOCAL STATE
    const char* __Vm_namep;
    bool __Vm_didInit;
    
    // SUBCELL STATE
    Vopl3*                         TOPp;
    Vopl3_mem_simple_dual_port_async_read__pi4 TOP__opl3__DOT__channels__DOT__ch_abcd_cnt_mem__DOT__bankgen__BRA__0__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi4 TOP__opl3__DOT__channels__DOT__ch_abcd_cnt_mem__DOT__bankgen__BRA__1__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_multi_bank__D8_DB16_N2 TOP__opl3__DOT__channels__DOT__control_operators__DOT__am_vib_egt_ksr_mult_mem;
    Vopl3_mem_simple_dual_port_async_read__pi6 TOP__opl3__DOT__channels__DOT__control_operators__DOT__am_vib_egt_ksr_mult_mem__bankgen__BRA__0__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi6 TOP__opl3__DOT__channels__DOT__control_operators__DOT__am_vib_egt_ksr_mult_mem__bankgen__BRA__1__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_multi_bank__D8_DB16_N2 TOP__opl3__DOT__channels__DOT__control_operators__DOT__ar_dr_mem;
    Vopl3_mem_simple_dual_port_async_read__pi6 TOP__opl3__DOT__channels__DOT__control_operators__DOT__ar_dr_mem__bankgen__BRA__0__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi6 TOP__opl3__DOT__channels__DOT__control_operators__DOT__ar_dr_mem__bankgen__BRA__1__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi4 TOP__opl3__DOT__channels__DOT__control_operators__DOT__fnum_low_mem__DOT__bankgen__BRA__0__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi4 TOP__opl3__DOT__channels__DOT__control_operators__DOT__fnum_low_mem__DOT__bankgen__BRA__1__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi8 TOP__opl3__DOT__channels__DOT__control_operators__DOT__kon_block_fnum_high_mem__DOT__bankgen__BRA__0__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi8 TOP__opl3__DOT__channels__DOT__control_operators__DOT__kon_block_fnum_high_mem__DOT__bankgen__BRA__1__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_multi_bank__D8_DB16_N2 TOP__opl3__DOT__channels__DOT__control_operators__DOT__ksl_tl_mem;
    Vopl3_mem_simple_dual_port_async_read__pi6 TOP__opl3__DOT__channels__DOT__control_operators__DOT__ksl_tl_mem__bankgen__BRA__0__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi6 TOP__opl3__DOT__channels__DOT__control_operators__DOT__ksl_tl_mem__bankgen__BRA__1__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi13 TOP__opl3__DOT__channels__DOT__control_operators__DOT__operator__DOT__envelope_generator__DOT__env_int_mem__DOT__bankgen__BRA__0__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi13 TOP__opl3__DOT__channels__DOT__control_operators__DOT__operator__DOT__envelope_generator__DOT__env_int_mem__DOT__bankgen__BRA__1__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi3 TOP__opl3__DOT__channels__DOT__control_operators__DOT__operator__DOT__envelope_generator__DOT__state_mem__DOT__bankgen__BRA__0__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi3 TOP__opl3__DOT__channels__DOT__control_operators__DOT__operator__DOT__envelope_generator__DOT__state_mem__DOT__bankgen__BRA__1__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port__pi12 TOP__opl3__DOT__channels__DOT__control_operators__DOT__operator__DOT__feedback_mem__DOT__bankgen__BRA__0__KET____DOT__genblk2__DOT__mem_bank;
    Vopl3_mem_simple_dual_port__pi12 TOP__opl3__DOT__channels__DOT__control_operators__DOT__operator__DOT__feedback_mem__DOT__bankgen__BRA__1__KET____DOT__genblk2__DOT__mem_bank;
    Vopl3_mem_multi_bank__D1_DB12_O2_N2 TOP__opl3__DOT__channels__DOT__control_operators__DOT__operator__DOT__phase_generator__DOT__final_phase_msb_mem;
    Vopl3_mem_multi_bank__D1_DB12_O2_N2 TOP__opl3__DOT__channels__DOT__control_operators__DOT__operator__DOT__phase_generator__DOT__is_odd_period_msb_mem;
    Vopl3_mem_multi_bank__D8_DB16_N2 TOP__opl3__DOT__channels__DOT__control_operators__DOT__sl_rr_mem;
    Vopl3_mem_simple_dual_port_async_read__pi6 TOP__opl3__DOT__channels__DOT__control_operators__DOT__sl_rr_mem__bankgen__BRA__0__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi6 TOP__opl3__DOT__channels__DOT__control_operators__DOT__sl_rr_mem__bankgen__BRA__1__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi7 TOP__opl3__DOT__channels__DOT__control_operators__DOT__ws_mem__DOT__bankgen__BRA__0__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port_async_read__pi7 TOP__opl3__DOT__channels__DOT__control_operators__DOT__ws_mem__DOT__bankgen__BRA__1__KET____DOT__genblk1__DOT__mem_bank;
    Vopl3_mem_simple_dual_port__pi5 TOP__opl3__DOT__channels__DOT__operator_out_mem__DOT__bankgen__BRA__0__KET____DOT__genblk2__DOT__mem_bank;
    Vopl3_mem_simple_dual_port__pi5 TOP__opl3__DOT__channels__DOT__operator_out_mem__DOT__bankgen__BRA__1__KET____DOT__genblk2__DOT__mem_bank;
    
    // COVERAGE
    uint32_t __Vcoverage[5141];
    
    // SCOPE NAMES
    VerilatedScope __Vscope_opl3__channels;
    VerilatedScope __Vscope_opl3__channels__control_operators;
    VerilatedScope __Vscope_opl3__channels__control_operators__ERROR_operators_not_aligned_for_modulation;
    VerilatedScope __Vscope_opl3__channels__control_operators__operator__calc_phase_inc;
    VerilatedScope __Vscope_opl3__channels__control_operators__operator__envelope_generator;
    VerilatedScope __Vscope_opl3__channels__control_operators__operator__envelope_generator__ksl_add_rom;
    VerilatedScope __Vscope_opl3__channels__control_operators__operator__envelope_generator__state_mem;
    VerilatedScope __Vscope_opl3__channels__control_operators__operator__phase_generator;
    VerilatedScope __Vscope_opl3__channels__control_operators__operator__phase_generator__calc_rhythm_phase;
    
    // CREATORS
    Vopl3__Syms(Vopl3* topp, const char* namep);
    ~Vopl3__Syms() {}
    
    // METHODS
    inline const char* name() { return __Vm_namep; }
    
} VL_ATTR_ALIGNED(VL_CACHE_LINE_BYTES);

#endif  // guard
