make[1]: Entering directory '/home/nikola/ChiliChips/openCologne/pnr_tests-novi/tests/pipeline/gen_5_8_128_499'
yosys -p "synth_gatemate -top TestPipeline; write_json TestPipeline.json" TestPipeline.sv 

 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2025  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.50+56 (git sha1 9106d6b3b, clang++ 18.1.3 -fPIC -O3)

-- Parsing `TestPipeline.sv' using frontend ` -sv' --

1. Executing Verilog-2005 frontend: TestPipeline.sv
Parsing SystemVerilog input from `TestPipeline.sv' to AST representation.
Storing AST representation for module `$abstract\NodeMul'.
Storing AST representation for module `$abstract\NodeMux'.
Storing AST representation for module `$abstract\NodeMux_1'.
Storing AST representation for module `$abstract\ram_64x20'.
Storing AST representation for module `$abstract\Queue64_UInt20'.
Storing AST representation for module `$abstract\NodeQueue'.
Storing AST representation for module `$abstract\NodeDemux'.
Storing AST representation for module `$abstract\NodeMap'.
Storing AST representation for module `$abstract\TestPipeline'.
Successfully finished Verilog frontend.

-- Running command `synth_gatemate -top TestPipeline; write_json TestPipeline.json' --

2. Executing SYNTH_GATEMATE pass.

2.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gatemate/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gatemate/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\CC_IBUF'.
Generating RTLIL representation for module `\CC_OBUF'.
Generating RTLIL representation for module `\CC_TOBUF'.
Generating RTLIL representation for module `\CC_IOBUF'.
Generating RTLIL representation for module `\CC_LVDS_IBUF'.
Generating RTLIL representation for module `\CC_LVDS_OBUF'.
Generating RTLIL representation for module `\CC_LVDS_TOBUF'.
Generating RTLIL representation for module `\CC_LVDS_IOBUF'.
Generating RTLIL representation for module `\CC_IDDR'.
Generating RTLIL representation for module `\CC_ODDR'.
Generating RTLIL representation for module `\CC_DFF'.
Generating RTLIL representation for module `\CC_DLT'.
Generating RTLIL representation for module `\CC_LUT1'.
Generating RTLIL representation for module `\CC_LUT2'.
Generating RTLIL representation for module `\CC_LUT3'.
Generating RTLIL representation for module `\CC_LUT4'.
Generating RTLIL representation for module `\CC_MX2'.
Generating RTLIL representation for module `\CC_MX4'.
Generating RTLIL representation for module `\CC_MX8'.
Generating RTLIL representation for module `\CC_ADDF'.
Generating RTLIL representation for module `\CC_MULT'.
Generating RTLIL representation for module `\CC_BUFG'.
Generating RTLIL representation for module `\CC_BRAM_20K'.
Generating RTLIL representation for module `\CC_BRAM_40K'.
Generating RTLIL representation for module `\CC_FIFO_40K'.
Generating RTLIL representation for module `\CC_L2T4'.
Generating RTLIL representation for module `\CC_L2T5'.
Successfully finished Verilog frontend.

2.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gatemate/cells_bb.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gatemate/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\CC_PLL'.
Generating RTLIL representation for module `\CC_PLL_ADV'.
Generating RTLIL representation for module `\CC_SERDES'.
Generating RTLIL representation for module `\CC_CFG_CTRL'.
Generating RTLIL representation for module `\CC_USR_RSTN'.
Successfully finished Verilog frontend.

2.3. Executing HIERARCHY pass (managing design hierarchy).

2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\TestPipeline'.
Generating RTLIL representation for module `\TestPipeline'.

2.4.1. Analyzing design hierarchy..
Top module:  \TestPipeline

2.4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\NodeMux_1'.
Generating RTLIL representation for module `\NodeMux_1'.

2.4.3. Executing AST frontend in derive mode using pre-parsed AST for module `\NodeDemux'.
Generating RTLIL representation for module `\NodeDemux'.

2.4.4. Executing AST frontend in derive mode using pre-parsed AST for module `\NodeMap'.
Generating RTLIL representation for module `\NodeMap'.

2.4.5. Executing AST frontend in derive mode using pre-parsed AST for module `\NodeQueue'.
Generating RTLIL representation for module `\NodeQueue'.

2.4.6. Executing AST frontend in derive mode using pre-parsed AST for module `\NodeMux'.
Generating RTLIL representation for module `\NodeMux'.

2.4.7. Executing AST frontend in derive mode using pre-parsed AST for module `\NodeMul'.
Generating RTLIL representation for module `\NodeMul'.

2.4.8. Analyzing design hierarchy..
Top module:  \TestPipeline
Used module:     \NodeMux_1
Used module:     \NodeDemux
Used module:     \NodeMap
Used module:     \NodeQueue
Used module:     \NodeMux
Used module:     \NodeMul

2.4.9. Executing AST frontend in derive mode using pre-parsed AST for module `\Queue64_UInt20'.
Generating RTLIL representation for module `\Queue64_UInt20'.

2.4.10. Analyzing design hierarchy..
Top module:  \TestPipeline
Used module:     \NodeMux_1
Used module:     \NodeDemux
Used module:     \NodeMap
Used module:     \NodeQueue
Used module:         \Queue64_UInt20
Used module:     \NodeMux
Used module:     \NodeMul

2.4.11. Executing AST frontend in derive mode using pre-parsed AST for module `\ram_64x20'.
Generating RTLIL representation for module `\ram_64x20'.

2.4.12. Analyzing design hierarchy..
Top module:  \TestPipeline
Used module:     \NodeMux_1
Used module:     \NodeDemux
Used module:     \NodeMap
Used module:     \NodeQueue
Used module:         \Queue64_UInt20
Used module:             \ram_64x20
Used module:     \NodeMux
Used module:     \NodeMul

2.4.13. Analyzing design hierarchy..
Top module:  \TestPipeline
Used module:     \NodeMux_1
Used module:     \NodeDemux
Used module:     \NodeMap
Used module:     \NodeQueue
Used module:         \Queue64_UInt20
Used module:             \ram_64x20
Used module:     \NodeMux
Used module:     \NodeMul
Removing unused module `$abstract\TestPipeline'.
Removing unused module `$abstract\NodeMap'.
Removing unused module `$abstract\NodeDemux'.
Removing unused module `$abstract\NodeQueue'.
Removing unused module `$abstract\Queue64_UInt20'.
Removing unused module `$abstract\ram_64x20'.
Removing unused module `$abstract\NodeMux_1'.
Removing unused module `$abstract\NodeMux'.
Removing unused module `$abstract\NodeMul'.
Removed 9 unused modules.

2.5. Executing PROC pass (convert processes to netlists).

2.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$TestPipeline.sv:127$60 in module ram_64x20.
Marked 1 switch rules as full_case in process $proc$TestPipeline.sv:165$52 in module Queue64_UInt20.
Marked 1 switch rules as full_case in process $proc$TestPipeline.sv:294$17 in module NodeDemux.
Removed a total of 0 dead cases.

2.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 6 assignments to connections.

2.5.4. Executing PROC_INIT pass (extract init attributes).

2.5.5. Executing PROC_ARST pass (detect async resets in processes).

2.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~6 debug messages>

2.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\ram_64x20.$proc$TestPipeline.sv:127$60'.
     1/3: $1$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$67
     2/3: $1$memwr$\Memory$TestPipeline.sv:129$59_DATA[19:0]$66
     3/3: $1$memwr$\Memory$TestPipeline.sv:129$59_ADDR[5:0]$65
Creating decoders for process `\Queue64_UInt20.$proc$TestPipeline.sv:165$52'.
     1/3: $0\maybe_full[0:0]
     2/3: $0\deq_ptr_value[5:0]
     3/3: $0\enq_ptr_value[5:0]
Creating decoders for process `\NodeMul.$proc$TestPipeline.sv:68$42'.
Creating decoders for process `\NodeDemux.$proc$TestPipeline.sv:294$17'.
     1/2: $0\buffer_1[19:0]
     2/2: $0\buffer_0[19:0]

2.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.5.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\ram_64x20.$memwr$\Memory$TestPipeline.sv:129$59_ADDR' using process `\ram_64x20.$proc$TestPipeline.sv:127$60'.
  created $dff cell `$procdff$100' with positive edge clock.
Creating register for signal `\ram_64x20.$memwr$\Memory$TestPipeline.sv:129$59_DATA' using process `\ram_64x20.$proc$TestPipeline.sv:127$60'.
  created $dff cell `$procdff$101' with positive edge clock.
Creating register for signal `\ram_64x20.$memwr$\Memory$TestPipeline.sv:129$59_EN' using process `\ram_64x20.$proc$TestPipeline.sv:127$60'.
  created $dff cell `$procdff$102' with positive edge clock.
Creating register for signal `\Queue64_UInt20.\enq_ptr_value' using process `\Queue64_UInt20.$proc$TestPipeline.sv:165$52'.
  created $dff cell `$procdff$103' with positive edge clock.
Creating register for signal `\Queue64_UInt20.\deq_ptr_value' using process `\Queue64_UInt20.$proc$TestPipeline.sv:165$52'.
  created $dff cell `$procdff$104' with positive edge clock.
Creating register for signal `\Queue64_UInt20.\maybe_full' using process `\Queue64_UInt20.$proc$TestPipeline.sv:165$52'.
  created $dff cell `$procdff$105' with positive edge clock.
Creating register for signal `\NodeMul.\in_reg' using process `\NodeMul.$proc$TestPipeline.sv:68$42'.
  created $dff cell `$procdff$106' with positive edge clock.
Creating register for signal `\NodeMul.\out_reg' using process `\NodeMul.$proc$TestPipeline.sv:68$42'.
  created $dff cell `$procdff$107' with positive edge clock.
Creating register for signal `\NodeDemux.\cntr' using process `\NodeDemux.$proc$TestPipeline.sv:294$17'.
  created $dff cell `$procdff$108' with positive edge clock.
Creating register for signal `\NodeDemux.\buffer_0' using process `\NodeDemux.$proc$TestPipeline.sv:294$17'.
  created $dff cell `$procdff$109' with positive edge clock.
Creating register for signal `\NodeDemux.\buffer_1' using process `\NodeDemux.$proc$TestPipeline.sv:294$17'.
  created $dff cell `$procdff$110' with positive edge clock.

2.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ram_64x20.$proc$TestPipeline.sv:127$60'.
Removing empty process `ram_64x20.$proc$TestPipeline.sv:127$60'.
Found and cleaned up 4 empty switches in `\Queue64_UInt20.$proc$TestPipeline.sv:165$52'.
Removing empty process `Queue64_UInt20.$proc$TestPipeline.sv:165$52'.
Removing empty process `NodeMul.$proc$TestPipeline.sv:68$42'.
Found and cleaned up 1 empty switch in `\NodeDemux.$proc$TestPipeline.sv:294$17'.
Removing empty process `NodeDemux.$proc$TestPipeline.sv:294$17'.
Cleaned up 6 empty switches.

2.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module ram_64x20.
<suppressed ~1 debug messages>
Optimizing module Queue64_UInt20.
<suppressed ~1 debug messages>
Optimizing module NodeMul.
Optimizing module NodeMux.
Optimizing module NodeQueue.
Optimizing module NodeMap.
<suppressed ~7 debug messages>
Optimizing module NodeDemux.
Optimizing module NodeMux_1.
<suppressed ~1 debug messages>
Optimizing module TestPipeline.

2.6. Executing FLATTEN pass (flatten design).
Deleting now unused module ram_64x20.
Deleting now unused module Queue64_UInt20.
Deleting now unused module NodeMul.
Deleting now unused module NodeMux.
Deleting now unused module NodeQueue.
Deleting now unused module NodeMap.
Deleting now unused module NodeDemux.
Deleting now unused module NodeMux_1.
<suppressed ~14 debug messages>

2.7. Executing TRIBUF pass.

2.8. Executing DEMINOUT pass (demote inout ports to input or output).

2.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.
<suppressed ~7 debug messages>

2.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..
Removed 26 unused cells and 192 unused wires.
<suppressed ~31 debug messages>

2.11. Executing CHECK pass (checking for obvious problems).
Checking module TestPipeline...
Found and reported 0 problems.

2.12. Executing OPT pass (performing simple optimizations).

2.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

2.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TestPipeline..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

2.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TestPipeline.
    Consolidated identical input bits for $mux cell $flatten\modules_3.\Queue64_UInt20.\ram_ext.$procmux$71:
      Old ports: A=20'00000000000000000000, B=20'11111111111111111111, Y=$flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63
      New ports: A=1'0, B=1'1, Y=$flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0]
      New connections: $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [19:1] = { $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] }
    Consolidated identical input bits for $mux cell $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$procmux$71:
      Old ports: A=20'00000000000000000000, B=20'11111111111111111111, Y=$flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63
      New ports: A=1'0, B=1'1, Y=$flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0]
      New connections: $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [19:1] = { $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] }
    Consolidated identical input bits for $mux cell $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$procmux$71:
      Old ports: A=20'00000000000000000000, B=20'11111111111111111111, Y=$flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63
      New ports: A=1'0, B=1'1, Y=$flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0]
      New connections: $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [19:1] = { $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] }
    Consolidated identical input bits for $mux cell $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$procmux$71:
      Old ports: A=20'00000000000000000000, B=20'11111111111111111111, Y=$flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63
      New ports: A=1'0, B=1'1, Y=$flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0]
      New connections: $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [19:1] = { $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] }
    Consolidated identical input bits for $mux cell $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$procmux$71:
      Old ports: A=20'00000000000000000000, B=20'11111111111111111111, Y=$flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63
      New ports: A=1'0, B=1'1, Y=$flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0]
      New connections: $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [19:1] = { $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] $flatten\modules_3.\Queue64_UInt20_4.\ram_ext.$0$memwr$\Memory$TestPipeline.sv:129$59_EN[19:0]$63 [0] }
  Optimizing cells in module \TestPipeline.
Performed a total of 5 changes.

2.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
Removed a total of 0 cells.

2.12.6. Executing OPT_DFF pass (perform DFF optimizations).

2.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

2.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.12.9. Rerunning OPT passes. (Maybe there is more to do..)

2.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TestPipeline..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

2.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TestPipeline.
Performed a total of 0 changes.

2.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
Removed a total of 0 cells.

2.12.13. Executing OPT_DFF pass (perform DFF optimizations).

2.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..

2.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.12.16. Finished OPT passes. (There is nothing left to do.)

2.13. Executing FSM pass (extract and optimize FSM).

2.13.1. Executing FSM_DETECT pass (finding FSMs in design).

2.13.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.13.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..

2.13.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.13.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.13.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.13.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.14. Executing OPT pass (performing simple optimizations).

2.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
Removed a total of 0 cells.

2.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TestPipeline..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

2.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TestPipeline.
Performed a total of 0 changes.

2.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
Removed a total of 0 cells.

2.14.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\modules_6.$procdff$109 ($dff) from module TestPipeline (D = { \modules_6.in_bits [19:10] \modules_5.in_bits [9:0] }, Q = \modules_6.buffer_0).
Adding EN signal on $flatten\modules_4.$procdff$109 ($dff) from module TestPipeline (D = \modules_4.in_bits, Q = \modules_4.buffer_0).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20_4.$procdff$105 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_4.$procmux$79_Y, Q = \modules_3.Queue64_UInt20_4.maybe_full, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$128 ($sdff) from module TestPipeline (D = \modules_3.Queue64_UInt20_3.do_deq, Q = \modules_3.Queue64_UInt20_4.maybe_full).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20_4.$procdff$104 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_4.$procmux$84_Y, Q = \modules_3.Queue64_UInt20_4.deq_ptr_value, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$130 ($sdff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_4.$add$TestPipeline.sv:175$54_Y, Q = \modules_3.Queue64_UInt20_4.deq_ptr_value).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20_4.$procdff$103 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_4.$procmux$89_Y, Q = \modules_3.Queue64_UInt20_4.enq_ptr_value, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$132 ($sdff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_4.$add$TestPipeline.sv:173$53_Y, Q = \modules_3.Queue64_UInt20_4.enq_ptr_value).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20_3.$procdff$105 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_3.$procmux$79_Y, Q = \modules_3.Queue64_UInt20_3.maybe_full, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$134 ($sdff) from module TestPipeline (D = \modules_3.Queue64_UInt20_2.do_deq, Q = \modules_3.Queue64_UInt20_3.maybe_full).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20_3.$procdff$104 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_3.$procmux$84_Y, Q = \modules_3.Queue64_UInt20_3.deq_ptr_value, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$136 ($sdff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_3.$add$TestPipeline.sv:175$54_Y, Q = \modules_3.Queue64_UInt20_3.deq_ptr_value).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20_3.$procdff$103 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_3.$procmux$89_Y, Q = \modules_3.Queue64_UInt20_3.enq_ptr_value, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$138 ($sdff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_3.$add$TestPipeline.sv:173$53_Y, Q = \modules_3.Queue64_UInt20_3.enq_ptr_value).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20_2.$procdff$105 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_2.$procmux$79_Y, Q = \modules_3.Queue64_UInt20_2.maybe_full, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$140 ($sdff) from module TestPipeline (D = \modules_3.Queue64_UInt20_1.do_deq, Q = \modules_3.Queue64_UInt20_2.maybe_full).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20_2.$procdff$104 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_2.$procmux$84_Y, Q = \modules_3.Queue64_UInt20_2.deq_ptr_value, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$142 ($sdff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_2.$add$TestPipeline.sv:175$54_Y, Q = \modules_3.Queue64_UInt20_2.deq_ptr_value).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20_2.$procdff$103 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_2.$procmux$89_Y, Q = \modules_3.Queue64_UInt20_2.enq_ptr_value, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$144 ($sdff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_2.$add$TestPipeline.sv:173$53_Y, Q = \modules_3.Queue64_UInt20_2.enq_ptr_value).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20_1.$procdff$105 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_1.$procmux$79_Y, Q = \modules_3.Queue64_UInt20_1.maybe_full, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$146 ($sdff) from module TestPipeline (D = \modules_3.Queue64_UInt20.do_deq, Q = \modules_3.Queue64_UInt20_1.maybe_full).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20_1.$procdff$104 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_1.$procmux$84_Y, Q = \modules_3.Queue64_UInt20_1.deq_ptr_value, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$148 ($sdff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_1.$add$TestPipeline.sv:175$54_Y, Q = \modules_3.Queue64_UInt20_1.deq_ptr_value).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20_1.$procdff$103 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_1.$procmux$89_Y, Q = \modules_3.Queue64_UInt20_1.enq_ptr_value, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$150 ($sdff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20_1.$add$TestPipeline.sv:173$53_Y, Q = \modules_3.Queue64_UInt20_1.enq_ptr_value).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20.$procdff$105 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20.$procmux$79_Y, Q = \modules_3.Queue64_UInt20.maybe_full, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$152 ($sdff) from module TestPipeline (D = \modules_3.Queue64_UInt20.do_enq, Q = \modules_3.Queue64_UInt20.maybe_full).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20.$procdff$104 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20.$procmux$84_Y, Q = \modules_3.Queue64_UInt20.deq_ptr_value, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$154 ($sdff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20.$add$TestPipeline.sv:175$54_Y, Q = \modules_3.Queue64_UInt20.deq_ptr_value).
Adding SRST signal on $flatten\modules_3.\Queue64_UInt20.$procdff$103 ($dff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20.$procmux$89_Y, Q = \modules_3.Queue64_UInt20.enq_ptr_value, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$156 ($sdff) from module TestPipeline (D = $flatten\modules_3.\Queue64_UInt20.$add$TestPipeline.sv:173$53_Y, Q = \modules_3.Queue64_UInt20.enq_ptr_value).

2.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..
Removed 32 unused cells and 32 unused wires.
<suppressed ~33 debug messages>

2.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.14.9. Rerunning OPT passes. (Maybe there is more to do..)

2.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TestPipeline..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

2.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TestPipeline.
Performed a total of 0 changes.

2.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
Removed a total of 0 cells.

2.14.13. Executing OPT_DFF pass (perform DFF optimizations).

2.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..

2.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.14.16. Finished OPT passes. (There is nothing left to do.)

2.15. Executing WREDUCE pass (reducing word size of cells).
Removed top 16 bits (of 19) from port B of cell TestPipeline.$flatten\modules_0.$mul$TestPipeline.sv:70$43 ($mul).
Removed top 7 bits (of 17) from port Y of cell TestPipeline.$flatten\modules_1.$shr$TestPipeline.sv:101$41 ($shr).
Removed top 5 bits (of 6) from port B of cell TestPipeline.$flatten\modules_3.\Queue64_UInt20_4.$add$TestPipeline.sv:173$53 ($add).
Removed top 5 bits (of 6) from port B of cell TestPipeline.$flatten\modules_3.\Queue64_UInt20_4.$add$TestPipeline.sv:175$54 ($add).
Removed top 5 bits (of 6) from port B of cell TestPipeline.$flatten\modules_3.\Queue64_UInt20_3.$add$TestPipeline.sv:173$53 ($add).
Removed top 5 bits (of 6) from port B of cell TestPipeline.$flatten\modules_3.\Queue64_UInt20_3.$add$TestPipeline.sv:175$54 ($add).
Removed top 5 bits (of 6) from port B of cell TestPipeline.$flatten\modules_3.\Queue64_UInt20_2.$add$TestPipeline.sv:173$53 ($add).
Removed top 5 bits (of 6) from port B of cell TestPipeline.$flatten\modules_3.\Queue64_UInt20_2.$add$TestPipeline.sv:175$54 ($add).
Removed top 5 bits (of 6) from port B of cell TestPipeline.$flatten\modules_3.\Queue64_UInt20_1.$add$TestPipeline.sv:173$53 ($add).
Removed top 5 bits (of 6) from port B of cell TestPipeline.$flatten\modules_3.\Queue64_UInt20_1.$add$TestPipeline.sv:175$54 ($add).
Removed top 5 bits (of 6) from port B of cell TestPipeline.$flatten\modules_3.\Queue64_UInt20.$add$TestPipeline.sv:173$53 ($add).
Removed top 5 bits (of 6) from port B of cell TestPipeline.$flatten\modules_3.\Queue64_UInt20.$add$TestPipeline.sv:175$54 ($add).
Removed top 7 bits (of 8) from port B of cell TestPipeline.$flatten\modules_4.$add$TestPipeline.sv:295$18 ($add).
Removed top 10 bits (of 20) from port B of cell TestPipeline.$flatten\modules_5.$lt$TestPipeline.sv:344$32 ($lt).
Removed top 10 bits (of 20) from port B of cell TestPipeline.$flatten\modules_5.$lt$TestPipeline.sv:342$30 ($lt).
Removed top 11 bits (of 20) from port B of cell TestPipeline.$flatten\modules_5.$lt$TestPipeline.sv:340$28 ($lt).
Removed top 10 bits (of 20) from port B of cell TestPipeline.$flatten\modules_5.$lt$TestPipeline.sv:338$26 ($lt).
Removed top 10 bits (of 20) from port B of cell TestPipeline.$flatten\modules_5.$lt$TestPipeline.sv:336$24 ($lt).
Removed top 10 bits (of 20) from port B of cell TestPipeline.$flatten\modules_5.$lt$TestPipeline.sv:334$22 ($lt).
Removed top 10 bits (of 20) from port B of cell TestPipeline.$flatten\modules_5.$lt$TestPipeline.sv:332$20 ($lt).
Removed top 7 bits (of 8) from port B of cell TestPipeline.$flatten\modules_6.$add$TestPipeline.sv:295$18 ($add).

2.16. Executing PEEPOPT pass (run peephole optimizers).

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..

2.18. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~22 debug messages>

2.19. Executing SHARE pass (SAT-based resource sharing).
Found 7 cells in module TestPipeline that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\modules_7.$shr$TestPipeline.sv:111$15 ($shr):
    Found 1 activation_patterns using ctrl signal $flatten\modules_7.$eq$TestPipeline.sv:111$14_Y.
    Found 2 candidates: $flatten\modules_2.$shr$TestPipeline.sv:111$15 $flatten\modules_1.$shr$TestPipeline.sv:101$41
    Analyzing resource sharing with $flatten\modules_2.$shr$TestPipeline.sv:111$15 ($shr):
      Found 1 activation_patterns using ctrl signal $flatten\modules_2.$eq$TestPipeline.sv:111$14_Y.
      Forbidden control signals for this pair of cells: \modules_3.Queue64_UInt20.do_enq
      Activation pattern for cell $flatten\modules_7.$shr$TestPipeline.sv:111$15: $flatten\modules_7.$eq$TestPipeline.sv:111$14_Y = 1'0
      Activation pattern for cell $flatten\modules_2.$shr$TestPipeline.sv:111$15: $flatten\modules_2.$eq$TestPipeline.sv:111$14_Y = 1'0
      Size of SAT problem: 1107 variables, 2881 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\modules_7.$eq$TestPipeline.sv:111$14_Y $flatten\modules_2.$eq$TestPipeline.sv:111$14_Y } = 2'00
    Analyzing resource sharing with $flatten\modules_1.$shr$TestPipeline.sv:101$41 ($shr):
      Cell is always active. Therefore no sharing is possible.
  Analyzing resource sharing options for $flatten\modules_3.\Queue64_UInt20_2.\ram_ext.$memrd$\Memory$TestPipeline.sv:143$68 ($memrd):
    Found 1 activation_patterns using ctrl signal \modules_3.Queue64_UInt20_2.do_deq.
    No candidates found.
  Analyzing resource sharing options for $flatten\modules_3.\Queue64_UInt20_1.\ram_ext.$memrd$\Memory$TestPipeline.sv:143$68 ($memrd):
    Found 1 activation_patterns using ctrl signal \modules_3.Queue64_UInt20_1.do_deq.
    No candidates found.
  Analyzing resource sharing options for $flatten\modules_3.\Queue64_UInt20.\ram_ext.$memrd$\Memory$TestPipeline.sv:143$68 ($memrd):
    Found 1 activation_patterns using ctrl signal \modules_3.Queue64_UInt20.do_deq.
    No candidates found.
  Analyzing resource sharing options for $flatten\modules_2.$shr$TestPipeline.sv:111$15 ($shr):
    Found 1 activation_patterns using ctrl signal $flatten\modules_2.$eq$TestPipeline.sv:111$14_Y.
    No candidates found.
  Analyzing resource sharing options for $flatten\modules_3.\Queue64_UInt20_3.\ram_ext.$memrd$\Memory$TestPipeline.sv:143$68 ($memrd):
    Found 1 activation_patterns using ctrl signal \modules_3.Queue64_UInt20_3.do_deq.
    No candidates found.

2.20. Executing TECHMAP pass (map to technology primitives).

2.20.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.20.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~192 debug messages>

2.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..

2.23. Executing TECHMAP pass (map to technology primitives).

2.23.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gatemate/mul_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gatemate/mul_map.v' to AST representation.
Generating RTLIL representation for module `\$__MULMXN'.
Successfully finished Verilog frontend.

2.23.2. Continuing TECHMAP pass.
Using template $paramod$8d827000fc67c8c39689031e6623e437db4809b9\$__MULMXN for cells of type $mul.
No more expansions possible.
<suppressed ~24 debug messages>

2.24. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module TestPipeline:
  creating $macc model for $flatten\modules_3.\Queue64_UInt20.$add$TestPipeline.sv:173$53 ($add).
  creating $macc model for $flatten\modules_3.\Queue64_UInt20.$add$TestPipeline.sv:175$54 ($add).
  creating $macc model for $flatten\modules_3.\Queue64_UInt20_1.$add$TestPipeline.sv:173$53 ($add).
  creating $macc model for $flatten\modules_3.\Queue64_UInt20_1.$add$TestPipeline.sv:175$54 ($add).
  creating $macc model for $flatten\modules_3.\Queue64_UInt20_2.$add$TestPipeline.sv:173$53 ($add).
  creating $macc model for $flatten\modules_3.\Queue64_UInt20_2.$add$TestPipeline.sv:175$54 ($add).
  creating $macc model for $flatten\modules_3.\Queue64_UInt20_3.$add$TestPipeline.sv:173$53 ($add).
  creating $macc model for $flatten\modules_3.\Queue64_UInt20_3.$add$TestPipeline.sv:175$54 ($add).
  creating $macc model for $flatten\modules_3.\Queue64_UInt20_4.$add$TestPipeline.sv:173$53 ($add).
  creating $macc model for $flatten\modules_3.\Queue64_UInt20_4.$add$TestPipeline.sv:175$54 ($add).
  creating $macc model for $flatten\modules_4.$add$TestPipeline.sv:295$18 ($add).
  creating $macc model for $flatten\modules_6.$add$TestPipeline.sv:295$18 ($add).
  creating $alu model for $macc $flatten\modules_6.$add$TestPipeline.sv:295$18.
  creating $alu model for $macc $flatten\modules_4.$add$TestPipeline.sv:295$18.
  creating $alu model for $macc $flatten\modules_3.\Queue64_UInt20_4.$add$TestPipeline.sv:175$54.
  creating $alu model for $macc $flatten\modules_3.\Queue64_UInt20_4.$add$TestPipeline.sv:173$53.
  creating $alu model for $macc $flatten\modules_3.\Queue64_UInt20_3.$add$TestPipeline.sv:175$54.
  creating $alu model for $macc $flatten\modules_3.\Queue64_UInt20_3.$add$TestPipeline.sv:173$53.
  creating $alu model for $macc $flatten\modules_3.\Queue64_UInt20_2.$add$TestPipeline.sv:175$54.
  creating $alu model for $macc $flatten\modules_3.\Queue64_UInt20_2.$add$TestPipeline.sv:173$53.
  creating $alu model for $macc $flatten\modules_3.\Queue64_UInt20_1.$add$TestPipeline.sv:175$54.
  creating $alu model for $macc $flatten\modules_3.\Queue64_UInt20_1.$add$TestPipeline.sv:173$53.
  creating $alu model for $macc $flatten\modules_3.\Queue64_UInt20.$add$TestPipeline.sv:175$54.
  creating $alu model for $macc $flatten\modules_3.\Queue64_UInt20.$add$TestPipeline.sv:173$53.
  creating $alu model for $flatten\modules_5.$lt$TestPipeline.sv:332$20 ($lt): new $alu
  creating $alu model for $flatten\modules_5.$lt$TestPipeline.sv:334$22 ($lt): new $alu
  creating $alu model for $flatten\modules_5.$lt$TestPipeline.sv:336$24 ($lt): new $alu
  creating $alu model for $flatten\modules_5.$lt$TestPipeline.sv:338$26 ($lt): new $alu
  creating $alu model for $flatten\modules_5.$lt$TestPipeline.sv:340$28 ($lt): new $alu
  creating $alu model for $flatten\modules_5.$lt$TestPipeline.sv:342$30 ($lt): new $alu
  creating $alu model for $flatten\modules_5.$lt$TestPipeline.sv:344$32 ($lt): new $alu
  creating $alu cell for $flatten\modules_5.$lt$TestPipeline.sv:344$32: $auto$alumacc.cc:495:replace_alu$167
  creating $alu cell for $flatten\modules_5.$lt$TestPipeline.sv:342$30: $auto$alumacc.cc:495:replace_alu$172
  creating $alu cell for $flatten\modules_5.$lt$TestPipeline.sv:340$28: $auto$alumacc.cc:495:replace_alu$177
  creating $alu cell for $flatten\modules_5.$lt$TestPipeline.sv:338$26: $auto$alumacc.cc:495:replace_alu$182
  creating $alu cell for $flatten\modules_5.$lt$TestPipeline.sv:336$24: $auto$alumacc.cc:495:replace_alu$187
  creating $alu cell for $flatten\modules_5.$lt$TestPipeline.sv:334$22: $auto$alumacc.cc:495:replace_alu$192
  creating $alu cell for $flatten\modules_5.$lt$TestPipeline.sv:332$20: $auto$alumacc.cc:495:replace_alu$197
  creating $alu cell for $flatten\modules_3.\Queue64_UInt20.$add$TestPipeline.sv:173$53: $auto$alumacc.cc:495:replace_alu$202
  creating $alu cell for $flatten\modules_3.\Queue64_UInt20.$add$TestPipeline.sv:175$54: $auto$alumacc.cc:495:replace_alu$205
  creating $alu cell for $flatten\modules_3.\Queue64_UInt20_1.$add$TestPipeline.sv:173$53: $auto$alumacc.cc:495:replace_alu$208
  creating $alu cell for $flatten\modules_3.\Queue64_UInt20_1.$add$TestPipeline.sv:175$54: $auto$alumacc.cc:495:replace_alu$211
  creating $alu cell for $flatten\modules_3.\Queue64_UInt20_2.$add$TestPipeline.sv:173$53: $auto$alumacc.cc:495:replace_alu$214
  creating $alu cell for $flatten\modules_3.\Queue64_UInt20_2.$add$TestPipeline.sv:175$54: $auto$alumacc.cc:495:replace_alu$217
  creating $alu cell for $flatten\modules_3.\Queue64_UInt20_3.$add$TestPipeline.sv:173$53: $auto$alumacc.cc:495:replace_alu$220
  creating $alu cell for $flatten\modules_3.\Queue64_UInt20_3.$add$TestPipeline.sv:175$54: $auto$alumacc.cc:495:replace_alu$223
  creating $alu cell for $flatten\modules_3.\Queue64_UInt20_4.$add$TestPipeline.sv:173$53: $auto$alumacc.cc:495:replace_alu$226
  creating $alu cell for $flatten\modules_3.\Queue64_UInt20_4.$add$TestPipeline.sv:175$54: $auto$alumacc.cc:495:replace_alu$229
  creating $alu cell for $flatten\modules_4.$add$TestPipeline.sv:295$18: $auto$alumacc.cc:495:replace_alu$232
  creating $alu cell for $flatten\modules_6.$add$TestPipeline.sv:295$18: $auto$alumacc.cc:495:replace_alu$235
  created 19 $alu and 0 $macc cells.

2.25. Executing OPT pass (performing simple optimizations).

2.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.
<suppressed ~7 debug messages>

2.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
Removed a total of 0 cells.

2.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TestPipeline..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

2.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TestPipeline.
Performed a total of 0 changes.

2.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
Removed a total of 0 cells.

2.25.6. Executing OPT_DFF pass (perform DFF optimizations).

2.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..
Removed 7 unused cells and 19 unused wires.
<suppressed ~8 debug messages>

2.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.25.9. Rerunning OPT passes. (Maybe there is more to do..)

2.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TestPipeline..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

2.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TestPipeline.
Performed a total of 0 changes.

2.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
Removed a total of 0 cells.

2.25.13. Executing OPT_DFF pass (perform DFF optimizations).

2.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..

2.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.25.16. Finished OPT passes. (There is nothing left to do.)

2.26. Executing MEMORY pass.

2.26.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.26.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.26.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing TestPipeline.modules_3.Queue64_UInt20.ram_ext.Memory write port 0.
  Analyzing TestPipeline.modules_3.Queue64_UInt20_1.ram_ext.Memory write port 0.
  Analyzing TestPipeline.modules_3.Queue64_UInt20_2.ram_ext.Memory write port 0.
  Analyzing TestPipeline.modules_3.Queue64_UInt20_3.ram_ext.Memory write port 0.
  Analyzing TestPipeline.modules_3.Queue64_UInt20_4.ram_ext.Memory write port 0.

2.26.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.26.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\modules_3.Queue64_UInt20.ram_ext.Memory'[0] in module `\TestPipeline': no output FF found.
Checking read port `\modules_3.Queue64_UInt20_1.ram_ext.Memory'[0] in module `\TestPipeline': no output FF found.
Checking read port `\modules_3.Queue64_UInt20_2.ram_ext.Memory'[0] in module `\TestPipeline': no output FF found.
Checking read port `\modules_3.Queue64_UInt20_3.ram_ext.Memory'[0] in module `\TestPipeline': no output FF found.
Checking read port `\modules_3.Queue64_UInt20_4.ram_ext.Memory'[0] in module `\TestPipeline': no output FF found.
Checking read port address `\modules_3.Queue64_UInt20.ram_ext.Memory'[0] in module `\TestPipeline': merged address FF to cell.
Checking read port address `\modules_3.Queue64_UInt20_1.ram_ext.Memory'[0] in module `\TestPipeline': merged address FF to cell.
Checking read port address `\modules_3.Queue64_UInt20_2.ram_ext.Memory'[0] in module `\TestPipeline': merged address FF to cell.
Checking read port address `\modules_3.Queue64_UInt20_3.ram_ext.Memory'[0] in module `\TestPipeline': merged address FF to cell.
Checking read port address `\modules_3.Queue64_UInt20_4.ram_ext.Memory'[0] in module `\TestPipeline': merged address FF to cell.

2.26.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..

2.26.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.26.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.26.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..

2.26.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..

2.28. Executing MEMORY_LIBMAP pass (mapping memories to cells).
mapping memory TestPipeline.modules_3.Queue64_UInt20.ram_ext.Memory via $__CC_BRAM_TDP_
mapping memory TestPipeline.modules_3.Queue64_UInt20_1.ram_ext.Memory via $__CC_BRAM_TDP_
mapping memory TestPipeline.modules_3.Queue64_UInt20_2.ram_ext.Memory via $__CC_BRAM_TDP_
mapping memory TestPipeline.modules_3.Queue64_UInt20_3.ram_ext.Memory via $__CC_BRAM_TDP_
mapping memory TestPipeline.modules_3.Queue64_UInt20_4.ram_ext.Memory via $__CC_BRAM_TDP_
<suppressed ~1475 debug messages>

2.29. Executing TECHMAP pass (map to technology primitives).

2.29.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gatemate/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gatemate/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__CC_BRAM_TDP_'.
Generating RTLIL representation for module `\$__CC_BRAM_SDP_'.
Successfully finished Verilog frontend.

2.29.2. Continuing TECHMAP pass.
Using template $paramod$533b8039c57341f64ede6d606260e2fb44f23e27\$__CC_BRAM_TDP_ for cells of type $__CC_BRAM_TDP_.
No more expansions possible.
<suppressed ~50 debug messages>

2.30. Executing OPT pass (performing simple optimizations).

2.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.
<suppressed ~30 debug messages>

2.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

2.30.3. Executing OPT_DFF pass (perform DFF optimizations).

2.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..
Removed 4 unused cells and 107 unused wires.
<suppressed ~5 debug messages>

2.30.5. Finished fast OPT passes.

2.31. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

2.32. Executing OPT pass (performing simple optimizations).

2.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
Removed a total of 0 cells.

2.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TestPipeline..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

2.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TestPipeline.
    Consolidated identical input bits for $mux cell $flatten\modules_2.$ternary$TestPipeline.sv:111$16:
      Old ports: A={ $flatten\modules_2.$shr$TestPipeline.sv:111$15_Y \modules_0.out_reg [9:0] }, B={ \modules_1._out_bits_T_2 [9:0] \modules_0.out_reg [9:0] }, Y=\modules_3.Queue64_UInt20.ram_ext.W0_data
      New ports: A=$flatten\modules_2.$shr$TestPipeline.sv:111$15_Y, B=\modules_1._out_bits_T_2 [9:0], Y=\modules_3.Queue64_UInt20.ram_ext.W0_data [19:10]
      New connections: \modules_3.Queue64_UInt20.ram_ext.W0_data [9:0] = \modules_0.out_reg [9:0]
    Consolidated identical input bits for $mux cell $flatten\modules_7.$ternary$TestPipeline.sv:111$16:
      Old ports: A={ $flatten\modules_7.$shr$TestPipeline.sv:111$15_Y \modules_7.in_bits [9:0] }, B=\modules_7.in_bits, Y=\_modules_7_out_bits
      New ports: A=$flatten\modules_7.$shr$TestPipeline.sv:111$15_Y, B=\modules_7.in_bits [19:10], Y=\_modules_7_out_bits [19:10]
      New connections: \_modules_7_out_bits [9:0] = \modules_7.in_bits [9:0]
  Optimizing cells in module \TestPipeline.
Performed a total of 2 changes.

2.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
Removed a total of 0 cells.

2.32.6. Executing OPT_DFF pass (perform DFF optimizations).

2.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..

2.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.32.9. Rerunning OPT passes. (Maybe there is more to do..)

2.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TestPipeline..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

2.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TestPipeline.
Performed a total of 0 changes.

2.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
Removed a total of 0 cells.

2.32.13. Executing OPT_DFF pass (perform DFF optimizations).

2.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..

2.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.32.16. Finished OPT passes. (There is nothing left to do.)

2.33. Executing TECHMAP pass (map to technology primitives).

2.33.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.33.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gatemate/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gatemate/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_gatemate_alu'.
Successfully finished Verilog frontend.

2.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$constmap:a2b650d67b0d3868cd87ae33ef2fed27b5073902$paramod$95e154855bae6318c0e1d8c6d89445337b7a100b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:87388fab37eaebe8a1a963233a9a5921249317bb$paramod$6a6e2032edb304874488459a54d15f2adaab071c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$77511fd6a548f8ed566017c02ef4db095ab5a577\_80_gatemate_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_80_gatemate_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_gatemate_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$7e1a11784cf27386ea37c5ef8b14f91dcd817cba\_80_gatemate_alu for cells of type $alu.
Using template $paramod$66ec77ad03fd12c9dabfacff9efd0d4e34f37640\_80_gatemate_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~965 debug messages>

2.34. Executing OPT pass (performing simple optimizations).

2.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.
<suppressed ~561 debug messages>

2.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
<suppressed ~267 debug messages>
Removed a total of 89 cells.

2.34.3. Executing OPT_DFF pass (perform DFF optimizations).

2.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..
Removed 130 unused cells and 444 unused wires.
<suppressed ~131 debug messages>

2.34.5. Finished fast OPT passes.

2.35. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port TestPipeline.clock using CC_IBUF.
Mapping port TestPipeline.in_bits using CC_IBUF.
Mapping port TestPipeline.in_ready using CC_OBUF.
Mapping port TestPipeline.in_valid using CC_IBUF.
Mapping port TestPipeline.out_bits using CC_OBUF.
Mapping port TestPipeline.out_ready using CC_IBUF.
Mapping port TestPipeline.out_valid using CC_OBUF.
Mapping port TestPipeline.reset using CC_IBUF.
Removed 0 unused cells and 6 unused wires.

2.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..

2.37. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.38. Executing TECHMAP pass (map to technology primitives).

2.38.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gatemate/reg_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gatemate/reg_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFFE_xxxx_'.
Generating RTLIL representation for module `\$_DLATCH_xxx_'.
Successfully finished Verilog frontend.

2.38.2. Continuing TECHMAP pass.
Using template $paramod$0ea0c0ecb89aa8a394fc59f557ec4597a0d47f80\$_DFFE_xxxx_ for cells of type $_DFFE_PP0P_.
Using template $paramod$335f7dd81cc645e1571d5f6da654e3a21aeae03a\$_DFFE_xxxx_ for cells of type $_DFFE_PP0N_.
No more expansions possible.
<suppressed ~223 debug messages>

2.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.40. Executing SIMPLEMAP pass (map simple cells to gate primitives).

2.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..
Removed 0 unused cells and 1026 unused wires.
<suppressed ~1 debug messages>

2.42. Executing MUXCOVER pass (mapping to wider MUXes).
Covering MUX trees in module TestPipeline..
  Treeifying 539 MUXes:
    Found tree with 7 MUXes at root \_modules_7_out_bits [10].
    Found tree with 6 MUXes at root \_modules_7_out_bits [11].
    Found tree with 5 MUXes at root \_modules_7_out_bits [12].
    Found tree with 5 MUXes at root \_modules_7_out_bits [13].
    Found tree with 4 MUXes at root \_modules_7_out_bits [14].
    Found tree with 4 MUXes at root \_modules_7_out_bits [15].
    Found tree with 4 MUXes at root \_modules_7_out_bits [16].
    Found tree with 4 MUXes at root \_modules_7_out_bits [17].
    Found tree with 3 MUXes at root \_modules_7_out_bits [18].
    Found tree with 3 MUXes at root \_modules_7_out_bits [19].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [4].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [5].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [6].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [7].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [8].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [9].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [0].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [1].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [2].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [3].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [4].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [5].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [6].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [7].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [8].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [2].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [3].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [4].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [5].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [6].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [7].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [8].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [9].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$11\buffer[9:0] [0].
    Found tree with 1 MUXes at root $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$11\buffer[9:0] [1].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [4].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [5].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [6].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [7].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [8].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [9].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [10].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [11].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [12].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [13].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [14].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [15].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [16].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [0].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [1].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [2].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [3].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [4].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [5].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [6].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [7].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [8].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [9].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [10].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [11].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [12].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [13].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [14].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [15].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [2].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [3].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [4].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [5].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [6].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [7].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [8].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [9].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [10].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [11].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [12].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [13].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [14].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [15].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [16].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$11\buffer[16:0] [0].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$11\buffer[16:0] [1].
    Found tree with 1 MUXes at root $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$11\buffer[16:0] [8].
    Found tree with 8 MUXes at root \modules_1._out_bits_T_2 [0].
    Found tree with 6 MUXes at root \modules_1._out_bits_T_2 [1].
    Found tree with 6 MUXes at root \modules_1._out_bits_T_2 [2].
    Found tree with 6 MUXes at root \modules_1._out_bits_T_2 [3].
    Found tree with 5 MUXes at root \modules_1._out_bits_T_2 [4].
    Found tree with 5 MUXes at root \modules_1._out_bits_T_2 [5].
    Found tree with 5 MUXes at root \modules_1._out_bits_T_2 [6].
    Found tree with 5 MUXes at root \modules_1._out_bits_T_2 [7].
    Found tree with 3 MUXes at root \modules_1._out_bits_T_2 [8].
    Found tree with 3 MUXes at root \modules_1._out_bits_T_2 [9].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$247 [0].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$247 [1].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$247 [2].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$247 [3].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$247 [4].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$247 [5].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$252 [0].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$252 [1].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$252 [2].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$252 [3].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$252 [4].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$252 [5].
    Found tree with 7 MUXes at root \modules_3.Queue64_UInt20.ram_ext.W0_data [10].
    Found tree with 6 MUXes at root \modules_3.Queue64_UInt20.ram_ext.W0_data [11].
    Found tree with 5 MUXes at root \modules_3.Queue64_UInt20.ram_ext.W0_data [12].
    Found tree with 5 MUXes at root \modules_3.Queue64_UInt20.ram_ext.W0_data [13].
    Found tree with 4 MUXes at root \modules_3.Queue64_UInt20.ram_ext.W0_data [14].
    Found tree with 4 MUXes at root \modules_3.Queue64_UInt20.ram_ext.W0_data [15].
    Found tree with 4 MUXes at root \modules_3.Queue64_UInt20.ram_ext.W0_data [16].
    Found tree with 4 MUXes at root \modules_3.Queue64_UInt20.ram_ext.W0_data [17].
    Found tree with 3 MUXes at root \modules_3.Queue64_UInt20.ram_ext.W0_data [18].
    Found tree with 3 MUXes at root \modules_3.Queue64_UInt20.ram_ext.W0_data [19].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2670.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2570.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$267 [0].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$267 [1].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$267 [2].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$267 [3].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$267 [4].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$267 [5].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$262 [0].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$262 [1].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$262 [2].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$262 [3].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$262 [4].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$262 [5].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$257 [0].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$257 [1].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$257 [2].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$257 [3].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$257 [4].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2874:Mux$257 [5].
    Found tree with 1 MUXes at root \modules_5.in_bits [0].
    Found tree with 1 MUXes at root \modules_5.in_bits [1].
    Found tree with 1 MUXes at root \modules_5.in_bits [2].
    Found tree with 1 MUXes at root \modules_5.in_bits [3].
    Found tree with 1 MUXes at root \modules_5.in_bits [4].
    Found tree with 1 MUXes at root \modules_5.in_bits [5].
    Found tree with 1 MUXes at root \modules_5.in_bits [6].
    Found tree with 1 MUXes at root \modules_5.in_bits [7].
    Found tree with 1 MUXes at root \modules_5.in_bits [8].
    Found tree with 1 MUXes at root \modules_5.in_bits [9].
    Found tree with 1 MUXes at root \modules_5.in_bits [10].
    Found tree with 1 MUXes at root \modules_5.in_bits [11].
    Found tree with 1 MUXes at root \modules_5.in_bits [12].
    Found tree with 1 MUXes at root \modules_5.in_bits [13].
    Found tree with 1 MUXes at root \modules_5.in_bits [14].
    Found tree with 1 MUXes at root \modules_5.in_bits [15].
    Found tree with 1 MUXes at root \modules_5.in_bits [16].
    Found tree with 1 MUXes at root \modules_5.in_bits [17].
    Found tree with 1 MUXes at root \modules_5.in_bits [18].
    Found tree with 1 MUXes at root \modules_5.in_bits [19].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2478.
    Found tree with 7 MUXes at root \modules_6.in_bits [10].
    Found tree with 7 MUXes at root \modules_6.in_bits [11].
    Found tree with 7 MUXes at root \modules_6.in_bits [12].
    Found tree with 7 MUXes at root \modules_6.in_bits [13].
    Found tree with 7 MUXes at root \modules_6.in_bits [14].
    Found tree with 7 MUXes at root \modules_6.in_bits [15].
    Found tree with 7 MUXes at root \modules_6.in_bits [16].
    Found tree with 7 MUXes at root \modules_6.in_bits [17].
    Found tree with 7 MUXes at root \modules_6.in_bits [18].
    Found tree with 7 MUXes at root \modules_6.in_bits [19].
    Found tree with 1 MUXes at root \modules_7.in_bits [0].
    Found tree with 1 MUXes at root \modules_7.in_bits [1].
    Found tree with 1 MUXes at root \modules_7.in_bits [2].
    Found tree with 1 MUXes at root \modules_7.in_bits [3].
    Found tree with 1 MUXes at root \modules_7.in_bits [4].
    Found tree with 1 MUXes at root \modules_7.in_bits [5].
    Found tree with 1 MUXes at root \modules_7.in_bits [6].
    Found tree with 1 MUXes at root \modules_7.in_bits [7].
    Found tree with 1 MUXes at root \modules_7.in_bits [8].
    Found tree with 1 MUXes at root \modules_7.in_bits [9].
    Found tree with 1 MUXes at root \modules_7.in_bits [10].
    Found tree with 1 MUXes at root \modules_7.in_bits [11].
    Found tree with 1 MUXes at root \modules_7.in_bits [12].
    Found tree with 1 MUXes at root \modules_7.in_bits [13].
    Found tree with 1 MUXes at root \modules_7.in_bits [14].
    Found tree with 1 MUXes at root \modules_7.in_bits [15].
    Found tree with 1 MUXes at root \modules_7.in_bits [16].
    Found tree with 1 MUXes at root \modules_7.in_bits [17].
    Found tree with 1 MUXes at root \modules_7.in_bits [18].
    Found tree with 1 MUXes at root \modules_7.in_bits [19].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2674.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2446.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2666.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2662.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2654.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2658.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2650.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2646.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2642.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2638.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2626.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2634.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2630.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2622.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2618.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2442.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2614.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2610.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2598.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2606.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2602.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2594.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2590.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2586.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2582.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2574.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2578.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2566.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2438.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2562.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2558.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2554.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2550.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2546.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2542.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2538.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2534.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2530.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2526.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2522.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2518.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2514.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2510.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2506.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2502.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2498.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2494.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2490.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2486.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2482.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2474.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2470.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2466.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2462.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2458.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2454.
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$11\buffer[9:0] [0].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$11\buffer[9:0] [1].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [2].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [3].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [4].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [5].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [6].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [7].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [8].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [9].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [0].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [1].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [2].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [3].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [4].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [5].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [6].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [7].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [8].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [4].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [5].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [6].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [7].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [8].
    Found tree with 1 MUXes at root $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [9].
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2450.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2430.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2426.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2422.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2418.
    Found tree with 2 MUXes at root $auto$rtlil.cc:2985:MuxGate$2434.
    Finished treeification: Found 272 trees.
  Covering trees:
    Replaced tree at \_modules_7_out_bits [10]: 7 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \_modules_7_out_bits [11]: 6 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \_modules_7_out_bits [12]: 5 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \_modules_7_out_bits [13]: 5 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \_modules_7_out_bits [14]: 4 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \_modules_7_out_bits [15]: 4 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \_modules_7_out_bits [16]: 4 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \_modules_7_out_bits [17]: 4 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \_modules_7_out_bits [18]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \_modules_7_out_bits [19]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$11\buffer[9:0] [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_2.$shr$TestPipeline.sv:111$15.$11\buffer[9:0] [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [10]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [11]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [12]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [13]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [14]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [15]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$4\buffer[16:0] [16]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [10]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [11]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [12]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [13]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [14]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$2\buffer[16:0] [15]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [10]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [11]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [12]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [13]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [14]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [15]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$1\buffer[16:0] [16]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$11\buffer[16:0] [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$11\buffer[16:0] [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_1.$shr$TestPipeline.sv:101$41.$11\buffer[16:0] [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_1._out_bits_T_2 [0]: 5 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_1._out_bits_T_2 [1]: 6 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_1._out_bits_T_2 [2]: 3 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_1._out_bits_T_2 [3]: 3 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_1._out_bits_T_2 [4]: 2 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_1._out_bits_T_2 [5]: 2 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_1._out_bits_T_2 [6]: 2 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_1._out_bits_T_2 [7]: 2 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_1._out_bits_T_2 [8]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_1._out_bits_T_2 [9]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$247 [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$247 [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$247 [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$247 [3]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$247 [4]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$247 [5]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$252 [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$252 [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$252 [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$252 [3]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$252 [4]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$252 [5]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_3.Queue64_UInt20.ram_ext.W0_data [10]: 7 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_3.Queue64_UInt20.ram_ext.W0_data [11]: 6 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_3.Queue64_UInt20.ram_ext.W0_data [12]: 5 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_3.Queue64_UInt20.ram_ext.W0_data [13]: 5 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_3.Queue64_UInt20.ram_ext.W0_data [14]: 4 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_3.Queue64_UInt20.ram_ext.W0_data [15]: 4 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_3.Queue64_UInt20.ram_ext.W0_data [16]: 4 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_3.Queue64_UInt20.ram_ext.W0_data [17]: 4 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_3.Queue64_UInt20.ram_ext.W0_data [18]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_3.Queue64_UInt20.ram_ext.W0_data [19]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2670: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2570: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$267 [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$267 [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$267 [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$267 [3]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$267 [4]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$267 [5]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$262 [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$262 [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$262 [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$262 [3]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$262 [4]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$262 [5]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$257 [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$257 [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$257 [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$257 [3]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$257 [4]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2874:Mux$257 [5]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [10]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [11]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [12]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [13]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [14]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [15]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [16]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [17]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [18]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_5.in_bits [19]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2478: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_6.in_bits [10]: 7 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_6.in_bits [11]: 7 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_6.in_bits [12]: 7 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_6.in_bits [13]: 7 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_6.in_bits [14]: 7 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_6.in_bits [15]: 7 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_6.in_bits [16]: 7 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_6.in_bits [17]: 7 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_6.in_bits [18]: 7 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_6.in_bits [19]: 7 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [10]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [11]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [12]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [13]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [14]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [15]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [16]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [17]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [18]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \modules_7.in_bits [19]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2674: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2446: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2666: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2662: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2654: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2658: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2650: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2646: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2642: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2638: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2626: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2634: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2630: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2622: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2618: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2442: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2614: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2610: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2598: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2606: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2602: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2594: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2590: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2586: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2582: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2574: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2578: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2566: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2438: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2562: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2558: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2554: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2550: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2546: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2542: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2538: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2534: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2530: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2526: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2522: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2518: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2514: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2510: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2506: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2502: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2498: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2494: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2490: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2486: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2482: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2474: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2470: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2466: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2462: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2458: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2454: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$11\buffer[9:0] [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$11\buffer[9:0] [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$1\buffer[9:0] [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$2\buffer[9:0] [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap$flatten\modules_7.$shr$TestPipeline.sv:111$15.$4\buffer[9:0] [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2450: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2430: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2426: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2422: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2418: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:2985:MuxGate$2434: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
  Added a total of 0 decoder MUXes.
<suppressed ~14207 debug messages>

2.43. Executing OPT pass (performing simple optimizations).

2.43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.
<suppressed ~14 debug messages>

2.43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
<suppressed ~180 debug messages>
Removed a total of 60 cells.

2.43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TestPipeline..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TestPipeline.
Performed a total of 0 changes.

2.43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
Removed a total of 0 cells.

2.43.6. Executing OPT_SHARE pass.

2.43.7. Executing OPT_DFF pass (perform DFF optimizations).

2.43.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..
Removed 0 unused cells and 60 unused wires.
<suppressed ~1 debug messages>

2.43.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.43.10. Rerunning OPT passes. (Maybe there is more to do..)

2.43.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TestPipeline..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.43.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TestPipeline.
Performed a total of 0 changes.

2.43.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TestPipeline'.
Removed a total of 0 cells.

2.43.14. Executing OPT_SHARE pass.

2.43.15. Executing OPT_DFF pass (perform DFF optimizations).

2.43.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..

2.43.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module TestPipeline.

2.43.18. Finished OPT passes. (There is nothing left to do.)

2.44. Executing SIMPLEMAP pass (map simple cells to gate primitives).

2.45. Executing TECHMAP pass (map to technology primitives).

2.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gatemate/mux_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gatemate/mux_map.v' to AST representation.
Generating RTLIL representation for module `\$_MUX8_'.
Generating RTLIL representation for module `\$_MUX4_'.
Successfully finished Verilog frontend.

2.45.2. Continuing TECHMAP pass.
Using template \$_MUX4_ for cells of type $_MUX4_.
No more expansions possible.
<suppressed ~11 debug messages>

2.46. Executing ABC pass (technology mapping using ABC).

2.46.1. Extracting gate netlist of module `\TestPipeline' to `<abc-temp-dir>/input.blif'..
Extracted 585 gates and 821 wires to a netlist network with 234 inputs and 148 outputs.

2.46.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     225.
ABC: Participating nodes from both networks       =     491.
ABC: Participating nodes from the first network   =     225. (  70.53 % of nodes)
ABC: Participating nodes from the second network  =     266. (  83.39 % of nodes)
ABC: Node pairs (any polarity)                    =     224. (  70.22 % of names can be moved)
ABC: Node pairs (same polarity)                   =     187. (  58.62 % of names can be moved)
ABC: Total runtime =     0.03 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.46.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      318
ABC RESULTS:        internal signals:      439
ABC RESULTS:           input signals:      234
ABC RESULTS:          output signals:      148
Removing temp directory.
Removed 0 unused cells and 540 unused wires.

2.47. Executing TECHMAP pass (map to technology primitives).

2.47.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gatemate/lut_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gatemate/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.47.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$40882341c54dcd36f630f00dd7e46a35652abd36\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$d6cf0a4b6f6ccd87588da28c41b5b6c258da2509\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$044e8b1893c94f717651c5cd428e71c892566f52\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$ad3a97108c9f4d10f8acfa309b668b9455d3d733\$lut for cells of type $lut.
Using template $paramod$02fbd2dfd8b419c0d6fd5205680ad063cd40eac8\$lut for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$71cb81cd7ec213b39129c5f3867d1aa22dffde1b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod$4da6fe9957da309dc16b8f31a6b80b19c05c808d\$lut for cells of type $lut.
Using template $paramod$a4df2b5be2b644499880e088a11556935f22b401\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$52b0f43ae6cb52b5e726dd3244952f6f33bb5f19\$lut for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod$f54c0ffd7b041ca43eac7710ab19c0666d826c22\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$50666a8f9d622ca1f027a4587dfd5f2a7d8810c9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod$bb07aa4c6c95211b927837b9073769ffabb3aaa5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101100 for cells of type $lut.
Using template $paramod$85572c15d0e9d66498693ed97cf958eb7654462d\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$441de597d9318495d3225f370c9f7379b3b0fd0d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$240307bbace6557f3d46ac64c87ca4d697801fc3\$lut for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$8c24dc0cdd336b7fb88bbf7eed45cec5cbae862b\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~1348 debug messages>
Removed 0 unused cells and 709 unused wires.

2.48. Executing CLKBUFMAP pass (inserting clock buffers).
Inserting CC_BUFG on TestPipeline.modules_0.clock[0].

2.49. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `TestPipeline'. Setting top module to TestPipeline.

2.49.1. Analyzing design hierarchy..
Top module:  \TestPipeline

2.49.2. Analyzing design hierarchy..
Top module:  \TestPipeline
Removed 0 unused modules.

2.50. Printing statistics.

=== TestPipeline ===

   Number of wires:                385
   Number of wire bits:           2535
   Number of public wires:         134
   Number of public wire bits:    1386
   Number of ports:                  8
   Number of port bits:             70
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                781
     $scopeinfo                     18
     CC_ADDF                       190
     CC_BRAM_20K                     5
     CC_BUFG                         1
     CC_DFF                        171
     CC_IBUF                        36
     CC_LUT2                        50
     CC_LUT3                       109
     CC_LUT4                       159
     CC_MULT                         1
     CC_MX4                          7
     CC_OBUF                        34

2.51. Executing CHECK pass (checking for obvious problems).
Checking module TestPipeline...
Found and reported 0 problems.

2.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TestPipeline..
Removed 18 unused cells and 86 unused wires.
<suppressed ~104 debug messages>

3. Executing JSON backend.

End of script. Logfile hash: 4c85b50665, CPU: user 0.31s system 0.01s, MEM: 32.08 MB peak
Yosys 0.50+56 (git sha1 9106d6b3b, clang++ 18.1.3 -fPIC -O3)
Time spent: 37% 1x abc (0 sec), 12% 22x opt_clean (0 sec), ...
make[1]: Leaving directory '/home/nikola/ChiliChips/openCologne/pnr_tests-novi/tests/pipeline/gen_5_8_128_499'
