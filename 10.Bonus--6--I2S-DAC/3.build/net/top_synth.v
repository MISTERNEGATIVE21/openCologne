/* Generated by Yosys 0.42+15 (git sha1 74a1dd99a, g++ 14.1.1 -Os) */

module top(clk, arst_n, uart_rx_serial, led, lrck, din, bck, clk_check);
  wire _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire [15:0] _0025_;
  wire [15:0] _0026_;
  wire [15:0] _0027_;
  wire [15:0] _0028_;
  wire [62:0] _0029_;
  wire [62:0] _0030_;
  wire [62:0] _0031_;
  wire [63:0] _0032_;
  wire [63:0] _0033_;
  wire [63:0] _0034_;
  wire [2:0] _0035_;
  wire [2:0] _0036_;
  wire [2:0] _0037_;
  wire [5:0] _0038_;
  wire [5:0] _0039_;
  wire [5:0] _0040_;
  wire [63:0] _0041_;
  wire [63:0] _0042_;
  wire [63:0] _0043_;
  wire [2:0] _0044_;
  wire [2:0] _0045_;
  wire [2:0] _0046_;
  wire [2:0] _0047_;
  wire [15:0] _0048_;
  wire [15:0] _0049_;
  wire [15:0] _0050_;
  wire [3:0] _0051_;
  wire [3:0] _0052_;
  wire [3:0] _0053_;
  wire [3:0] _0054_;
  wire [62:0] _0055_;
  wire [62:0] _0056_;
  wire [62:0] _0057_;
  wire [63:0] _0058_;
  wire [63:0] _0059_;
  wire [63:0] _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire [15:0] _0065_;
  wire [19:0] _0066_;
  wire [19:0] _0067_;
  wire _0068_;
  wire [11:0] _0069_;
  wire [2:0] _0070_;
  wire [15:0] _0071_;
  wire _0072_;
  wire _0073_;
  wire [63:0] _0074_;
  wire [15:0] _0075_;
  wire [2:0] _0076_;
  wire [3:0] _0077_;
  wire [2:0] _0078_;
  wire [2:0] _0079_;
  wire [3:0] _0080_;
  wire [3:0] _0081_;
  wire [2:0] _0082_;
  wire [3:0] _0083_;
  wire [2:0] _0084_;
  wire [1:0] _0085_;
  wire [3:0] _0086_;
  wire [1:0] _0087_;
  wire [3:0] _0088_;
  wire [3:0] _0089_;
  wire [3:0] _0090_;
  wire [2:0] _0091_;
  wire [3:0] _0092_;
  wire [3:0] _0093_;
  wire [2:0] _0094_;
  wire [1:0] _0095_;
  wire [3:0] _0096_;
  wire [2:0] _0097_;
  wire [2:0] _0098_;
  wire [2:0] _0099_;
  wire [3:0] _0100_;
  wire [2:0] _0101_;
  wire [2:0] _0102_;
  wire [2:0] _0103_;
  wire [1:0] _0104_;
  wire [2:0] _0105_;
  wire [2:0] _0106_;
  wire [2:0] _0107_;
  wire [2:0] _0108_;
  wire [2:0] _0109_;
  wire [3:0] _0110_;
  wire [3:0] _0111_;
  wire [2:0] _0112_;
  wire [2:0] _0113_;
  wire [2:0] _0114_;
  wire [3:0] _0115_;
  wire [2:0] _0116_;
  wire [2:0] _0117_;
  wire [3:0] _0118_;
  wire [2:0] _0119_;
  wire [3:0] _0120_;
  wire [3:0] _0121_;
  wire [2:0] _0122_;
  wire [2:0] _0123_;
  wire [3:0] _0124_;
  wire [3:0] _0125_;
  wire [2:0] _0126_;
  wire [2:0] _0127_;
  wire [2:0] _0128_;
  wire [1:0] _0129_;
  wire [1:0] _0130_;
  wire [3:0] _0131_;
  wire [2:0] _0132_;
  wire [3:0] _0133_;
  wire [2:0] _0134_;
  wire [2:0] _0135_;
  wire [2:0] _0136_;
  wire [2:0] _0137_;
  wire [2:0] _0138_;
  wire [2:0] _0139_;
  wire [3:0] _0140_;
  wire [2:0] _0141_;
  wire [2:0] _0142_;
  wire [3:0] _0143_;
  wire [3:0] _0144_;
  wire [2:0] _0145_;
  wire [2:0] _0146_;
  wire [3:0] _0147_;
  wire [3:0] _0148_;
  wire [2:0] _0149_;
  wire [2:0] _0150_;
  wire [2:0] _0151_;
  wire [2:0] _0152_;
  wire [2:0] _0153_;
  wire [2:0] _0154_;
  wire [2:0] _0155_;
  wire [2:0] _0156_;
  wire [2:0] _0157_;
  wire [3:0] _0158_;
  wire [2:0] _0159_;
  wire [3:0] _0160_;
  wire [2:0] _0161_;
  wire [3:0] _0162_;
  wire [2:0] _0163_;
  wire [3:0] _0164_;
  wire [2:0] _0165_;
  wire [2:0] _0166_;
  wire [2:0] _0167_;
  wire [3:0] _0168_;
  wire [2:0] _0169_;
  wire [2:0] _0170_;
  wire [3:0] _0171_;
  wire [2:0] _0172_;
  input arst_n;
  wire arst_n;
  output bck;
  wire bck;
  input clk;
  wire clk;
  wire clk0;
  wire clk180;
  wire clk270;
  wire clk90;
  output clk_check;
  wire clk_check;
  wire clk_strobe;
  wire \dac.bck ;
  wire \dac.din ;
  wire [2:0] \dac.i2s_clk ;
  wire [5:0] \dac.i2sword ;
  wire \dac.lrck ;
  output din;
  wire din;
  output [7:0] led;
  wire [7:0] led;
  output lrck;
  wire lrck;
  wire [63:0] phase_increment;
  wire [63:0] \sine_gen_inst.phase_accumulator ;
  wire [7:0] uart_rx_byte;
  wire uart_rx_data_valid;
  wire \uart_rx_inst.i_Rx_Serial ;
  wire [2:0] \uart_rx_inst.r_Bit_Index ;
  wire [15:0] \uart_rx_inst.r_Clock_Count ;
  wire [7:0] \uart_rx_inst.r_Rx_Byte ;
  wire \uart_rx_inst.r_Rx_DV ;
  wire \uart_rx_inst.r_Rx_DV_last ;
  wire \uart_rx_inst.r_Rx_Data ;
  wire \uart_rx_inst.r_Rx_Data_R ;
  wire [2:0] \uart_rx_inst.r_SM_Main ;
  input uart_rx_serial;
  wire uart_rx_serial;
  wire usr_pll_lock;
  wire usr_pll_lock_stdy;
  wire usr_ref_out;
  CC_LUT3 #(
    .INIT(8'h8f)
  ) _0173_ (
    .I0(_0083_[1]),
    .I1(_0060_[0]),
    .I2(_0149_[2]),
    .O(_0074_[0])
  );
  CC_LUT3 #(
    .INIT(8'h07)
  ) _0174_ (
    .I0(_0034_[0]),
    .I1(_0078_[1]),
    .I2(_0078_[2]),
    .O(_0149_[2])
  );
  CC_LUT4 #(
    .INIT(16'h4000)
  ) _0175_ (
    .I0(uart_rx_byte[0]),
    .I1(_0077_[1]),
    .I2(_0077_[2]),
    .I3(uart_rx_byte[1]),
    .O(_0078_[2])
  );
  CC_LUT2 #(
    .INIT(4'h4)
  ) _0176_ (
    .I0(uart_rx_byte[3]),
    .I1(uart_rx_byte[2]),
    .O(_0077_[2])
  );
  CC_LUT4 #(
    .INIT(16'h1000)
  ) _0177_ (
    .I0(uart_rx_byte[4]),
    .I1(uart_rx_byte[7]),
    .I2(uart_rx_byte[6]),
    .I3(uart_rx_byte[5]),
    .O(_0077_[1])
  );
  CC_LUT3 #(
    .INIT(8'h80)
  ) _0178_ (
    .I0(_0076_[0]),
    .I1(_0076_[1]),
    .I2(_0076_[2]),
    .O(_0078_[1])
  );
  CC_LUT3 #(
    .INIT(8'h40)
  ) _0179_ (
    .I0(uart_rx_byte[7]),
    .I1(uart_rx_byte[6]),
    .I2(uart_rx_byte[5]),
    .O(_0076_[0])
  );
  CC_LUT3 #(
    .INIT(8'h01)
  ) _0180_ (
    .I0(uart_rx_byte[3]),
    .I1(uart_rx_byte[0]),
    .I2(uart_rx_byte[2]),
    .O(_0076_[1])
  );
  CC_LUT2 #(
    .INIT(4'h4)
  ) _0181_ (
    .I0(uart_rx_byte[1]),
    .I1(uart_rx_byte[4]),
    .O(_0076_[2])
  );
  CC_LUT4 #(
    .INIT(16'h8000)
  ) _0182_ (
    .I0(_0077_[1]),
    .I1(_0079_[1]),
    .I2(uart_rx_byte[0]),
    .I3(uart_rx_byte[1]),
    .O(_0083_[1])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0183_ (
    .I0(uart_rx_byte[3]),
    .I1(uart_rx_byte[2]),
    .O(_0079_[1])
  );
  CC_LUT4 #(
    .INIT(16'hefff)
  ) _0184_ (
    .I0(_0148_[0]),
    .I1(_0148_[1]),
    .I2(_0086_[2]),
    .I3(_0148_[3]),
    .O(_0074_[1])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0185_ (
    .I0(_0080_[2]),
    .I1(_0031_[0]),
    .O(_0148_[0])
  );
  CC_LUT3 #(
    .INIT(8'h80)
  ) _0186_ (
    .I0(_0077_[1]),
    .I1(_0079_[1]),
    .I2(_0079_[2]),
    .O(_0080_[2])
  );
  CC_LUT2 #(
    .INIT(4'h4)
  ) _0187_ (
    .I0(uart_rx_byte[1]),
    .I1(uart_rx_byte[0]),
    .O(_0079_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0188_ (
    .I0(_0060_[1]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[1]),
    .O(_0148_[3])
  );
  CC_LUT2 #(
    .INIT(4'h1)
  ) _0189_ (
    .I0(_0085_[0]),
    .I1(_0085_[1]),
    .O(_0086_[2])
  );
  CC_LUT4 #(
    .INIT(16'h8000)
  ) _0190_ (
    .I0(_0077_[2]),
    .I1(_0077_[1]),
    .I2(uart_rx_byte[0]),
    .I3(uart_rx_byte[1]),
    .O(_0085_[0])
  );
  CC_LUT3 #(
    .INIT(8'h80)
  ) _0191_ (
    .I0(_0077_[1]),
    .I1(_0084_[1]),
    .I2(_0079_[2]),
    .O(_0085_[1])
  );
  CC_LUT2 #(
    .INIT(4'h1)
  ) _0192_ (
    .I0(uart_rx_byte[3]),
    .I1(uart_rx_byte[2]),
    .O(_0084_[1])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0193_ (
    .I0(_0080_[1]),
    .I1(_0057_[0]),
    .O(_0148_[1])
  );
  CC_LUT4 #(
    .INIT(16'h4000)
  ) _0194_ (
    .I0(uart_rx_byte[0]),
    .I1(_0079_[1]),
    .I2(_0077_[1]),
    .I3(uart_rx_byte[1]),
    .O(_0080_[1])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0195_ (
    .I0(_0085_[1]),
    .I1(_0145_[1]),
    .I2(_0145_[2]),
    .O(_0074_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0196_ (
    .I0(_0031_[1]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[2]),
    .O(_0145_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0197_ (
    .I0(_0057_[1]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[2]),
    .O(_0145_[1])
  );
  CC_LUT4 #(
    .INIT(16'h8000)
  ) _0198_ (
    .I0(_0077_[1]),
    .I1(_0079_[1]),
    .I2(uart_rx_byte[0]),
    .I3(uart_rx_byte[1]),
    .O(_0081_[2])
  );
  CC_LUT4 #(
    .INIT(16'hf8ff)
  ) _0199_ (
    .I0(_0060_[3]),
    .I1(_0083_[1]),
    .I2(_0147_[2]),
    .I3(_0147_[3]),
    .O(_0074_[3])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0200_ (
    .I0(_0080_[1]),
    .I1(_0057_[2]),
    .O(_0147_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0201_ (
    .I0(_0031_[2]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[3]),
    .O(_0147_[3])
  );
  CC_LUT4 #(
    .INIT(16'hf8ff)
  ) _0202_ (
    .I0(_0060_[4]),
    .I1(_0083_[1]),
    .I2(_0143_[2]),
    .I3(_0143_[3]),
    .O(_0074_[4])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0203_ (
    .I0(_0080_[1]),
    .I1(_0057_[3]),
    .O(_0143_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0204_ (
    .I0(_0031_[3]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[4]),
    .O(_0143_[3])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0205_ (
    .I0(_0085_[1]),
    .I1(_0146_[1]),
    .I2(_0146_[2]),
    .O(_0074_[5])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0206_ (
    .I0(_0031_[4]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[5]),
    .O(_0146_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0207_ (
    .I0(_0057_[4]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[5]),
    .O(_0146_[1])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0208_ (
    .I0(_0105_[0]),
    .I1(_0142_[1]),
    .I2(_0142_[2]),
    .O(_0074_[6])
  );
  CC_LUT2 #(
    .INIT(4'h1)
  ) _0209_ (
    .I0(_0085_[0]),
    .I1(_0104_[1]),
    .O(_0105_[0])
  );
  CC_LUT3 #(
    .INIT(8'h80)
  ) _0210_ (
    .I0(_0077_[1]),
    .I1(_0076_[1]),
    .I2(uart_rx_byte[1]),
    .O(_0104_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0211_ (
    .I0(_0057_[5]),
    .I1(_0080_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[6]),
    .O(_0142_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0212_ (
    .I0(_0031_[5]),
    .I1(_0080_[2]),
    .I2(_0081_[2]),
    .I3(_0060_[6]),
    .O(_0142_[2])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0213_ (
    .I0(_0132_[0]),
    .I1(_0141_[1]),
    .I2(_0141_[2]),
    .O(_0074_[7])
  );
  CC_LUT2 #(
    .INIT(4'h1)
  ) _0214_ (
    .I0(_0087_[0]),
    .I1(_0085_[1]),
    .O(_0132_[0])
  );
  CC_LUT3 #(
    .INIT(8'h80)
  ) _0215_ (
    .I0(_0077_[2]),
    .I1(_0077_[1]),
    .I2(uart_rx_byte[1]),
    .O(_0087_[0])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0216_ (
    .I0(_0031_[6]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[7]),
    .O(_0141_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0217_ (
    .I0(_0057_[6]),
    .I1(_0080_[1]),
    .I2(_0083_[1]),
    .I3(_0060_[7]),
    .O(_0141_[2])
  );
  CC_LUT4 #(
    .INIT(16'h8fff)
  ) _0218_ (
    .I0(_0057_[7]),
    .I1(_0080_[1]),
    .I2(_0105_[0]),
    .I3(_0144_[3]),
    .O(_0074_[8])
  );
  CC_LUT4 #(
    .INIT(16'h0007)
  ) _0219_ (
    .I0(_0060_[8]),
    .I1(_0083_[1]),
    .I2(_0140_[2]),
    .I3(_0140_[3]),
    .O(_0144_[3])
  );
  CC_LUT4 #(
    .INIT(16'h8000)
  ) _0220_ (
    .I0(_0077_[1]),
    .I1(_0079_[1]),
    .I2(_0079_[2]),
    .I3(_0031_[7]),
    .O(_0140_[3])
  );
  CC_LUT4 #(
    .INIT(16'h8000)
  ) _0221_ (
    .I0(_0076_[0]),
    .I1(_0076_[1]),
    .I2(_0076_[2]),
    .I3(_0034_[8]),
    .O(_0140_[2])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0222_ (
    .I0(_0082_[0]),
    .I1(_0082_[1]),
    .I2(_0082_[2]),
    .O(_0074_[9])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0223_ (
    .I0(_0057_[8]),
    .I1(_0080_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[9]),
    .O(_0082_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0224_ (
    .I0(_0031_[8]),
    .I1(_0080_[2]),
    .I2(_0081_[2]),
    .I3(_0060_[9]),
    .O(_0082_[1])
  );
  CC_LUT4 #(
    .INIT(16'h1000)
  ) _0225_ (
    .I0(uart_rx_byte[3]),
    .I1(uart_rx_byte[0]),
    .I2(_0077_[1]),
    .I3(uart_rx_byte[1]),
    .O(_0082_[0])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0226_ (
    .I0(_0138_[0]),
    .I1(_0098_[0]),
    .I2(_0138_[2]),
    .O(_0074_[10])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0227_ (
    .I0(_0060_[10]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[10]),
    .O(_0138_[0])
  );
  CC_LUT2 #(
    .INIT(4'h4)
  ) _0228_ (
    .I0(_0087_[0]),
    .I1(_0087_[1]),
    .O(_0098_[0])
  );
  CC_LUT4 #(
    .INIT(16'h9fff)
  ) _0229_ (
    .I0(uart_rx_byte[0]),
    .I1(uart_rx_byte[1]),
    .I2(_0077_[1]),
    .I3(_0084_[1]),
    .O(_0087_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0230_ (
    .I0(_0057_[9]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[9]),
    .O(_0138_[2])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0231_ (
    .I0(_0078_[2]),
    .I1(_0137_[1]),
    .I2(_0137_[2]),
    .O(_0074_[11])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0232_ (
    .I0(_0057_[10]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[10]),
    .O(_0137_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0233_ (
    .I0(_0060_[11]),
    .I1(_0081_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[11]),
    .O(_0137_[1])
  );
  CC_LUT4 #(
    .INIT(16'h8fff)
  ) _0234_ (
    .I0(_0057_[11]),
    .I1(_0080_[1]),
    .I2(_0086_[2]),
    .I3(_0086_[3]),
    .O(_0074_[12])
  );
  CC_LUT4 #(
    .INIT(16'h0007)
  ) _0235_ (
    .I0(_0060_[12]),
    .I1(_0083_[1]),
    .I2(_0083_[2]),
    .I3(_0083_[3]),
    .O(_0086_[3])
  );
  CC_LUT4 #(
    .INIT(16'h8000)
  ) _0236_ (
    .I0(_0077_[1]),
    .I1(_0079_[1]),
    .I2(_0079_[2]),
    .I3(_0031_[11]),
    .O(_0083_[3])
  );
  CC_LUT4 #(
    .INIT(16'h8000)
  ) _0237_ (
    .I0(_0076_[0]),
    .I1(_0076_[1]),
    .I2(_0076_[2]),
    .I3(_0034_[12]),
    .O(_0083_[2])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0238_ (
    .I0(_0105_[0]),
    .I1(_0135_[1]),
    .I2(_0135_[2]),
    .O(_0074_[13])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0239_ (
    .I0(_0057_[12]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[12]),
    .O(_0135_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0240_ (
    .I0(_0060_[13]),
    .I1(_0081_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[13]),
    .O(_0135_[2])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0241_ (
    .I0(_0132_[0]),
    .I1(_0139_[1]),
    .I2(_0139_[2]),
    .O(_0074_[14])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0242_ (
    .I0(_0031_[13]),
    .I1(_0080_[2]),
    .I2(_0083_[1]),
    .I3(_0060_[14]),
    .O(_0139_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0243_ (
    .I0(_0057_[13]),
    .I1(_0080_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[14]),
    .O(_0139_[2])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0244_ (
    .I0(_0105_[0]),
    .I1(_0122_[1]),
    .I2(_0122_[2]),
    .O(_0074_[15])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0245_ (
    .I0(_0057_[14]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[15]),
    .O(_0122_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0246_ (
    .I0(_0031_[14]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[15]),
    .O(_0122_[2])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0247_ (
    .I0(_0082_[0]),
    .I1(_0136_[1]),
    .I2(_0136_[2]),
    .O(_0074_[16])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0248_ (
    .I0(_0057_[15]),
    .I1(_0080_[1]),
    .I2(_0083_[1]),
    .I3(_0060_[16]),
    .O(_0136_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0249_ (
    .I0(_0031_[15]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[16]),
    .O(_0136_[1])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0250_ (
    .I0(_0078_[2]),
    .I1(_0102_[1]),
    .I2(_0102_[2]),
    .O(_0074_[17])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0251_ (
    .I0(_0057_[16]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[16]),
    .O(_0102_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0252_ (
    .I0(_0060_[17]),
    .I1(_0081_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[17]),
    .O(_0102_[1])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0253_ (
    .I0(_0134_[0]),
    .I1(_0134_[1]),
    .I2(_0087_[1]),
    .O(_0074_[18])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0254_ (
    .I0(_0031_[17]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[18]),
    .O(_0134_[0])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0255_ (
    .I0(_0057_[17]),
    .I1(_0080_[1]),
    .I2(_0083_[1]),
    .I3(_0060_[18]),
    .O(_0134_[1])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0256_ (
    .I0(_0098_[0]),
    .I1(_0098_[1]),
    .I2(_0098_[2]),
    .O(_0074_[19])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0257_ (
    .I0(_0031_[18]),
    .I1(_0080_[2]),
    .I2(_0083_[1]),
    .I3(_0060_[19]),
    .O(_0098_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0258_ (
    .I0(_0057_[18]),
    .I1(_0080_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[19]),
    .O(_0098_[2])
  );
  CC_LUT4 #(
    .INIT(16'h8fff)
  ) _0259_ (
    .I0(_0031_[19]),
    .I1(_0080_[2]),
    .I2(_0168_[2]),
    .I3(_0168_[3]),
    .O(_0074_[20])
  );
  CC_LUT4 #(
    .INIT(16'h0007)
  ) _0260_ (
    .I0(_0057_[19]),
    .I1(_0080_[1]),
    .I2(_0078_[2]),
    .I3(_0085_[1]),
    .O(_0168_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0261_ (
    .I0(_0060_[20]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[20]),
    .O(_0168_[3])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0262_ (
    .I0(_0085_[0]),
    .I1(_0099_[1]),
    .I2(_0099_[2]),
    .O(_0074_[21])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0263_ (
    .I0(_0057_[20]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[20]),
    .O(_0099_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0264_ (
    .I0(_0060_[21]),
    .I1(_0081_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[21]),
    .O(_0099_[1])
  );
  CC_LUT4 #(
    .INIT(16'hf8ff)
  ) _0265_ (
    .I0(_0057_[21]),
    .I1(_0080_[1]),
    .I2(_0100_[2]),
    .I3(_0100_[3]),
    .O(_0074_[22])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0266_ (
    .I0(_0080_[2]),
    .I1(_0031_[21]),
    .O(_0100_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0267_ (
    .I0(_0060_[22]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[22]),
    .O(_0100_[3])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0268_ (
    .I0(_0085_[1]),
    .I1(_0151_[1]),
    .I2(_0151_[2]),
    .O(_0074_[23])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0269_ (
    .I0(_0060_[23]),
    .I1(_0081_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[23]),
    .O(_0151_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0270_ (
    .I0(_0057_[22]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[22]),
    .O(_0151_[1])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0271_ (
    .I0(_0085_[1]),
    .I1(_0101_[1]),
    .I2(_0101_[2]),
    .O(_0074_[24])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0272_ (
    .I0(_0031_[23]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[24]),
    .O(_0101_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0273_ (
    .I0(_0057_[23]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[24]),
    .O(_0101_[1])
  );
  CC_LUT4 #(
    .INIT(16'hf8ff)
  ) _0274_ (
    .I0(_0057_[24]),
    .I1(_0080_[1]),
    .I2(_0096_[2]),
    .I3(_0096_[3]),
    .O(_0074_[25])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0275_ (
    .I0(_0078_[1]),
    .I1(_0034_[25]),
    .O(_0096_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0276_ (
    .I0(_0031_[24]),
    .I1(_0080_[2]),
    .I2(_0083_[1]),
    .I3(_0060_[25]),
    .O(_0096_[3])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0277_ (
    .I0(_0150_[0]),
    .I1(_0097_[0]),
    .I2(_0150_[2]),
    .O(_0074_[26])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0278_ (
    .I0(_0060_[26]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[26]),
    .O(_0150_[0])
  );
  CC_LUT2 #(
    .INIT(4'h4)
  ) _0279_ (
    .I0(_0085_[0]),
    .I1(_0087_[1]),
    .O(_0097_[0])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0280_ (
    .I0(_0057_[25]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[25]),
    .O(_0150_[2])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0281_ (
    .I0(_0132_[0]),
    .I1(_0132_[1]),
    .I2(_0132_[2]),
    .O(_0074_[27])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0282_ (
    .I0(_0031_[26]),
    .I1(_0080_[2]),
    .I2(_0083_[1]),
    .I3(_0060_[27]),
    .O(_0132_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0283_ (
    .I0(_0057_[26]),
    .I1(_0080_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[27]),
    .O(_0132_[2])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0284_ (
    .I0(_0097_[0]),
    .I1(_0097_[1]),
    .I2(_0097_[2]),
    .O(_0074_[28])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0285_ (
    .I0(_0031_[27]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[28]),
    .O(_0097_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0286_ (
    .I0(_0057_[27]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[28]),
    .O(_0097_[2])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0287_ (
    .I0(_0169_[0]),
    .I1(_0125_[3]),
    .I2(_0169_[2]),
    .O(_0074_[29])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0288_ (
    .I0(_0031_[28]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[29]),
    .O(_0169_[0])
  );
  CC_LUT2 #(
    .INIT(4'h4)
  ) _0289_ (
    .I0(_0078_[2]),
    .I1(_0087_[1]),
    .O(_0125_[3])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0290_ (
    .I0(_0057_[28]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[29]),
    .O(_0169_[2])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0291_ (
    .I0(_0098_[0]),
    .I1(_0170_[1]),
    .I2(_0170_[2]),
    .O(_0074_[30])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0292_ (
    .I0(_0060_[30]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[30]),
    .O(_0170_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0293_ (
    .I0(_0057_[29]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[29]),
    .O(_0170_[2])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0294_ (
    .I0(_0078_[2]),
    .I1(_0103_[1]),
    .I2(_0103_[2]),
    .O(_0074_[31])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0295_ (
    .I0(_0057_[30]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[31]),
    .O(_0103_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0296_ (
    .I0(_0031_[30]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[31]),
    .O(_0103_[1])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0297_ (
    .I0(_0085_[0]),
    .I1(_0172_[1]),
    .I2(_0172_[2]),
    .O(_0074_[32])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0298_ (
    .I0(_0057_[31]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[31]),
    .O(_0172_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0299_ (
    .I0(_0060_[32]),
    .I1(_0081_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[32]),
    .O(_0172_[1])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0300_ (
    .I0(_0105_[0]),
    .I1(_0105_[1]),
    .I2(_0105_[2]),
    .O(_0074_[33])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0301_ (
    .I0(_0057_[32]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[32]),
    .O(_0105_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0302_ (
    .I0(_0060_[33]),
    .I1(_0081_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[33]),
    .O(_0105_[2])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0303_ (
    .I0(_0087_[0]),
    .I1(_0126_[1]),
    .I2(_0126_[2]),
    .O(_0074_[34])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0304_ (
    .I0(_0031_[33]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[34]),
    .O(_0126_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0305_ (
    .I0(_0057_[33]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[34]),
    .O(_0126_[1])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0306_ (
    .I0(_0097_[0]),
    .I1(_0106_[1]),
    .I2(_0106_[2]),
    .O(_0074_[35])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0307_ (
    .I0(_0031_[34]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[35]),
    .O(_0106_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0308_ (
    .I0(_0057_[34]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[35]),
    .O(_0106_[2])
  );
  CC_LUT4 #(
    .INIT(16'hefff)
  ) _0309_ (
    .I0(_0125_[0]),
    .I1(_0125_[1]),
    .I2(_0125_[2]),
    .I3(_0125_[3]),
    .O(_0074_[36])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0310_ (
    .I0(_0080_[2]),
    .I1(_0031_[35]),
    .O(_0125_[0])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0311_ (
    .I0(_0060_[36]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[36]),
    .O(_0125_[2])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0312_ (
    .I0(_0080_[1]),
    .I1(_0057_[35]),
    .O(_0125_[1])
  );
  CC_LUT4 #(
    .INIT(16'h8fff)
  ) _0313_ (
    .I0(_0057_[36]),
    .I1(_0080_[1]),
    .I2(_0154_[0]),
    .I3(_0171_[3]),
    .O(_0074_[37])
  );
  CC_LUT2 #(
    .INIT(4'h1)
  ) _0314_ (
    .I0(_0078_[2]),
    .I1(_0085_[1]),
    .O(_0154_[0])
  );
  CC_LUT4 #(
    .INIT(16'h0007)
  ) _0315_ (
    .I0(_0060_[37]),
    .I1(_0083_[1]),
    .I2(_0124_[2]),
    .I3(_0124_[3]),
    .O(_0171_[3])
  );
  CC_LUT4 #(
    .INIT(16'h8000)
  ) _0316_ (
    .I0(_0076_[0]),
    .I1(_0076_[1]),
    .I2(_0076_[2]),
    .I3(_0034_[37]),
    .O(_0124_[3])
  );
  CC_LUT4 #(
    .INIT(16'h8000)
  ) _0317_ (
    .I0(_0077_[1]),
    .I1(_0079_[1]),
    .I2(_0079_[2]),
    .I3(_0031_[36]),
    .O(_0124_[2])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0318_ (
    .I0(_0107_[0]),
    .I1(_0107_[1]),
    .I2(_0087_[1]),
    .O(_0074_[38])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0319_ (
    .I0(_0031_[37]),
    .I1(_0080_[2]),
    .I2(_0083_[1]),
    .I3(_0060_[38]),
    .O(_0107_[0])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0320_ (
    .I0(_0057_[37]),
    .I1(_0080_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[38]),
    .O(_0107_[1])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0321_ (
    .I0(_0098_[0]),
    .I1(_0167_[1]),
    .I2(_0167_[2]),
    .O(_0074_[39])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0322_ (
    .I0(_0031_[38]),
    .I1(_0080_[2]),
    .I2(_0083_[1]),
    .I3(_0060_[39]),
    .O(_0167_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0323_ (
    .I0(_0057_[38]),
    .I1(_0080_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[39]),
    .O(_0167_[2])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0324_ (
    .I0(_0078_[2]),
    .I1(_0108_[1]),
    .I2(_0108_[2]),
    .O(_0074_[40])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0325_ (
    .I0(_0057_[39]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[40]),
    .O(_0108_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0326_ (
    .I0(_0031_[39]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[40]),
    .O(_0108_[1])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0327_ (
    .I0(_0085_[0]),
    .I1(_0166_[1]),
    .I2(_0166_[2]),
    .O(_0074_[41])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0328_ (
    .I0(_0057_[40]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[40]),
    .O(_0166_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0329_ (
    .I0(_0060_[41]),
    .I1(_0081_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[41]),
    .O(_0166_[1])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0330_ (
    .I0(_0085_[1]),
    .I1(_0109_[1]),
    .I2(_0109_[2]),
    .O(_0074_[42])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0331_ (
    .I0(_0060_[42]),
    .I1(_0081_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[42]),
    .O(_0109_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0332_ (
    .I0(_0057_[41]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[41]),
    .O(_0109_[1])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0333_ (
    .I0(_0085_[1]),
    .I1(_0165_[1]),
    .I2(_0165_[2]),
    .O(_0074_[43])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0334_ (
    .I0(_0060_[43]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[43]),
    .O(_0165_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0335_ (
    .I0(_0057_[42]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[42]),
    .O(_0165_[1])
  );
  CC_LUT4 #(
    .INIT(16'hf8ff)
  ) _0336_ (
    .I0(_0057_[43]),
    .I1(_0080_[1]),
    .I2(_0110_[2]),
    .I3(_0110_[3]),
    .O(_0074_[44])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0337_ (
    .I0(_0080_[2]),
    .I1(_0031_[43]),
    .O(_0110_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0338_ (
    .I0(_0060_[44]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[44]),
    .O(_0110_[3])
  );
  CC_LUT4 #(
    .INIT(16'hf8ff)
  ) _0339_ (
    .I0(_0057_[44]),
    .I1(_0080_[1]),
    .I2(_0164_[2]),
    .I3(_0164_[3]),
    .O(_0074_[45])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0340_ (
    .I0(_0078_[1]),
    .I1(_0034_[45]),
    .O(_0164_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0341_ (
    .I0(_0031_[44]),
    .I1(_0080_[2]),
    .I2(_0083_[1]),
    .I3(_0060_[45]),
    .O(_0164_[3])
  );
  CC_LUT4 #(
    .INIT(16'h8fff)
  ) _0342_ (
    .I0(_0031_[45]),
    .I1(_0080_[2]),
    .I2(_0111_[2]),
    .I3(_0111_[3]),
    .O(_0074_[46])
  );
  CC_LUT4 #(
    .INIT(16'h0007)
  ) _0343_ (
    .I0(_0057_[45]),
    .I1(_0080_[1]),
    .I2(_0104_[1]),
    .I3(_0085_[0]),
    .O(_0111_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0344_ (
    .I0(_0060_[46]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[46]),
    .O(_0111_[3])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0345_ (
    .I0(_0087_[0]),
    .I1(_0163_[1]),
    .I2(_0163_[2]),
    .O(_0074_[47])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0346_ (
    .I0(_0031_[46]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[47]),
    .O(_0163_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0347_ (
    .I0(_0057_[46]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[47]),
    .O(_0163_[1])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0348_ (
    .I0(_0097_[0]),
    .I1(_0112_[1]),
    .I2(_0112_[2]),
    .O(_0074_[48])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0349_ (
    .I0(_0060_[48]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[48]),
    .O(_0112_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0350_ (
    .I0(_0057_[47]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[47]),
    .O(_0112_[2])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0351_ (
    .I0(_0125_[3]),
    .I1(_0161_[1]),
    .I2(_0161_[2]),
    .O(_0074_[49])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0352_ (
    .I0(_0060_[49]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[49]),
    .O(_0161_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0353_ (
    .I0(_0057_[48]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[48]),
    .O(_0161_[2])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0354_ (
    .I0(_0113_[0]),
    .I1(_0113_[1]),
    .I2(_0113_[2]),
    .O(_0074_[50])
  );
  CC_LUT2 #(
    .INIT(4'h1)
  ) _0355_ (
    .I0(_0087_[0]),
    .I1(_0104_[1]),
    .O(_0113_[0])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0356_ (
    .I0(_0060_[50]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[50]),
    .O(_0113_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0357_ (
    .I0(_0057_[49]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[49]),
    .O(_0113_[2])
  );
  CC_LUT4 #(
    .INIT(16'h8fff)
  ) _0358_ (
    .I0(_0060_[51]),
    .I1(_0083_[1]),
    .I2(_0158_[2]),
    .I3(_0158_[3]),
    .O(_0074_[51])
  );
  CC_LUT4 #(
    .INIT(16'h0007)
  ) _0359_ (
    .I0(_0057_[50]),
    .I1(_0080_[1]),
    .I2(_0078_[2]),
    .I3(_0085_[1]),
    .O(_0158_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0360_ (
    .I0(_0031_[50]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[51]),
    .O(_0158_[3])
  );
  CC_LUT4 #(
    .INIT(16'h8fff)
  ) _0361_ (
    .I0(_0057_[51]),
    .I1(_0080_[1]),
    .I2(_0086_[2]),
    .I3(_0162_[3]),
    .O(_0074_[52])
  );
  CC_LUT4 #(
    .INIT(16'h0007)
  ) _0362_ (
    .I0(_0060_[52]),
    .I1(_0083_[1]),
    .I2(_0160_[2]),
    .I3(_0160_[3]),
    .O(_0162_[3])
  );
  CC_LUT4 #(
    .INIT(16'h8000)
  ) _0363_ (
    .I0(_0077_[1]),
    .I1(_0079_[1]),
    .I2(_0079_[2]),
    .I3(_0031_[51]),
    .O(_0160_[3])
  );
  CC_LUT4 #(
    .INIT(16'h8000)
  ) _0364_ (
    .I0(_0076_[0]),
    .I1(_0076_[1]),
    .I2(_0076_[2]),
    .I3(_0034_[52]),
    .O(_0160_[2])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0365_ (
    .I0(_0097_[0]),
    .I1(_0156_[1]),
    .I2(_0156_[2]),
    .O(_0074_[53])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0366_ (
    .I0(_0060_[53]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[53]),
    .O(_0156_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0367_ (
    .I0(_0057_[52]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[52]),
    .O(_0156_[2])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0368_ (
    .I0(_0087_[0]),
    .I1(_0159_[1]),
    .I2(_0159_[2]),
    .O(_0074_[54])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0369_ (
    .I0(_0031_[53]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[54]),
    .O(_0159_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0370_ (
    .I0(_0057_[53]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[54]),
    .O(_0159_[1])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0371_ (
    .I0(_0097_[0]),
    .I1(_0155_[1]),
    .I2(_0155_[2]),
    .O(_0074_[55])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0372_ (
    .I0(_0060_[55]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[55]),
    .O(_0155_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0373_ (
    .I0(_0057_[54]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[54]),
    .O(_0155_[2])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0374_ (
    .I0(_0082_[0]),
    .I1(_0157_[1]),
    .I2(_0157_[2]),
    .O(_0074_[56])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0375_ (
    .I0(_0057_[55]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[56]),
    .O(_0157_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0376_ (
    .I0(_0031_[55]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[56]),
    .O(_0157_[1])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0377_ (
    .I0(_0154_[0]),
    .I1(_0154_[1]),
    .I2(_0154_[2]),
    .O(_0074_[57])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0378_ (
    .I0(_0057_[56]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[56]),
    .O(_0154_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0379_ (
    .I0(_0060_[57]),
    .I1(_0081_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[57]),
    .O(_0154_[2])
  );
  CC_LUT3 #(
    .INIT(8'h07)
  ) _0380_ (
    .I0(_0034_[58]),
    .I1(_0078_[1]),
    .I2(_0104_[1]),
    .O(_0123_[2])
  );
  CC_LUT3 #(
    .INIT(8'h7f)
  ) _0381_ (
    .I0(_0113_[0]),
    .I1(_0153_[1]),
    .I2(_0153_[2]),
    .O(_0074_[59])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0382_ (
    .I0(_0057_[58]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[58]),
    .O(_0153_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0383_ (
    .I0(_0060_[59]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[59]),
    .O(_0153_[2])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0384_ (
    .I0(_0078_[2]),
    .I1(_0114_[1]),
    .I2(_0114_[2]),
    .O(_0074_[60])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0385_ (
    .I0(_0057_[59]),
    .I1(_0080_[1]),
    .I2(_0081_[2]),
    .I3(_0060_[60]),
    .O(_0114_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0386_ (
    .I0(_0031_[59]),
    .I1(_0080_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[60]),
    .O(_0114_[1])
  );
  CC_LUT3 #(
    .INIT(8'hbf)
  ) _0387_ (
    .I0(_0085_[0]),
    .I1(_0152_[1]),
    .I2(_0152_[2]),
    .O(_0074_[61])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0388_ (
    .I0(_0057_[60]),
    .I1(_0080_[1]),
    .I2(_0080_[2]),
    .I3(_0031_[60]),
    .O(_0152_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0389_ (
    .I0(_0060_[61]),
    .I1(_0081_[2]),
    .I2(_0078_[1]),
    .I3(_0034_[61]),
    .O(_0152_[1])
  );
  CC_LUT4 #(
    .INIT(16'hf8ff)
  ) _0390_ (
    .I0(_0057_[61]),
    .I1(_0080_[1]),
    .I2(_0115_[2]),
    .I3(_0115_[3]),
    .O(_0074_[62])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0391_ (
    .I0(_0080_[2]),
    .I1(_0031_[61]),
    .O(_0115_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0392_ (
    .I0(_0060_[62]),
    .I1(_0083_[1]),
    .I2(_0078_[1]),
    .I3(_0034_[62]),
    .O(_0115_[3])
  );
  CC_LUT4 #(
    .INIT(16'hf8ff)
  ) _0393_ (
    .I0(_0057_[62]),
    .I1(_0080_[1]),
    .I2(_0133_[2]),
    .I3(_0133_[3]),
    .O(_0074_[63])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0394_ (
    .I0(_0078_[1]),
    .I1(_0034_[63]),
    .O(_0133_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0777)
  ) _0395_ (
    .I0(_0031_[62]),
    .I1(_0080_[2]),
    .I2(_0083_[1]),
    .I3(_0060_[63]),
    .O(_0133_[3])
  );
  CC_LUT3 #(
    .INIT(8'hac)
  ) _0396_ (
    .I0(_0116_[0]),
    .I1(_0116_[1]),
    .I2(\dac.i2sword [4]),
    .O(_0068_)
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0397_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[0]),
    .O(_0071_[0])
  );
  CC_LUT2 #(
    .INIT(4'h4)
  ) _0398_ (
    .I0(_0091_[2]),
    .I1(_0091_[1]),
    .O(_0117_[1])
  );
  CC_LUT4 #(
    .INIT(16'h8000)
  ) _0399_ (
    .I0(_0090_[0]),
    .I1(_0090_[1]),
    .I2(_0090_[2]),
    .I3(_0090_[3]),
    .O(_0091_[2])
  );
  CC_LUT4 #(
    .INIT(16'h0001)
  ) _0400_ (
    .I0(\uart_rx_inst.r_Clock_Count [12]),
    .I1(\uart_rx_inst.r_Clock_Count [13]),
    .I2(\uart_rx_inst.r_Clock_Count [14]),
    .I3(\uart_rx_inst.r_Clock_Count [15]),
    .O(_0090_[0])
  );
  CC_LUT4 #(
    .INIT(16'h0001)
  ) _0401_ (
    .I0(\uart_rx_inst.r_Clock_Count [0]),
    .I1(\uart_rx_inst.r_Clock_Count [1]),
    .I2(\uart_rx_inst.r_Clock_Count [2]),
    .I3(\uart_rx_inst.r_Clock_Count [3]),
    .O(_0090_[1])
  );
  CC_LUT4 #(
    .INIT(16'h0100)
  ) _0402_ (
    .I0(\uart_rx_inst.r_Clock_Count [9]),
    .I1(\uart_rx_inst.r_Clock_Count [10]),
    .I2(\uart_rx_inst.r_Clock_Count [11]),
    .I3(\uart_rx_inst.r_Clock_Count [7]),
    .O(_0090_[2])
  );
  CC_LUT4 #(
    .INIT(16'h1000)
  ) _0403_ (
    .I0(\uart_rx_inst.r_Clock_Count [5]),
    .I1(\uart_rx_inst.r_Clock_Count [8]),
    .I2(\uart_rx_inst.r_Clock_Count [6]),
    .I3(\uart_rx_inst.r_Clock_Count [4]),
    .O(_0090_[3])
  );
  CC_LUT3 #(
    .INIT(8'h10)
  ) _0404_ (
    .I0(\uart_rx_inst.r_SM_Main [2]),
    .I1(\uart_rx_inst.r_SM_Main [1]),
    .I2(\uart_rx_inst.r_SM_Main [0]),
    .O(_0091_[1])
  );
  CC_LUT4 #(
    .INIT(16'h1000)
  ) _0405_ (
    .I0(_0093_[0]),
    .I1(\uart_rx_inst.r_SM_Main [2]),
    .I2(\uart_rx_inst.r_SM_Main [1]),
    .I3(_0027_[15]),
    .O(_0094_[0])
  );
  CC_LUT4 #(
    .INIT(16'h8000)
  ) _0406_ (
    .I0(_0090_[0]),
    .I1(_0090_[1]),
    .I2(_0090_[2]),
    .I3(_0092_[3]),
    .O(_0093_[0])
  );
  CC_LUT4 #(
    .INIT(16'h1000)
  ) _0407_ (
    .I0(\uart_rx_inst.r_Clock_Count [6]),
    .I1(\uart_rx_inst.r_Clock_Count [4]),
    .I2(\uart_rx_inst.r_Clock_Count [5]),
    .I3(\uart_rx_inst.r_Clock_Count [8]),
    .O(_0092_[3])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0408_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[1]),
    .O(_0071_[1])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0409_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[2]),
    .O(_0071_[2])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0410_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[3]),
    .O(_0071_[3])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0411_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[4]),
    .O(_0071_[4])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0412_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[5]),
    .O(_0071_[5])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0413_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[6]),
    .O(_0071_[6])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0414_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[7]),
    .O(_0071_[7])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0415_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[8]),
    .O(_0071_[8])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0416_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[9]),
    .O(_0071_[9])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0417_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[10]),
    .O(_0071_[10])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0418_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[11]),
    .O(_0071_[11])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0419_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[12]),
    .O(_0071_[12])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0420_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[13]),
    .O(_0071_[13])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0421_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[14]),
    .O(_0071_[14])
  );
  CC_LUT3 #(
    .INIT(8'he0)
  ) _0422_ (
    .I0(_0094_[0]),
    .I1(_0117_[1]),
    .I2(_0050_[15]),
    .O(_0071_[15])
  );
  CC_LUT4 #(
    .INIT(16'hf8ff)
  ) _0423_ (
    .I0(\uart_rx_inst.r_SM_Main [0]),
    .I1(_0094_[0]),
    .I2(_0131_[2]),
    .I3(_0131_[3]),
    .O(_0070_[0])
  );
  CC_LUT4 #(
    .INIT(16'hd000)
  ) _0424_ (
    .I0(_0027_[15]),
    .I1(_0093_[0]),
    .I2(_0094_[2]),
    .I3(_0129_[0]),
    .O(_0131_[2])
  );
  CC_LUT3 #(
    .INIT(8'h80)
  ) _0425_ (
    .I0(\uart_rx_inst.r_Bit_Index [1]),
    .I1(\uart_rx_inst.r_Bit_Index [2]),
    .I2(\uart_rx_inst.r_Bit_Index [0]),
    .O(_0129_[0])
  );
  CC_LUT3 #(
    .INIT(8'h10)
  ) _0426_ (
    .I0(\uart_rx_inst.r_SM_Main [2]),
    .I1(\uart_rx_inst.r_SM_Main [0]),
    .I2(\uart_rx_inst.r_SM_Main [1]),
    .O(_0094_[2])
  );
  CC_LUT4 #(
    .INIT(16'hb0bb)
  ) _0427_ (
    .I0(\uart_rx_inst.r_Rx_Data ),
    .I1(_0128_[2]),
    .I2(_0091_[2]),
    .I3(_0091_[1]),
    .O(_0131_[3])
  );
  CC_LUT2 #(
    .INIT(4'h1)
  ) _0428_ (
    .I0(_0095_[0]),
    .I1(\uart_rx_inst.r_SM_Main [2]),
    .O(_0128_[2])
  );
  CC_LUT2 #(
    .INIT(4'he)
  ) _0429_ (
    .I0(\uart_rx_inst.r_SM_Main [1]),
    .I1(\uart_rx_inst.r_SM_Main [0]),
    .O(_0095_[0])
  );
  CC_LUT3 #(
    .INIT(8'hfe)
  ) _0430_ (
    .I0(_0094_[0]),
    .I1(_0094_[1]),
    .I2(_0094_[2]),
    .O(_0070_[1])
  );
  CC_LUT3 #(
    .INIT(8'h40)
  ) _0431_ (
    .I0(\uart_rx_inst.r_Rx_Data ),
    .I1(_0091_[1]),
    .I2(_0091_[2]),
    .O(_0094_[1])
  );
  CC_LUT4 #(
    .INIT(16'h1000)
  ) _0432_ (
    .I0(_0118_[0]),
    .I1(\uart_rx_inst.r_SM_Main [2]),
    .I2(\uart_rx_inst.r_SM_Main [1]),
    .I3(\uart_rx_inst.r_SM_Main [0]),
    .O(_0069_[2])
  );
  CC_LUT2 #(
    .INIT(4'h4)
  ) _0433_ (
    .I0(_0093_[0]),
    .I1(_0027_[15]),
    .O(_0118_[0])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0434_ (
    .I0(_0130_[0]),
    .I1(_0047_[2]),
    .O(_0007_)
  );
  CC_LUT2 #(
    .INIT(4'h4)
  ) _0435_ (
    .I0(_0129_[0]),
    .I1(_0094_[2]),
    .O(_0130_[0])
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0436_ (
    .I0(_0130_[0]),
    .I1(_0047_[0]),
    .O(_0005_)
  );
  CC_LUT2 #(
    .INIT(4'h8)
  ) _0437_ (
    .I0(_0130_[0]),
    .I1(_0047_[1]),
    .O(_0006_)
  );
  CC_LUT4 #(
    .INIT(16'h007f)
  ) _0438_ (
    .I0(_0091_[2]),
    .I1(_0091_[1]),
    .I2(\uart_rx_inst.r_Rx_Data ),
    .I3(\uart_rx_inst.r_SM_Main [2]),
    .O(_0003_)
  );
  CC_LUT2 #(
    .INIT(4'h4)
  ) _0439_ (
    .I0(_0118_[0]),
    .I1(_0094_[2]),
    .O(_0001_)
  );
  CC_LUT4 #(
    .INIT(16'h100f)
  ) _0440_ (
    .I0(_0118_[0]),
    .I1(\uart_rx_inst.r_SM_Main [2]),
    .I2(\uart_rx_inst.r_SM_Main [1]),
    .I3(\uart_rx_inst.r_SM_Main [0]),
    .O(_0000_)
  );
  CC_LUT3 #(
    .INIT(8'hf4)
  ) _0441_ (
    .I0(_0118_[0]),
    .I1(_0094_[2]),
    .I2(_0128_[2]),
    .O(_0002_)
  );
  CC_LUT3 #(
    .INIT(8'h10)
  ) _0442_ (
    .I0(_0080_[2]),
    .I1(_0080_[1]),
    .I2(uart_rx_data_valid),
    .O(_0004_)
  );
  CC_LUT2 #(
    .INIT(4'h4)
  ) _0443_ (
    .I0(\uart_rx_inst.r_Rx_DV_last ),
    .I1(\uart_rx_inst.r_Rx_DV ),
    .O(_0008_)
  );
  CC_LUT3 #(
    .INIT(8'hca)
  ) _0444_ (
    .I0(\uart_rx_inst.r_Rx_Byte [0]),
    .I1(\uart_rx_inst.r_Rx_Data ),
    .I2(_0119_[2]),
    .O(_0009_)
  );
  CC_LUT4 #(
    .INIT(16'h0001)
  ) _0445_ (
    .I0(_0054_[3]),
    .I1(_0054_[0]),
    .I2(_0054_[1]),
    .I3(_0054_[2]),
    .O(_0119_[2])
  );
  CC_LUT4 #(
    .INIT(16'haccc)
  ) _0446_ (
    .I0(\uart_rx_inst.r_Rx_Data ),
    .I1(\uart_rx_inst.r_Rx_Byte [1]),
    .I2(_0089_[3]),
    .I3(_0054_[2]),
    .O(_0010_)
  );
  CC_LUT3 #(
    .INIT(8'h80)
  ) _0447_ (
    .I0(_0054_[3]),
    .I1(_0054_[0]),
    .I2(_0054_[1]),
    .O(_0089_[3])
  );
  CC_LUT4 #(
    .INIT(16'haccc)
  ) _0448_ (
    .I0(\uart_rx_inst.r_Rx_Data ),
    .I1(\uart_rx_inst.r_Rx_Byte [2]),
    .I2(_0088_[3]),
    .I3(_0054_[2]),
    .O(_0011_)
  );
  CC_LUT3 #(
    .INIT(8'h40)
  ) _0449_ (
    .I0(_0054_[0]),
    .I1(_0054_[3]),
    .I2(_0054_[1]),
    .O(_0088_[3])
  );
  CC_LUT4 #(
    .INIT(16'haccc)
  ) _0450_ (
    .I0(\uart_rx_inst.r_Rx_Data ),
    .I1(\uart_rx_inst.r_Rx_Byte [3]),
    .I2(_0120_[2]),
    .I3(_0054_[2]),
    .O(_0012_)
  );
  CC_LUT3 #(
    .INIT(8'h40)
  ) _0451_ (
    .I0(_0054_[1]),
    .I1(_0054_[0]),
    .I2(_0054_[3]),
    .O(_0120_[2])
  );
  CC_LUT3 #(
    .INIT(8'hca)
  ) _0452_ (
    .I0(\uart_rx_inst.r_Rx_Byte [4]),
    .I1(\uart_rx_inst.r_Rx_Data ),
    .I2(_0127_[2]),
    .O(_0013_)
  );
  CC_LUT4 #(
    .INIT(16'h1000)
  ) _0453_ (
    .I0(_0054_[0]),
    .I1(_0054_[1]),
    .I2(_0054_[3]),
    .I3(_0054_[2]),
    .O(_0127_[2])
  );
  CC_LUT4 #(
    .INIT(16'hcacc)
  ) _0454_ (
    .I0(\uart_rx_inst.r_Rx_Data ),
    .I1(\uart_rx_inst.r_Rx_Byte [5]),
    .I2(_0054_[2]),
    .I3(_0089_[3]),
    .O(_0014_)
  );
  CC_LUT4 #(
    .INIT(16'hcacc)
  ) _0455_ (
    .I0(\uart_rx_inst.r_Rx_Data ),
    .I1(\uart_rx_inst.r_Rx_Byte [6]),
    .I2(_0054_[2]),
    .I3(_0088_[3]),
    .O(_0015_)
  );
  CC_LUT4 #(
    .INIT(16'hcacc)
  ) _0456_ (
    .I0(\uart_rx_inst.r_Rx_Data ),
    .I1(\uart_rx_inst.r_Rx_Byte [7]),
    .I2(_0054_[2]),
    .I3(_0120_[2]),
    .O(_0016_)
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0457_ (
    .I0(\uart_rx_inst.r_Bit_Index [0]),
    .O(_0046_[0])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0458_ (
    .I0(uart_rx_byte[3]),
    .O(_0020_)
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0459_ (
    .I0(uart_rx_byte[4]),
    .O(_0021_)
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0460_ (
    .I0(uart_rx_byte[0]),
    .O(_0017_)
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0461_ (
    .I0(uart_rx_byte[5]),
    .O(_0022_)
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0462_ (
    .I0(uart_rx_byte[6]),
    .O(_0023_)
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0463_ (
    .I0(uart_rx_byte[1]),
    .O(_0018_)
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0464_ (
    .I0(uart_rx_byte[2]),
    .O(_0019_)
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0465_ (
    .I0(\uart_rx_inst.r_Clock_Count [0]),
    .O(_0025_[0])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0466_ (
    .I0(\uart_rx_inst.r_Clock_Count [4]),
    .O(_0025_[4])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0467_ (
    .I0(\uart_rx_inst.r_Clock_Count [6]),
    .O(_0025_[6])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0468_ (
    .I0(\uart_rx_inst.r_Clock_Count [7]),
    .O(_0025_[7])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0469_ (
    .I0(\uart_rx_inst.r_Clock_Count [1]),
    .O(_0025_[1])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0470_ (
    .I0(\uart_rx_inst.r_Clock_Count [2]),
    .O(_0025_[2])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0471_ (
    .I0(\uart_rx_inst.r_Clock_Count [3]),
    .O(_0025_[3])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0472_ (
    .I0(\uart_rx_inst.r_Clock_Count [9]),
    .O(_0025_[9])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0473_ (
    .I0(\uart_rx_inst.r_Clock_Count [10]),
    .O(_0025_[10])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0474_ (
    .I0(\uart_rx_inst.r_Clock_Count [11]),
    .O(_0025_[11])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0475_ (
    .I0(\uart_rx_inst.r_Clock_Count [12]),
    .O(_0025_[12])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0476_ (
    .I0(\uart_rx_inst.r_Clock_Count [13]),
    .O(_0025_[13])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0477_ (
    .I0(\uart_rx_inst.r_Clock_Count [14]),
    .O(_0025_[14])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0478_ (
    .I0(\uart_rx_inst.r_Clock_Count [15]),
    .O(_0025_[15])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0479_ (
    .I0(\uart_rx_inst.r_Bit_Index [1]),
    .O(_0051_[1])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0480_ (
    .I0(\uart_rx_inst.r_Clock_Count [5]),
    .O(_0025_[5])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0481_ (
    .I0(\uart_rx_inst.r_Clock_Count [8]),
    .O(_0025_[8])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0482_ (
    .I0(\uart_rx_inst.r_Bit_Index [2]),
    .O(_0051_[2])
  );
  CC_LUT1 #(
    .INIT(2'h1)
  ) _0483_ (
    .I0(uart_rx_byte[7]),
    .O(_0024_)
  );
  CC_LUT4 #(
    .INIT(16'h1000)
  ) _0484_ (
    .I0(_0118_[0]),
    .I1(\uart_rx_inst.r_SM_Main [2]),
    .I2(\uart_rx_inst.r_SM_Main [1]),
    .I3(\uart_rx_inst.r_SM_Main [0]),
    .O(_0070_[2])
  );
  CC_LUT4 #(
    .INIT(16'h35ff)
  ) _0485_ (
    .I0(_0057_[57]),
    .I1(_0060_[58]),
    .I2(uart_rx_byte[0]),
    .I3(uart_rx_byte[1]),
    .O(_0121_[2])
  );
  CC_LUT4 #(
    .INIT(16'h8f00)
  ) _0486_ (
    .I0(_0031_[57]),
    .I1(_0079_[2]),
    .I2(_0121_[2]),
    .I3(_0079_[1]),
    .O(_0123_[1])
  );
  CC_LUT3 #(
    .INIT(8'h8f)
  ) _0487_ (
    .I0(_0077_[1]),
    .I1(_0123_[1]),
    .I2(_0123_[2]),
    .O(_0074_[58])
  );
  CC_ADDF _0488_ (
    .A(1'h0),
    .B(_0025_[0]),
    .CI(1'h1),
    .CO(_0026_[1]),
    .S(_0028_[0])
  );
  CC_ADDF _0489_ (
    .A(1'h0),
    .B(_0025_[10]),
    .CI(_0026_[10]),
    .CO(_0026_[11]),
    .S(_0028_[10])
  );
  CC_ADDF _0490_ (
    .A(1'h0),
    .B(_0025_[11]),
    .CI(_0026_[11]),
    .CO(_0026_[12]),
    .S(_0028_[11])
  );
  CC_ADDF _0491_ (
    .A(1'h0),
    .B(_0025_[12]),
    .CI(_0026_[12]),
    .CO(_0026_[13]),
    .S(_0028_[12])
  );
  CC_ADDF _0492_ (
    .A(1'h0),
    .B(_0025_[13]),
    .CI(_0026_[13]),
    .CO(_0026_[14]),
    .S(_0028_[13])
  );
  CC_ADDF _0493_ (
    .A(1'h0),
    .B(_0025_[14]),
    .CI(_0026_[14]),
    .CO(_0026_[15]),
    .S(_0028_[14])
  );
  CC_ADDF _0494_ (
    .A(1'h0),
    .B(_0025_[15]),
    .CI(_0026_[15]),
    .CO(_0027_[15]),
    .S(_0028_[15])
  );
  CC_ADDF _0495_ (
    .A(1'h0),
    .B(_0025_[1]),
    .CI(_0026_[1]),
    .CO(_0026_[2]),
    .S(_0028_[1])
  );
  CC_ADDF _0496_ (
    .A(1'h0),
    .B(_0025_[2]),
    .CI(_0026_[2]),
    .CO(_0026_[3]),
    .S(_0028_[2])
  );
  CC_ADDF _0497_ (
    .A(1'h0),
    .B(_0025_[3]),
    .CI(_0026_[3]),
    .CO(_0026_[4]),
    .S(_0028_[3])
  );
  CC_ADDF _0498_ (
    .A(1'h0),
    .B(_0025_[4]),
    .CI(_0026_[4]),
    .CO(_0026_[5]),
    .S(_0028_[4])
  );
  CC_ADDF _0499_ (
    .A(1'h1),
    .B(_0025_[5]),
    .CI(_0026_[5]),
    .CO(_0026_[6]),
    .S(_0028_[5])
  );
  CC_ADDF _0500_ (
    .A(1'h0),
    .B(_0025_[6]),
    .CI(_0026_[6]),
    .CO(_0026_[7]),
    .S(_0028_[6])
  );
  CC_ADDF _0501_ (
    .A(1'h1),
    .B(_0025_[7]),
    .CI(_0026_[7]),
    .CO(_0026_[8]),
    .S(_0028_[7])
  );
  CC_ADDF _0502_ (
    .A(1'h1),
    .B(_0025_[8]),
    .CI(_0026_[8]),
    .CO(_0026_[9]),
    .S(_0028_[8])
  );
  CC_ADDF _0503_ (
    .A(1'h0),
    .B(_0025_[9]),
    .CI(_0026_[9]),
    .CO(_0026_[10]),
    .S(_0028_[9])
  );
  CC_ADDF _0504_ (
    .A(1'h1),
    .B(phase_increment[1]),
    .CI(1'h0),
    .CO(_0029_[1]),
    .S(_0031_[0])
  );
  CC_ADDF _0505_ (
    .A(1'h0),
    .B(phase_increment[11]),
    .CI(_0029_[10]),
    .CO(_0029_[11]),
    .S(_0031_[10])
  );
  CC_ADDF _0506_ (
    .A(1'h1),
    .B(phase_increment[12]),
    .CI(_0029_[11]),
    .CO(_0029_[12]),
    .S(_0031_[11])
  );
  CC_ADDF _0507_ (
    .A(1'h0),
    .B(phase_increment[13]),
    .CI(_0029_[12]),
    .CO(_0029_[13]),
    .S(_0031_[12])
  );
  CC_ADDF _0508_ (
    .A(1'h1),
    .B(phase_increment[14]),
    .CI(_0029_[13]),
    .CO(_0029_[14]),
    .S(_0031_[13])
  );
  CC_ADDF _0509_ (
    .A(1'h0),
    .B(phase_increment[15]),
    .CI(_0029_[14]),
    .CO(_0029_[15]),
    .S(_0031_[14])
  );
  CC_ADDF _0510_ (
    .A(1'h0),
    .B(phase_increment[16]),
    .CI(_0029_[15]),
    .CO(_0029_[16]),
    .S(_0031_[15])
  );
  CC_ADDF _0511_ (
    .A(1'h0),
    .B(phase_increment[17]),
    .CI(_0029_[16]),
    .CO(_0029_[17]),
    .S(_0031_[16])
  );
  CC_ADDF _0512_ (
    .A(1'h1),
    .B(phase_increment[18]),
    .CI(_0029_[17]),
    .CO(_0029_[18]),
    .S(_0031_[17])
  );
  CC_ADDF _0513_ (
    .A(1'h1),
    .B(phase_increment[19]),
    .CI(_0029_[18]),
    .CO(_0029_[19]),
    .S(_0031_[18])
  );
  CC_ADDF _0514_ (
    .A(1'h1),
    .B(phase_increment[20]),
    .CI(_0029_[19]),
    .CO(_0029_[20]),
    .S(_0031_[19])
  );
  CC_ADDF _0515_ (
    .A(1'h1),
    .B(phase_increment[2]),
    .CI(_0029_[1]),
    .CO(_0029_[2]),
    .S(_0031_[1])
  );
  CC_ADDF _0516_ (
    .A(1'h0),
    .B(phase_increment[21]),
    .CI(_0029_[20]),
    .CO(_0029_[21]),
    .S(_0031_[20])
  );
  CC_ADDF _0517_ (
    .A(1'h0),
    .B(phase_increment[22]),
    .CI(_0029_[21]),
    .CO(_0029_[22]),
    .S(_0031_[21])
  );
  CC_ADDF _0518_ (
    .A(1'h1),
    .B(phase_increment[23]),
    .CI(_0029_[22]),
    .CO(_0029_[23]),
    .S(_0031_[22])
  );
  CC_ADDF _0519_ (
    .A(1'h1),
    .B(phase_increment[24]),
    .CI(_0029_[23]),
    .CO(_0029_[24]),
    .S(_0031_[23])
  );
  CC_ADDF _0520_ (
    .A(1'h0),
    .B(phase_increment[25]),
    .CI(_0029_[24]),
    .CO(_0029_[25]),
    .S(_0031_[24])
  );
  CC_ADDF _0521_ (
    .A(1'h1),
    .B(phase_increment[26]),
    .CI(_0029_[25]),
    .CO(_0029_[26]),
    .S(_0031_[25])
  );
  CC_ADDF _0522_ (
    .A(1'h1),
    .B(phase_increment[27]),
    .CI(_0029_[26]),
    .CO(_0029_[27]),
    .S(_0031_[26])
  );
  CC_ADDF _0523_ (
    .A(1'h1),
    .B(phase_increment[28]),
    .CI(_0029_[27]),
    .CO(_0029_[28]),
    .S(_0031_[27])
  );
  CC_ADDF _0524_ (
    .A(1'h1),
    .B(phase_increment[29]),
    .CI(_0029_[28]),
    .CO(_0029_[29]),
    .S(_0031_[28])
  );
  CC_ADDF _0525_ (
    .A(1'h1),
    .B(phase_increment[30]),
    .CI(_0029_[29]),
    .CO(_0029_[30]),
    .S(_0031_[29])
  );
  CC_ADDF _0526_ (
    .A(1'h0),
    .B(phase_increment[3]),
    .CI(_0029_[2]),
    .CO(_0029_[3]),
    .S(_0031_[2])
  );
  CC_ADDF _0527_ (
    .A(1'h0),
    .B(phase_increment[31]),
    .CI(_0029_[30]),
    .CO(_0029_[31]),
    .S(_0031_[30])
  );
  CC_ADDF _0528_ (
    .A(1'h0),
    .B(phase_increment[32]),
    .CI(_0029_[31]),
    .CO(_0029_[32]),
    .S(_0031_[31])
  );
  CC_ADDF _0529_ (
    .A(1'h0),
    .B(phase_increment[33]),
    .CI(_0029_[32]),
    .CO(_0029_[33]),
    .S(_0031_[32])
  );
  CC_ADDF _0530_ (
    .A(1'h0),
    .B(phase_increment[34]),
    .CI(_0029_[33]),
    .CO(_0029_[34]),
    .S(_0031_[33])
  );
  CC_ADDF _0531_ (
    .A(1'h1),
    .B(phase_increment[35]),
    .CI(_0029_[34]),
    .CO(_0029_[35]),
    .S(_0031_[34])
  );
  CC_ADDF _0532_ (
    .A(1'h1),
    .B(phase_increment[36]),
    .CI(_0029_[35]),
    .CO(_0029_[36]),
    .S(_0031_[35])
  );
  CC_ADDF _0533_ (
    .A(1'h1),
    .B(phase_increment[37]),
    .CI(_0029_[36]),
    .CO(_0029_[37]),
    .S(_0031_[36])
  );
  CC_ADDF _0534_ (
    .A(1'h1),
    .B(phase_increment[38]),
    .CI(_0029_[37]),
    .CO(_0029_[38]),
    .S(_0031_[37])
  );
  CC_ADDF _0535_ (
    .A(1'h1),
    .B(phase_increment[39]),
    .CI(_0029_[38]),
    .CO(_0029_[39]),
    .S(_0031_[38])
  );
  CC_ADDF _0536_ (
    .A(1'h0),
    .B(phase_increment[40]),
    .CI(_0029_[39]),
    .CO(_0029_[40]),
    .S(_0031_[39])
  );
  CC_ADDF _0537_ (
    .A(1'h0),
    .B(phase_increment[4]),
    .CI(_0029_[3]),
    .CO(_0029_[4]),
    .S(_0031_[3])
  );
  CC_ADDF _0538_ (
    .A(1'h0),
    .B(phase_increment[41]),
    .CI(_0029_[40]),
    .CO(_0029_[41]),
    .S(_0031_[40])
  );
  CC_ADDF _0539_ (
    .A(1'h1),
    .B(phase_increment[42]),
    .CI(_0029_[41]),
    .CO(_0029_[42]),
    .S(_0031_[41])
  );
  CC_ADDF _0540_ (
    .A(1'h1),
    .B(phase_increment[43]),
    .CI(_0029_[42]),
    .CO(_0029_[43]),
    .S(_0031_[42])
  );
  CC_ADDF _0541_ (
    .A(1'h0),
    .B(phase_increment[44]),
    .CI(_0029_[43]),
    .CO(_0029_[44]),
    .S(_0031_[43])
  );
  CC_ADDF _0542_ (
    .A(1'h0),
    .B(phase_increment[45]),
    .CI(_0029_[44]),
    .CO(_0029_[45]),
    .S(_0031_[44])
  );
  CC_ADDF _0543_ (
    .A(1'h0),
    .B(phase_increment[46]),
    .CI(_0029_[45]),
    .CO(_0029_[46]),
    .S(_0031_[45])
  );
  CC_ADDF _0544_ (
    .A(1'h0),
    .B(phase_increment[47]),
    .CI(_0029_[46]),
    .CO(_0029_[47]),
    .S(_0031_[46])
  );
  CC_ADDF _0545_ (
    .A(1'h1),
    .B(phase_increment[48]),
    .CI(_0029_[47]),
    .CO(_0029_[48]),
    .S(_0031_[47])
  );
  CC_ADDF _0546_ (
    .A(1'h1),
    .B(phase_increment[49]),
    .CI(_0029_[48]),
    .CO(_0029_[49]),
    .S(_0031_[48])
  );
  CC_ADDF _0547_ (
    .A(1'h0),
    .B(phase_increment[50]),
    .CI(_0029_[49]),
    .CO(_0029_[50]),
    .S(_0031_[49])
  );
  CC_ADDF _0548_ (
    .A(1'h1),
    .B(phase_increment[5]),
    .CI(_0029_[4]),
    .CO(_0029_[5]),
    .S(_0031_[4])
  );
  CC_ADDF _0549_ (
    .A(1'h1),
    .B(phase_increment[51]),
    .CI(_0029_[50]),
    .CO(_0029_[51]),
    .S(_0031_[50])
  );
  CC_ADDF _0550_ (
    .A(1'h1),
    .B(phase_increment[52]),
    .CI(_0029_[51]),
    .CO(_0029_[52]),
    .S(_0031_[51])
  );
  CC_ADDF _0551_ (
    .A(1'h1),
    .B(phase_increment[53]),
    .CI(_0029_[52]),
    .CO(_0029_[53]),
    .S(_0031_[52])
  );
  CC_ADDF _0552_ (
    .A(1'h0),
    .B(phase_increment[54]),
    .CI(_0029_[53]),
    .CO(_0029_[54]),
    .S(_0031_[53])
  );
  CC_ADDF _0553_ (
    .A(1'h1),
    .B(phase_increment[55]),
    .CI(_0029_[54]),
    .CO(_0029_[55]),
    .S(_0031_[54])
  );
  CC_ADDF _0554_ (
    .A(1'h0),
    .B(phase_increment[56]),
    .CI(_0029_[55]),
    .CO(_0029_[56]),
    .S(_0031_[55])
  );
  CC_ADDF _0555_ (
    .A(1'h1),
    .B(phase_increment[57]),
    .CI(_0029_[56]),
    .CO(_0029_[57]),
    .S(_0031_[56])
  );
  CC_ADDF _0556_ (
    .A(1'h0),
    .B(phase_increment[58]),
    .CI(_0029_[57]),
    .CO(_0029_[58]),
    .S(_0031_[57])
  );
  CC_ADDF _0557_ (
    .A(1'h0),
    .B(phase_increment[59]),
    .CI(_0029_[58]),
    .CO(_0029_[59]),
    .S(_0031_[58])
  );
  CC_ADDF _0558_ (
    .A(1'h0),
    .B(phase_increment[60]),
    .CI(_0029_[59]),
    .CO(_0029_[60]),
    .S(_0031_[59])
  );
  CC_ADDF _0559_ (
    .A(1'h0),
    .B(phase_increment[6]),
    .CI(_0029_[5]),
    .CO(_0029_[6]),
    .S(_0031_[5])
  );
  CC_ADDF _0560_ (
    .A(1'h0),
    .B(phase_increment[61]),
    .CI(_0029_[60]),
    .CO(_0029_[61]),
    .S(_0031_[60])
  );
  CC_ADDF _0561_ (
    .A(1'h0),
    .B(phase_increment[62]),
    .CI(_0029_[61]),
    .CO(_0029_[62]),
    .S(_0031_[61])
  );
  CC_ADDF _0562_ (
    .A(1'h0),
    .B(phase_increment[63]),
    .CI(_0029_[62]),
    .CO(_0030_[62]),
    .S(_0031_[62])
  );
  CC_ADDF _0563_ (
    .A(1'h1),
    .B(phase_increment[7]),
    .CI(_0029_[6]),
    .CO(_0029_[7]),
    .S(_0031_[6])
  );
  CC_ADDF _0564_ (
    .A(1'h0),
    .B(phase_increment[8]),
    .CI(_0029_[7]),
    .CO(_0029_[8]),
    .S(_0031_[7])
  );
  CC_ADDF _0565_ (
    .A(1'h0),
    .B(phase_increment[9]),
    .CI(_0029_[8]),
    .CO(_0029_[9]),
    .S(_0031_[8])
  );
  CC_ADDF _0566_ (
    .A(1'h1),
    .B(phase_increment[10]),
    .CI(_0029_[9]),
    .CO(_0029_[10]),
    .S(_0031_[9])
  );
  CC_ADDF _0567_ (
    .A(1'h1),
    .B(phase_increment[0]),
    .CI(1'h0),
    .CO(_0032_[1]),
    .S(_0034_[0])
  );
  CC_ADDF _0568_ (
    .A(1'h0),
    .B(phase_increment[10]),
    .CI(_0032_[10]),
    .CO(_0032_[11]),
    .S(_0034_[10])
  );
  CC_ADDF _0569_ (
    .A(1'h1),
    .B(phase_increment[11]),
    .CI(_0032_[11]),
    .CO(_0032_[12]),
    .S(_0034_[11])
  );
  CC_ADDF _0570_ (
    .A(1'h0),
    .B(phase_increment[12]),
    .CI(_0032_[12]),
    .CO(_0032_[13]),
    .S(_0034_[12])
  );
  CC_ADDF _0571_ (
    .A(1'h0),
    .B(phase_increment[13]),
    .CI(_0032_[13]),
    .CO(_0032_[14]),
    .S(_0034_[13])
  );
  CC_ADDF _0572_ (
    .A(1'h0),
    .B(phase_increment[14]),
    .CI(_0032_[14]),
    .CO(_0032_[15]),
    .S(_0034_[14])
  );
  CC_ADDF _0573_ (
    .A(1'h0),
    .B(phase_increment[15]),
    .CI(_0032_[15]),
    .CO(_0032_[16]),
    .S(_0034_[15])
  );
  CC_ADDF _0574_ (
    .A(1'h0),
    .B(phase_increment[16]),
    .CI(_0032_[16]),
    .CO(_0032_[17]),
    .S(_0034_[16])
  );
  CC_ADDF _0575_ (
    .A(1'h1),
    .B(phase_increment[17]),
    .CI(_0032_[17]),
    .CO(_0032_[18]),
    .S(_0034_[17])
  );
  CC_ADDF _0576_ (
    .A(1'h1),
    .B(phase_increment[18]),
    .CI(_0032_[18]),
    .CO(_0032_[19]),
    .S(_0034_[18])
  );
  CC_ADDF _0577_ (
    .A(1'h0),
    .B(phase_increment[19]),
    .CI(_0032_[19]),
    .CO(_0032_[20]),
    .S(_0034_[19])
  );
  CC_ADDF _0578_ (
    .A(1'h1),
    .B(phase_increment[1]),
    .CI(_0032_[1]),
    .CO(_0032_[2]),
    .S(_0034_[1])
  );
  CC_ADDF _0579_ (
    .A(1'h1),
    .B(phase_increment[20]),
    .CI(_0032_[20]),
    .CO(_0032_[21]),
    .S(_0034_[20])
  );
  CC_ADDF _0580_ (
    .A(1'h1),
    .B(phase_increment[21]),
    .CI(_0032_[21]),
    .CO(_0032_[22]),
    .S(_0034_[21])
  );
  CC_ADDF _0581_ (
    .A(1'h1),
    .B(phase_increment[22]),
    .CI(_0032_[22]),
    .CO(_0032_[23]),
    .S(_0034_[22])
  );
  CC_ADDF _0582_ (
    .A(1'h1),
    .B(phase_increment[23]),
    .CI(_0032_[23]),
    .CO(_0032_[24]),
    .S(_0034_[23])
  );
  CC_ADDF _0583_ (
    .A(1'h0),
    .B(phase_increment[24]),
    .CI(_0032_[24]),
    .CO(_0032_[25]),
    .S(_0034_[24])
  );
  CC_ADDF _0584_ (
    .A(1'h1),
    .B(phase_increment[25]),
    .CI(_0032_[25]),
    .CO(_0032_[26]),
    .S(_0034_[25])
  );
  CC_ADDF _0585_ (
    .A(1'h0),
    .B(phase_increment[26]),
    .CI(_0032_[26]),
    .CO(_0032_[27]),
    .S(_0034_[26])
  );
  CC_ADDF _0586_ (
    .A(1'h0),
    .B(phase_increment[27]),
    .CI(_0032_[27]),
    .CO(_0032_[28]),
    .S(_0034_[27])
  );
  CC_ADDF _0587_ (
    .A(1'h1),
    .B(phase_increment[28]),
    .CI(_0032_[28]),
    .CO(_0032_[29]),
    .S(_0034_[28])
  );
  CC_ADDF _0588_ (
    .A(1'h1),
    .B(phase_increment[29]),
    .CI(_0032_[29]),
    .CO(_0032_[30]),
    .S(_0034_[29])
  );
  CC_ADDF _0589_ (
    .A(1'h1),
    .B(phase_increment[2]),
    .CI(_0032_[2]),
    .CO(_0032_[3]),
    .S(_0034_[2])
  );
  CC_ADDF _0590_ (
    .A(1'h1),
    .B(phase_increment[30]),
    .CI(_0032_[30]),
    .CO(_0032_[31]),
    .S(_0034_[30])
  );
  CC_ADDF _0591_ (
    .A(1'h0),
    .B(phase_increment[31]),
    .CI(_0032_[31]),
    .CO(_0032_[32]),
    .S(_0034_[31])
  );
  CC_ADDF _0592_ (
    .A(1'h0),
    .B(phase_increment[32]),
    .CI(_0032_[32]),
    .CO(_0032_[33]),
    .S(_0034_[32])
  );
  CC_ADDF _0593_ (
    .A(1'h1),
    .B(phase_increment[33]),
    .CI(_0032_[33]),
    .CO(_0032_[34]),
    .S(_0034_[33])
  );
  CC_ADDF _0594_ (
    .A(1'h0),
    .B(phase_increment[34]),
    .CI(_0032_[34]),
    .CO(_0032_[35]),
    .S(_0034_[34])
  );
  CC_ADDF _0595_ (
    .A(1'h0),
    .B(phase_increment[35]),
    .CI(_0032_[35]),
    .CO(_0032_[36]),
    .S(_0034_[35])
  );
  CC_ADDF _0596_ (
    .A(1'h1),
    .B(phase_increment[36]),
    .CI(_0032_[36]),
    .CO(_0032_[37]),
    .S(_0034_[36])
  );
  CC_ADDF _0597_ (
    .A(1'h1),
    .B(phase_increment[37]),
    .CI(_0032_[37]),
    .CO(_0032_[38]),
    .S(_0034_[37])
  );
  CC_ADDF _0598_ (
    .A(1'h0),
    .B(phase_increment[38]),
    .CI(_0032_[38]),
    .CO(_0032_[39]),
    .S(_0034_[38])
  );
  CC_ADDF _0599_ (
    .A(1'h1),
    .B(phase_increment[39]),
    .CI(_0032_[39]),
    .CO(_0032_[40]),
    .S(_0034_[39])
  );
  CC_ADDF _0600_ (
    .A(1'h0),
    .B(phase_increment[3]),
    .CI(_0032_[3]),
    .CO(_0032_[4]),
    .S(_0034_[3])
  );
  CC_ADDF _0601_ (
    .A(1'h1),
    .B(phase_increment[40]),
    .CI(_0032_[40]),
    .CO(_0032_[41]),
    .S(_0034_[40])
  );
  CC_ADDF _0602_ (
    .A(1'h1),
    .B(phase_increment[41]),
    .CI(_0032_[41]),
    .CO(_0032_[42]),
    .S(_0034_[41])
  );
  CC_ADDF _0603_ (
    .A(1'h1),
    .B(phase_increment[42]),
    .CI(_0032_[42]),
    .CO(_0032_[43]),
    .S(_0034_[42])
  );
  CC_ADDF _0604_ (
    .A(1'h0),
    .B(phase_increment[43]),
    .CI(_0032_[43]),
    .CO(_0032_[44]),
    .S(_0034_[43])
  );
  CC_ADDF _0605_ (
    .A(1'h0),
    .B(phase_increment[44]),
    .CI(_0032_[44]),
    .CO(_0032_[45]),
    .S(_0034_[44])
  );
  CC_ADDF _0606_ (
    .A(1'h1),
    .B(phase_increment[45]),
    .CI(_0032_[45]),
    .CO(_0032_[46]),
    .S(_0034_[45])
  );
  CC_ADDF _0607_ (
    .A(1'h1),
    .B(phase_increment[46]),
    .CI(_0032_[46]),
    .CO(_0032_[47]),
    .S(_0034_[46])
  );
  CC_ADDF _0608_ (
    .A(1'h1),
    .B(phase_increment[47]),
    .CI(_0032_[47]),
    .CO(_0032_[48]),
    .S(_0034_[47])
  );
  CC_ADDF _0609_ (
    .A(1'h1),
    .B(phase_increment[48]),
    .CI(_0032_[48]),
    .CO(_0032_[49]),
    .S(_0034_[48])
  );
  CC_ADDF _0610_ (
    .A(1'h0),
    .B(phase_increment[49]),
    .CI(_0032_[49]),
    .CO(_0032_[50]),
    .S(_0034_[49])
  );
  CC_ADDF _0611_ (
    .A(1'h1),
    .B(phase_increment[4]),
    .CI(_0032_[4]),
    .CO(_0032_[5]),
    .S(_0034_[4])
  );
  CC_ADDF _0612_ (
    .A(1'h1),
    .B(phase_increment[50]),
    .CI(_0032_[50]),
    .CO(_0032_[51]),
    .S(_0034_[50])
  );
  CC_ADDF _0613_ (
    .A(1'h0),
    .B(phase_increment[51]),
    .CI(_0032_[51]),
    .CO(_0032_[52]),
    .S(_0034_[51])
  );
  CC_ADDF _0614_ (
    .A(1'h0),
    .B(phase_increment[52]),
    .CI(_0032_[52]),
    .CO(_0032_[53]),
    .S(_0034_[52])
  );
  CC_ADDF _0615_ (
    .A(1'h0),
    .B(phase_increment[53]),
    .CI(_0032_[53]),
    .CO(_0032_[54]),
    .S(_0034_[53])
  );
  CC_ADDF _0616_ (
    .A(1'h1),
    .B(phase_increment[54]),
    .CI(_0032_[54]),
    .CO(_0032_[55]),
    .S(_0034_[54])
  );
  CC_ADDF _0617_ (
    .A(1'h0),
    .B(phase_increment[55]),
    .CI(_0032_[55]),
    .CO(_0032_[56]),
    .S(_0034_[55])
  );
  CC_ADDF _0618_ (
    .A(1'h0),
    .B(phase_increment[56]),
    .CI(_0032_[56]),
    .CO(_0032_[57]),
    .S(_0034_[56])
  );
  CC_ADDF _0619_ (
    .A(1'h0),
    .B(phase_increment[57]),
    .CI(_0032_[57]),
    .CO(_0032_[58]),
    .S(_0034_[57])
  );
  CC_ADDF _0620_ (
    .A(1'h0),
    .B(phase_increment[58]),
    .CI(_0032_[58]),
    .CO(_0032_[59]),
    .S(_0034_[58])
  );
  CC_ADDF _0621_ (
    .A(1'h0),
    .B(phase_increment[59]),
    .CI(_0032_[59]),
    .CO(_0032_[60]),
    .S(_0034_[59])
  );
  CC_ADDF _0622_ (
    .A(1'h1),
    .B(phase_increment[5]),
    .CI(_0032_[5]),
    .CO(_0032_[6]),
    .S(_0034_[5])
  );
  CC_ADDF _0623_ (
    .A(1'h0),
    .B(phase_increment[60]),
    .CI(_0032_[60]),
    .CO(_0032_[61]),
    .S(_0034_[60])
  );
  CC_ADDF _0624_ (
    .A(1'h0),
    .B(phase_increment[61]),
    .CI(_0032_[61]),
    .CO(_0032_[62]),
    .S(_0034_[61])
  );
  CC_ADDF _0625_ (
    .A(1'h0),
    .B(phase_increment[62]),
    .CI(_0032_[62]),
    .CO(_0032_[63]),
    .S(_0034_[62])
  );
  CC_ADDF _0626_ (
    .A(1'h0),
    .B(phase_increment[63]),
    .CI(_0032_[63]),
    .CO(_0033_[63]),
    .S(_0034_[63])
  );
  CC_ADDF _0627_ (
    .A(1'h1),
    .B(phase_increment[6]),
    .CI(_0032_[6]),
    .CO(_0032_[7]),
    .S(_0034_[6])
  );
  CC_ADDF _0628_ (
    .A(1'h0),
    .B(phase_increment[7]),
    .CI(_0032_[7]),
    .CO(_0032_[8]),
    .S(_0034_[7])
  );
  CC_ADDF _0629_ (
    .A(1'h0),
    .B(phase_increment[8]),
    .CI(_0032_[8]),
    .CO(_0032_[9]),
    .S(_0034_[8])
  );
  CC_ADDF _0630_ (
    .A(1'h0),
    .B(phase_increment[9]),
    .CI(_0032_[9]),
    .CO(_0032_[10]),
    .S(_0034_[9])
  );
  CC_ADDF _0631_ (
    .A(1'h1),
    .B(\dac.i2s_clk [0]),
    .CI(1'h0),
    .CO(_0035_[1]),
    .S(_0037_[0])
  );
  CC_ADDF _0632_ (
    .A(1'h0),
    .B(\dac.i2s_clk [1]),
    .CI(_0035_[1]),
    .CO(_0035_[2]),
    .S(_0037_[1])
  );
  CC_ADDF _0633_ (
    .A(1'h0),
    .B(\dac.i2s_clk [2]),
    .CI(_0035_[2]),
    .CO(_0036_[2]),
    .S(_0037_[2])
  );
  CC_ADDF _0634_ (
    .A(1'h1),
    .B(\dac.i2sword [0]),
    .CI(1'h0),
    .CO(_0038_[1]),
    .S(_0040_[0])
  );
  CC_ADDF _0635_ (
    .A(1'h0),
    .B(\dac.i2sword [1]),
    .CI(_0038_[1]),
    .CO(_0038_[2]),
    .S(_0040_[1])
  );
  CC_ADDF _0636_ (
    .A(1'h0),
    .B(\dac.i2sword [2]),
    .CI(_0038_[2]),
    .CO(_0038_[3]),
    .S(_0040_[2])
  );
  CC_ADDF _0637_ (
    .A(1'h0),
    .B(\dac.i2sword [3]),
    .CI(_0038_[3]),
    .CO(_0038_[4]),
    .S(_0040_[3])
  );
  CC_ADDF _0638_ (
    .A(1'h0),
    .B(\dac.i2sword [4]),
    .CI(_0038_[4]),
    .CO(_0038_[5]),
    .S(_0040_[4])
  );
  CC_ADDF _0639_ (
    .A(1'h0),
    .B(clk_strobe),
    .CI(_0038_[5]),
    .CO(_0039_[5]),
    .S(_0040_[5])
  );
  CC_ADDF _0640_ (
    .A(\sine_gen_inst.phase_accumulator [0]),
    .B(phase_increment[0]),
    .CI(1'h0),
    .CO(_0041_[1]),
    .S(_0043_[0])
  );
  CC_ADDF _0641_ (
    .A(\sine_gen_inst.phase_accumulator [10]),
    .B(phase_increment[10]),
    .CI(_0041_[10]),
    .CO(_0041_[11]),
    .S(_0043_[10])
  );
  CC_ADDF _0642_ (
    .A(\sine_gen_inst.phase_accumulator [11]),
    .B(phase_increment[11]),
    .CI(_0041_[11]),
    .CO(_0041_[12]),
    .S(_0043_[11])
  );
  CC_ADDF _0643_ (
    .A(\sine_gen_inst.phase_accumulator [12]),
    .B(phase_increment[12]),
    .CI(_0041_[12]),
    .CO(_0041_[13]),
    .S(_0043_[12])
  );
  CC_ADDF _0644_ (
    .A(\sine_gen_inst.phase_accumulator [13]),
    .B(phase_increment[13]),
    .CI(_0041_[13]),
    .CO(_0041_[14]),
    .S(_0043_[13])
  );
  CC_ADDF _0645_ (
    .A(\sine_gen_inst.phase_accumulator [14]),
    .B(phase_increment[14]),
    .CI(_0041_[14]),
    .CO(_0041_[15]),
    .S(_0043_[14])
  );
  CC_ADDF _0646_ (
    .A(\sine_gen_inst.phase_accumulator [15]),
    .B(phase_increment[15]),
    .CI(_0041_[15]),
    .CO(_0041_[16]),
    .S(_0043_[15])
  );
  CC_ADDF _0647_ (
    .A(\sine_gen_inst.phase_accumulator [16]),
    .B(phase_increment[16]),
    .CI(_0041_[16]),
    .CO(_0041_[17]),
    .S(_0043_[16])
  );
  CC_ADDF _0648_ (
    .A(\sine_gen_inst.phase_accumulator [17]),
    .B(phase_increment[17]),
    .CI(_0041_[17]),
    .CO(_0041_[18]),
    .S(_0043_[17])
  );
  CC_ADDF _0649_ (
    .A(\sine_gen_inst.phase_accumulator [18]),
    .B(phase_increment[18]),
    .CI(_0041_[18]),
    .CO(_0041_[19]),
    .S(_0043_[18])
  );
  CC_ADDF _0650_ (
    .A(\sine_gen_inst.phase_accumulator [19]),
    .B(phase_increment[19]),
    .CI(_0041_[19]),
    .CO(_0041_[20]),
    .S(_0043_[19])
  );
  CC_ADDF _0651_ (
    .A(\sine_gen_inst.phase_accumulator [1]),
    .B(phase_increment[1]),
    .CI(_0041_[1]),
    .CO(_0041_[2]),
    .S(_0043_[1])
  );
  CC_ADDF _0652_ (
    .A(\sine_gen_inst.phase_accumulator [20]),
    .B(phase_increment[20]),
    .CI(_0041_[20]),
    .CO(_0041_[21]),
    .S(_0043_[20])
  );
  CC_ADDF _0653_ (
    .A(\sine_gen_inst.phase_accumulator [21]),
    .B(phase_increment[21]),
    .CI(_0041_[21]),
    .CO(_0041_[22]),
    .S(_0043_[21])
  );
  CC_ADDF _0654_ (
    .A(\sine_gen_inst.phase_accumulator [22]),
    .B(phase_increment[22]),
    .CI(_0041_[22]),
    .CO(_0041_[23]),
    .S(_0043_[22])
  );
  CC_ADDF _0655_ (
    .A(\sine_gen_inst.phase_accumulator [23]),
    .B(phase_increment[23]),
    .CI(_0041_[23]),
    .CO(_0041_[24]),
    .S(_0043_[23])
  );
  CC_ADDF _0656_ (
    .A(\sine_gen_inst.phase_accumulator [24]),
    .B(phase_increment[24]),
    .CI(_0041_[24]),
    .CO(_0041_[25]),
    .S(_0043_[24])
  );
  CC_ADDF _0657_ (
    .A(\sine_gen_inst.phase_accumulator [25]),
    .B(phase_increment[25]),
    .CI(_0041_[25]),
    .CO(_0041_[26]),
    .S(_0043_[25])
  );
  CC_ADDF _0658_ (
    .A(\sine_gen_inst.phase_accumulator [26]),
    .B(phase_increment[26]),
    .CI(_0041_[26]),
    .CO(_0041_[27]),
    .S(_0043_[26])
  );
  CC_ADDF _0659_ (
    .A(\sine_gen_inst.phase_accumulator [27]),
    .B(phase_increment[27]),
    .CI(_0041_[27]),
    .CO(_0041_[28]),
    .S(_0043_[27])
  );
  CC_ADDF _0660_ (
    .A(\sine_gen_inst.phase_accumulator [28]),
    .B(phase_increment[28]),
    .CI(_0041_[28]),
    .CO(_0041_[29]),
    .S(_0043_[28])
  );
  CC_ADDF _0661_ (
    .A(\sine_gen_inst.phase_accumulator [29]),
    .B(phase_increment[29]),
    .CI(_0041_[29]),
    .CO(_0041_[30]),
    .S(_0043_[29])
  );
  CC_ADDF _0662_ (
    .A(\sine_gen_inst.phase_accumulator [2]),
    .B(phase_increment[2]),
    .CI(_0041_[2]),
    .CO(_0041_[3]),
    .S(_0043_[2])
  );
  CC_ADDF _0663_ (
    .A(\sine_gen_inst.phase_accumulator [30]),
    .B(phase_increment[30]),
    .CI(_0041_[30]),
    .CO(_0041_[31]),
    .S(_0043_[30])
  );
  CC_ADDF _0664_ (
    .A(\sine_gen_inst.phase_accumulator [31]),
    .B(phase_increment[31]),
    .CI(_0041_[31]),
    .CO(_0041_[32]),
    .S(_0043_[31])
  );
  CC_ADDF _0665_ (
    .A(\sine_gen_inst.phase_accumulator [32]),
    .B(phase_increment[32]),
    .CI(_0041_[32]),
    .CO(_0041_[33]),
    .S(_0043_[32])
  );
  CC_ADDF _0666_ (
    .A(\sine_gen_inst.phase_accumulator [33]),
    .B(phase_increment[33]),
    .CI(_0041_[33]),
    .CO(_0041_[34]),
    .S(_0043_[33])
  );
  CC_ADDF _0667_ (
    .A(\sine_gen_inst.phase_accumulator [34]),
    .B(phase_increment[34]),
    .CI(_0041_[34]),
    .CO(_0041_[35]),
    .S(_0043_[34])
  );
  CC_ADDF _0668_ (
    .A(\sine_gen_inst.phase_accumulator [35]),
    .B(phase_increment[35]),
    .CI(_0041_[35]),
    .CO(_0041_[36]),
    .S(_0043_[35])
  );
  CC_ADDF _0669_ (
    .A(\sine_gen_inst.phase_accumulator [36]),
    .B(phase_increment[36]),
    .CI(_0041_[36]),
    .CO(_0041_[37]),
    .S(_0043_[36])
  );
  CC_ADDF _0670_ (
    .A(\sine_gen_inst.phase_accumulator [37]),
    .B(phase_increment[37]),
    .CI(_0041_[37]),
    .CO(_0041_[38]),
    .S(_0043_[37])
  );
  CC_ADDF _0671_ (
    .A(\sine_gen_inst.phase_accumulator [38]),
    .B(phase_increment[38]),
    .CI(_0041_[38]),
    .CO(_0041_[39]),
    .S(_0043_[38])
  );
  CC_ADDF _0672_ (
    .A(\sine_gen_inst.phase_accumulator [39]),
    .B(phase_increment[39]),
    .CI(_0041_[39]),
    .CO(_0041_[40]),
    .S(_0043_[39])
  );
  CC_ADDF _0673_ (
    .A(\sine_gen_inst.phase_accumulator [3]),
    .B(phase_increment[3]),
    .CI(_0041_[3]),
    .CO(_0041_[4]),
    .S(_0043_[3])
  );
  CC_ADDF _0674_ (
    .A(\sine_gen_inst.phase_accumulator [40]),
    .B(phase_increment[40]),
    .CI(_0041_[40]),
    .CO(_0041_[41]),
    .S(_0043_[40])
  );
  CC_ADDF _0675_ (
    .A(\sine_gen_inst.phase_accumulator [41]),
    .B(phase_increment[41]),
    .CI(_0041_[41]),
    .CO(_0041_[42]),
    .S(_0043_[41])
  );
  CC_ADDF _0676_ (
    .A(\sine_gen_inst.phase_accumulator [42]),
    .B(phase_increment[42]),
    .CI(_0041_[42]),
    .CO(_0041_[43]),
    .S(_0043_[42])
  );
  CC_ADDF _0677_ (
    .A(\sine_gen_inst.phase_accumulator [43]),
    .B(phase_increment[43]),
    .CI(_0041_[43]),
    .CO(_0041_[44]),
    .S(_0043_[43])
  );
  CC_ADDF _0678_ (
    .A(\sine_gen_inst.phase_accumulator [44]),
    .B(phase_increment[44]),
    .CI(_0041_[44]),
    .CO(_0041_[45]),
    .S(_0043_[44])
  );
  CC_ADDF _0679_ (
    .A(\sine_gen_inst.phase_accumulator [45]),
    .B(phase_increment[45]),
    .CI(_0041_[45]),
    .CO(_0041_[46]),
    .S(_0043_[45])
  );
  CC_ADDF _0680_ (
    .A(\sine_gen_inst.phase_accumulator [46]),
    .B(phase_increment[46]),
    .CI(_0041_[46]),
    .CO(_0041_[47]),
    .S(_0043_[46])
  );
  CC_ADDF _0681_ (
    .A(\sine_gen_inst.phase_accumulator [47]),
    .B(phase_increment[47]),
    .CI(_0041_[47]),
    .CO(_0041_[48]),
    .S(_0043_[47])
  );
  CC_ADDF _0682_ (
    .A(\sine_gen_inst.phase_accumulator [48]),
    .B(phase_increment[48]),
    .CI(_0041_[48]),
    .CO(_0041_[49]),
    .S(_0043_[48])
  );
  CC_ADDF _0683_ (
    .A(\sine_gen_inst.phase_accumulator [49]),
    .B(phase_increment[49]),
    .CI(_0041_[49]),
    .CO(_0041_[50]),
    .S(_0043_[49])
  );
  CC_ADDF _0684_ (
    .A(\sine_gen_inst.phase_accumulator [4]),
    .B(phase_increment[4]),
    .CI(_0041_[4]),
    .CO(_0041_[5]),
    .S(_0043_[4])
  );
  CC_ADDF _0685_ (
    .A(\sine_gen_inst.phase_accumulator [50]),
    .B(phase_increment[50]),
    .CI(_0041_[50]),
    .CO(_0041_[51]),
    .S(_0043_[50])
  );
  CC_ADDF _0686_ (
    .A(\sine_gen_inst.phase_accumulator [51]),
    .B(phase_increment[51]),
    .CI(_0041_[51]),
    .CO(_0041_[52]),
    .S(_0043_[51])
  );
  CC_ADDF _0687_ (
    .A(\sine_gen_inst.phase_accumulator [52]),
    .B(phase_increment[52]),
    .CI(_0041_[52]),
    .CO(_0041_[53]),
    .S(_0043_[52])
  );
  CC_ADDF _0688_ (
    .A(\sine_gen_inst.phase_accumulator [53]),
    .B(phase_increment[53]),
    .CI(_0041_[53]),
    .CO(_0041_[54]),
    .S(_0043_[53])
  );
  CC_ADDF _0689_ (
    .A(\sine_gen_inst.phase_accumulator [54]),
    .B(phase_increment[54]),
    .CI(_0041_[54]),
    .CO(_0041_[55]),
    .S(_0043_[54])
  );
  CC_ADDF _0690_ (
    .A(\sine_gen_inst.phase_accumulator [55]),
    .B(phase_increment[55]),
    .CI(_0041_[55]),
    .CO(_0041_[56]),
    .S(_0043_[55])
  );
  CC_ADDF _0691_ (
    .A(\sine_gen_inst.phase_accumulator [56]),
    .B(phase_increment[56]),
    .CI(_0041_[56]),
    .CO(_0041_[57]),
    .S(_0043_[56])
  );
  CC_ADDF _0692_ (
    .A(\sine_gen_inst.phase_accumulator [57]),
    .B(phase_increment[57]),
    .CI(_0041_[57]),
    .CO(_0041_[58]),
    .S(_0043_[57])
  );
  CC_ADDF _0693_ (
    .A(\sine_gen_inst.phase_accumulator [58]),
    .B(phase_increment[58]),
    .CI(_0041_[58]),
    .CO(_0041_[59]),
    .S(_0043_[58])
  );
  CC_ADDF _0694_ (
    .A(\sine_gen_inst.phase_accumulator [59]),
    .B(phase_increment[59]),
    .CI(_0041_[59]),
    .CO(_0041_[60]),
    .S(_0043_[59])
  );
  CC_ADDF _0695_ (
    .A(\sine_gen_inst.phase_accumulator [5]),
    .B(phase_increment[5]),
    .CI(_0041_[5]),
    .CO(_0041_[6]),
    .S(_0043_[5])
  );
  CC_ADDF _0696_ (
    .A(\sine_gen_inst.phase_accumulator [60]),
    .B(phase_increment[60]),
    .CI(_0041_[60]),
    .CO(_0041_[61]),
    .S(_0043_[60])
  );
  CC_ADDF _0697_ (
    .A(\sine_gen_inst.phase_accumulator [61]),
    .B(phase_increment[61]),
    .CI(_0041_[61]),
    .CO(_0041_[62]),
    .S(_0043_[61])
  );
  CC_ADDF _0698_ (
    .A(\sine_gen_inst.phase_accumulator [62]),
    .B(phase_increment[62]),
    .CI(_0041_[62]),
    .CO(_0041_[63]),
    .S(_0043_[62])
  );
  CC_ADDF _0699_ (
    .A(\sine_gen_inst.phase_accumulator [63]),
    .B(phase_increment[63]),
    .CI(_0041_[63]),
    .CO(_0042_[63]),
    .S(_0043_[63])
  );
  CC_ADDF _0700_ (
    .A(\sine_gen_inst.phase_accumulator [6]),
    .B(phase_increment[6]),
    .CI(_0041_[6]),
    .CO(_0041_[7]),
    .S(_0043_[6])
  );
  CC_ADDF _0701_ (
    .A(\sine_gen_inst.phase_accumulator [7]),
    .B(phase_increment[7]),
    .CI(_0041_[7]),
    .CO(_0041_[8]),
    .S(_0043_[7])
  );
  CC_ADDF _0702_ (
    .A(\sine_gen_inst.phase_accumulator [8]),
    .B(phase_increment[8]),
    .CI(_0041_[8]),
    .CO(_0041_[9]),
    .S(_0043_[8])
  );
  CC_ADDF _0703_ (
    .A(\sine_gen_inst.phase_accumulator [9]),
    .B(phase_increment[9]),
    .CI(_0041_[9]),
    .CO(_0041_[10]),
    .S(_0043_[9])
  );
  CC_ADDF _0704_ (
    .A(1'h1),
    .B(\uart_rx_inst.r_Bit_Index [0]),
    .CI(1'h0),
    .CO(_0044_[1]),
    .S(_0047_[0])
  );
  CC_ADDF _0705_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Bit_Index [1]),
    .CI(_0044_[1]),
    .CO(_0044_[2]),
    .S(_0047_[1])
  );
  CC_ADDF _0706_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Bit_Index [2]),
    .CI(_0044_[2]),
    .CO(_0045_[2]),
    .S(_0047_[2])
  );
  CC_ADDF _0707_ (
    .A(1'h1),
    .B(\uart_rx_inst.r_Clock_Count [0]),
    .CI(1'h0),
    .CO(_0048_[1]),
    .S(_0050_[0])
  );
  CC_ADDF _0708_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [10]),
    .CI(_0048_[10]),
    .CO(_0048_[11]),
    .S(_0050_[10])
  );
  CC_ADDF _0709_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [11]),
    .CI(_0048_[11]),
    .CO(_0048_[12]),
    .S(_0050_[11])
  );
  CC_ADDF _0710_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [12]),
    .CI(_0048_[12]),
    .CO(_0048_[13]),
    .S(_0050_[12])
  );
  CC_ADDF _0711_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [13]),
    .CI(_0048_[13]),
    .CO(_0048_[14]),
    .S(_0050_[13])
  );
  CC_ADDF _0712_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [14]),
    .CI(_0048_[14]),
    .CO(_0048_[15]),
    .S(_0050_[14])
  );
  CC_ADDF _0713_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [15]),
    .CI(_0048_[15]),
    .CO(_0049_[15]),
    .S(_0050_[15])
  );
  CC_ADDF _0714_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [1]),
    .CI(_0048_[1]),
    .CO(_0048_[2]),
    .S(_0050_[1])
  );
  CC_ADDF _0715_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [2]),
    .CI(_0048_[2]),
    .CO(_0048_[3]),
    .S(_0050_[2])
  );
  CC_ADDF _0716_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [3]),
    .CI(_0048_[3]),
    .CO(_0048_[4]),
    .S(_0050_[3])
  );
  CC_ADDF _0717_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [4]),
    .CI(_0048_[4]),
    .CO(_0048_[5]),
    .S(_0050_[4])
  );
  CC_ADDF _0718_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [5]),
    .CI(_0048_[5]),
    .CO(_0048_[6]),
    .S(_0050_[5])
  );
  CC_ADDF _0719_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [6]),
    .CI(_0048_[6]),
    .CO(_0048_[7]),
    .S(_0050_[6])
  );
  CC_ADDF _0720_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [7]),
    .CI(_0048_[7]),
    .CO(_0048_[8]),
    .S(_0050_[7])
  );
  CC_ADDF _0721_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [8]),
    .CI(_0048_[8]),
    .CO(_0048_[9]),
    .S(_0050_[8])
  );
  CC_ADDF _0722_ (
    .A(1'h0),
    .B(\uart_rx_inst.r_Clock_Count [9]),
    .CI(_0048_[9]),
    .CO(_0048_[10]),
    .S(_0050_[9])
  );
  CC_ADDF _0723_ (
    .A(1'h0),
    .B(_0046_[0]),
    .CI(1'h1),
    .CO(_0052_[1]),
    .S(_0054_[0])
  );
  CC_ADDF _0724_ (
    .A(1'h0),
    .B(_0051_[1]),
    .CI(_0052_[1]),
    .CO(_0052_[2]),
    .S(_0054_[1])
  );
  CC_ADDF _0725_ (
    .A(1'h0),
    .B(_0051_[2]),
    .CI(_0052_[2]),
    .CO(_0052_[3]),
    .S(_0054_[2])
  );
  CC_ADDF _0726_ (
    .A(1'h0),
    .B(1'h1),
    .CI(_0052_[3]),
    .CO(_0053_[3]),
    .S(_0054_[3])
  );
  CC_ADDF _0727_ (
    .A(phase_increment[1]),
    .B(1'h0),
    .CI(1'h1),
    .CO(_0055_[1]),
    .S(_0057_[0])
  );
  CC_ADDF _0728_ (
    .A(phase_increment[11]),
    .B(1'h1),
    .CI(_0055_[10]),
    .CO(_0055_[11]),
    .S(_0057_[10])
  );
  CC_ADDF _0729_ (
    .A(phase_increment[12]),
    .B(1'h0),
    .CI(_0055_[11]),
    .CO(_0055_[12]),
    .S(_0057_[11])
  );
  CC_ADDF _0730_ (
    .A(phase_increment[13]),
    .B(1'h1),
    .CI(_0055_[12]),
    .CO(_0055_[13]),
    .S(_0057_[12])
  );
  CC_ADDF _0731_ (
    .A(phase_increment[14]),
    .B(1'h0),
    .CI(_0055_[13]),
    .CO(_0055_[14]),
    .S(_0057_[13])
  );
  CC_ADDF _0732_ (
    .A(phase_increment[15]),
    .B(1'h1),
    .CI(_0055_[14]),
    .CO(_0055_[15]),
    .S(_0057_[14])
  );
  CC_ADDF _0733_ (
    .A(phase_increment[16]),
    .B(1'h1),
    .CI(_0055_[15]),
    .CO(_0055_[16]),
    .S(_0057_[15])
  );
  CC_ADDF _0734_ (
    .A(phase_increment[17]),
    .B(1'h1),
    .CI(_0055_[16]),
    .CO(_0055_[17]),
    .S(_0057_[16])
  );
  CC_ADDF _0735_ (
    .A(phase_increment[18]),
    .B(1'h0),
    .CI(_0055_[17]),
    .CO(_0055_[18]),
    .S(_0057_[17])
  );
  CC_ADDF _0736_ (
    .A(phase_increment[19]),
    .B(1'h0),
    .CI(_0055_[18]),
    .CO(_0055_[19]),
    .S(_0057_[18])
  );
  CC_ADDF _0737_ (
    .A(phase_increment[20]),
    .B(1'h0),
    .CI(_0055_[19]),
    .CO(_0055_[20]),
    .S(_0057_[19])
  );
  CC_ADDF _0738_ (
    .A(phase_increment[2]),
    .B(1'h0),
    .CI(_0055_[1]),
    .CO(_0055_[2]),
    .S(_0057_[1])
  );
  CC_ADDF _0739_ (
    .A(phase_increment[21]),
    .B(1'h1),
    .CI(_0055_[20]),
    .CO(_0055_[21]),
    .S(_0057_[20])
  );
  CC_ADDF _0740_ (
    .A(phase_increment[22]),
    .B(1'h1),
    .CI(_0055_[21]),
    .CO(_0055_[22]),
    .S(_0057_[21])
  );
  CC_ADDF _0741_ (
    .A(phase_increment[23]),
    .B(1'h0),
    .CI(_0055_[22]),
    .CO(_0055_[23]),
    .S(_0057_[22])
  );
  CC_ADDF _0742_ (
    .A(phase_increment[24]),
    .B(1'h0),
    .CI(_0055_[23]),
    .CO(_0055_[24]),
    .S(_0057_[23])
  );
  CC_ADDF _0743_ (
    .A(phase_increment[25]),
    .B(1'h1),
    .CI(_0055_[24]),
    .CO(_0055_[25]),
    .S(_0057_[24])
  );
  CC_ADDF _0744_ (
    .A(phase_increment[26]),
    .B(1'h0),
    .CI(_0055_[25]),
    .CO(_0055_[26]),
    .S(_0057_[25])
  );
  CC_ADDF _0745_ (
    .A(phase_increment[27]),
    .B(1'h0),
    .CI(_0055_[26]),
    .CO(_0055_[27]),
    .S(_0057_[26])
  );
  CC_ADDF _0746_ (
    .A(phase_increment[28]),
    .B(1'h0),
    .CI(_0055_[27]),
    .CO(_0055_[28]),
    .S(_0057_[27])
  );
  CC_ADDF _0747_ (
    .A(phase_increment[29]),
    .B(1'h0),
    .CI(_0055_[28]),
    .CO(_0055_[29]),
    .S(_0057_[28])
  );
  CC_ADDF _0748_ (
    .A(phase_increment[30]),
    .B(1'h0),
    .CI(_0055_[29]),
    .CO(_0055_[30]),
    .S(_0057_[29])
  );
  CC_ADDF _0749_ (
    .A(phase_increment[3]),
    .B(1'h1),
    .CI(_0055_[2]),
    .CO(_0055_[3]),
    .S(_0057_[2])
  );
  CC_ADDF _0750_ (
    .A(phase_increment[31]),
    .B(1'h1),
    .CI(_0055_[30]),
    .CO(_0055_[31]),
    .S(_0057_[30])
  );
  CC_ADDF _0751_ (
    .A(phase_increment[32]),
    .B(1'h1),
    .CI(_0055_[31]),
    .CO(_0055_[32]),
    .S(_0057_[31])
  );
  CC_ADDF _0752_ (
    .A(phase_increment[33]),
    .B(1'h1),
    .CI(_0055_[32]),
    .CO(_0055_[33]),
    .S(_0057_[32])
  );
  CC_ADDF _0753_ (
    .A(phase_increment[34]),
    .B(1'h1),
    .CI(_0055_[33]),
    .CO(_0055_[34]),
    .S(_0057_[33])
  );
  CC_ADDF _0754_ (
    .A(phase_increment[35]),
    .B(1'h0),
    .CI(_0055_[34]),
    .CO(_0055_[35]),
    .S(_0057_[34])
  );
  CC_ADDF _0755_ (
    .A(phase_increment[36]),
    .B(1'h0),
    .CI(_0055_[35]),
    .CO(_0055_[36]),
    .S(_0057_[35])
  );
  CC_ADDF _0756_ (
    .A(phase_increment[37]),
    .B(1'h0),
    .CI(_0055_[36]),
    .CO(_0055_[37]),
    .S(_0057_[36])
  );
  CC_ADDF _0757_ (
    .A(phase_increment[38]),
    .B(1'h0),
    .CI(_0055_[37]),
    .CO(_0055_[38]),
    .S(_0057_[37])
  );
  CC_ADDF _0758_ (
    .A(phase_increment[39]),
    .B(1'h0),
    .CI(_0055_[38]),
    .CO(_0055_[39]),
    .S(_0057_[38])
  );
  CC_ADDF _0759_ (
    .A(phase_increment[40]),
    .B(1'h1),
    .CI(_0055_[39]),
    .CO(_0055_[40]),
    .S(_0057_[39])
  );
  CC_ADDF _0760_ (
    .A(phase_increment[4]),
    .B(1'h1),
    .CI(_0055_[3]),
    .CO(_0055_[4]),
    .S(_0057_[3])
  );
  CC_ADDF _0761_ (
    .A(phase_increment[41]),
    .B(1'h1),
    .CI(_0055_[40]),
    .CO(_0055_[41]),
    .S(_0057_[40])
  );
  CC_ADDF _0762_ (
    .A(phase_increment[42]),
    .B(1'h0),
    .CI(_0055_[41]),
    .CO(_0055_[42]),
    .S(_0057_[41])
  );
  CC_ADDF _0763_ (
    .A(phase_increment[43]),
    .B(1'h0),
    .CI(_0055_[42]),
    .CO(_0055_[43]),
    .S(_0057_[42])
  );
  CC_ADDF _0764_ (
    .A(phase_increment[44]),
    .B(1'h1),
    .CI(_0055_[43]),
    .CO(_0055_[44]),
    .S(_0057_[43])
  );
  CC_ADDF _0765_ (
    .A(phase_increment[45]),
    .B(1'h1),
    .CI(_0055_[44]),
    .CO(_0055_[45]),
    .S(_0057_[44])
  );
  CC_ADDF _0766_ (
    .A(phase_increment[46]),
    .B(1'h1),
    .CI(_0055_[45]),
    .CO(_0055_[46]),
    .S(_0057_[45])
  );
  CC_ADDF _0767_ (
    .A(phase_increment[47]),
    .B(1'h1),
    .CI(_0055_[46]),
    .CO(_0055_[47]),
    .S(_0057_[46])
  );
  CC_ADDF _0768_ (
    .A(phase_increment[48]),
    .B(1'h0),
    .CI(_0055_[47]),
    .CO(_0055_[48]),
    .S(_0057_[47])
  );
  CC_ADDF _0769_ (
    .A(phase_increment[49]),
    .B(1'h0),
    .CI(_0055_[48]),
    .CO(_0055_[49]),
    .S(_0057_[48])
  );
  CC_ADDF _0770_ (
    .A(phase_increment[50]),
    .B(1'h1),
    .CI(_0055_[49]),
    .CO(_0055_[50]),
    .S(_0057_[49])
  );
  CC_ADDF _0771_ (
    .A(phase_increment[5]),
    .B(1'h0),
    .CI(_0055_[4]),
    .CO(_0055_[5]),
    .S(_0057_[4])
  );
  CC_ADDF _0772_ (
    .A(phase_increment[51]),
    .B(1'h0),
    .CI(_0055_[50]),
    .CO(_0055_[51]),
    .S(_0057_[50])
  );
  CC_ADDF _0773_ (
    .A(phase_increment[52]),
    .B(1'h0),
    .CI(_0055_[51]),
    .CO(_0055_[52]),
    .S(_0057_[51])
  );
  CC_ADDF _0774_ (
    .A(phase_increment[53]),
    .B(1'h0),
    .CI(_0055_[52]),
    .CO(_0055_[53]),
    .S(_0057_[52])
  );
  CC_ADDF _0775_ (
    .A(phase_increment[54]),
    .B(1'h1),
    .CI(_0055_[53]),
    .CO(_0055_[54]),
    .S(_0057_[53])
  );
  CC_ADDF _0776_ (
    .A(phase_increment[55]),
    .B(1'h0),
    .CI(_0055_[54]),
    .CO(_0055_[55]),
    .S(_0057_[54])
  );
  CC_ADDF _0777_ (
    .A(phase_increment[56]),
    .B(1'h1),
    .CI(_0055_[55]),
    .CO(_0055_[56]),
    .S(_0057_[55])
  );
  CC_ADDF _0778_ (
    .A(phase_increment[57]),
    .B(1'h0),
    .CI(_0055_[56]),
    .CO(_0055_[57]),
    .S(_0057_[56])
  );
  CC_ADDF _0779_ (
    .A(phase_increment[58]),
    .B(1'h1),
    .CI(_0055_[57]),
    .CO(_0055_[58]),
    .S(_0057_[57])
  );
  CC_ADDF _0780_ (
    .A(phase_increment[59]),
    .B(1'h1),
    .CI(_0055_[58]),
    .CO(_0055_[59]),
    .S(_0057_[58])
  );
  CC_ADDF _0781_ (
    .A(phase_increment[60]),
    .B(1'h1),
    .CI(_0055_[59]),
    .CO(_0055_[60]),
    .S(_0057_[59])
  );
  CC_ADDF _0782_ (
    .A(phase_increment[6]),
    .B(1'h1),
    .CI(_0055_[5]),
    .CO(_0055_[6]),
    .S(_0057_[5])
  );
  CC_ADDF _0783_ (
    .A(phase_increment[61]),
    .B(1'h1),
    .CI(_0055_[60]),
    .CO(_0055_[61]),
    .S(_0057_[60])
  );
  CC_ADDF _0784_ (
    .A(phase_increment[62]),
    .B(1'h1),
    .CI(_0055_[61]),
    .CO(_0055_[62]),
    .S(_0057_[61])
  );
  CC_ADDF _0785_ (
    .A(phase_increment[63]),
    .B(1'h1),
    .CI(_0055_[62]),
    .CO(_0056_[62]),
    .S(_0057_[62])
  );
  CC_ADDF _0786_ (
    .A(phase_increment[7]),
    .B(1'h0),
    .CI(_0055_[6]),
    .CO(_0055_[7]),
    .S(_0057_[6])
  );
  CC_ADDF _0787_ (
    .A(phase_increment[8]),
    .B(1'h1),
    .CI(_0055_[7]),
    .CO(_0055_[8]),
    .S(_0057_[7])
  );
  CC_ADDF _0788_ (
    .A(phase_increment[9]),
    .B(1'h1),
    .CI(_0055_[8]),
    .CO(_0055_[9]),
    .S(_0057_[8])
  );
  CC_ADDF _0789_ (
    .A(phase_increment[10]),
    .B(1'h0),
    .CI(_0055_[9]),
    .CO(_0055_[10]),
    .S(_0057_[9])
  );
  CC_ADDF _0790_ (
    .A(phase_increment[0]),
    .B(1'h0),
    .CI(1'h1),
    .CO(_0058_[1]),
    .S(_0060_[0])
  );
  CC_ADDF _0791_ (
    .A(phase_increment[10]),
    .B(1'h1),
    .CI(_0058_[10]),
    .CO(_0058_[11]),
    .S(_0060_[10])
  );
  CC_ADDF _0792_ (
    .A(phase_increment[11]),
    .B(1'h0),
    .CI(_0058_[11]),
    .CO(_0058_[12]),
    .S(_0060_[11])
  );
  CC_ADDF _0793_ (
    .A(phase_increment[12]),
    .B(1'h1),
    .CI(_0058_[12]),
    .CO(_0058_[13]),
    .S(_0060_[12])
  );
  CC_ADDF _0794_ (
    .A(phase_increment[13]),
    .B(1'h1),
    .CI(_0058_[13]),
    .CO(_0058_[14]),
    .S(_0060_[13])
  );
  CC_ADDF _0795_ (
    .A(phase_increment[14]),
    .B(1'h1),
    .CI(_0058_[14]),
    .CO(_0058_[15]),
    .S(_0060_[14])
  );
  CC_ADDF _0796_ (
    .A(phase_increment[15]),
    .B(1'h1),
    .CI(_0058_[15]),
    .CO(_0058_[16]),
    .S(_0060_[15])
  );
  CC_ADDF _0797_ (
    .A(phase_increment[16]),
    .B(1'h1),
    .CI(_0058_[16]),
    .CO(_0058_[17]),
    .S(_0060_[16])
  );
  CC_ADDF _0798_ (
    .A(phase_increment[17]),
    .B(1'h0),
    .CI(_0058_[17]),
    .CO(_0058_[18]),
    .S(_0060_[17])
  );
  CC_ADDF _0799_ (
    .A(phase_increment[18]),
    .B(1'h0),
    .CI(_0058_[18]),
    .CO(_0058_[19]),
    .S(_0060_[18])
  );
  CC_ADDF _0800_ (
    .A(phase_increment[19]),
    .B(1'h1),
    .CI(_0058_[19]),
    .CO(_0058_[20]),
    .S(_0060_[19])
  );
  CC_ADDF _0801_ (
    .A(phase_increment[1]),
    .B(1'h0),
    .CI(_0058_[1]),
    .CO(_0058_[2]),
    .S(_0060_[1])
  );
  CC_ADDF _0802_ (
    .A(phase_increment[20]),
    .B(1'h0),
    .CI(_0058_[20]),
    .CO(_0058_[21]),
    .S(_0060_[20])
  );
  CC_ADDF _0803_ (
    .A(phase_increment[21]),
    .B(1'h0),
    .CI(_0058_[21]),
    .CO(_0058_[22]),
    .S(_0060_[21])
  );
  CC_ADDF _0804_ (
    .A(phase_increment[22]),
    .B(1'h0),
    .CI(_0058_[22]),
    .CO(_0058_[23]),
    .S(_0060_[22])
  );
  CC_ADDF _0805_ (
    .A(phase_increment[23]),
    .B(1'h0),
    .CI(_0058_[23]),
    .CO(_0058_[24]),
    .S(_0060_[23])
  );
  CC_ADDF _0806_ (
    .A(phase_increment[24]),
    .B(1'h1),
    .CI(_0058_[24]),
    .CO(_0058_[25]),
    .S(_0060_[24])
  );
  CC_ADDF _0807_ (
    .A(phase_increment[25]),
    .B(1'h0),
    .CI(_0058_[25]),
    .CO(_0058_[26]),
    .S(_0060_[25])
  );
  CC_ADDF _0808_ (
    .A(phase_increment[26]),
    .B(1'h1),
    .CI(_0058_[26]),
    .CO(_0058_[27]),
    .S(_0060_[26])
  );
  CC_ADDF _0809_ (
    .A(phase_increment[27]),
    .B(1'h1),
    .CI(_0058_[27]),
    .CO(_0058_[28]),
    .S(_0060_[27])
  );
  CC_ADDF _0810_ (
    .A(phase_increment[28]),
    .B(1'h0),
    .CI(_0058_[28]),
    .CO(_0058_[29]),
    .S(_0060_[28])
  );
  CC_ADDF _0811_ (
    .A(phase_increment[29]),
    .B(1'h0),
    .CI(_0058_[29]),
    .CO(_0058_[30]),
    .S(_0060_[29])
  );
  CC_ADDF _0812_ (
    .A(phase_increment[2]),
    .B(1'h0),
    .CI(_0058_[2]),
    .CO(_0058_[3]),
    .S(_0060_[2])
  );
  CC_ADDF _0813_ (
    .A(phase_increment[30]),
    .B(1'h0),
    .CI(_0058_[30]),
    .CO(_0058_[31]),
    .S(_0060_[30])
  );
  CC_ADDF _0814_ (
    .A(phase_increment[31]),
    .B(1'h1),
    .CI(_0058_[31]),
    .CO(_0058_[32]),
    .S(_0060_[31])
  );
  CC_ADDF _0815_ (
    .A(phase_increment[32]),
    .B(1'h1),
    .CI(_0058_[32]),
    .CO(_0058_[33]),
    .S(_0060_[32])
  );
  CC_ADDF _0816_ (
    .A(phase_increment[33]),
    .B(1'h0),
    .CI(_0058_[33]),
    .CO(_0058_[34]),
    .S(_0060_[33])
  );
  CC_ADDF _0817_ (
    .A(phase_increment[34]),
    .B(1'h1),
    .CI(_0058_[34]),
    .CO(_0058_[35]),
    .S(_0060_[34])
  );
  CC_ADDF _0818_ (
    .A(phase_increment[35]),
    .B(1'h1),
    .CI(_0058_[35]),
    .CO(_0058_[36]),
    .S(_0060_[35])
  );
  CC_ADDF _0819_ (
    .A(phase_increment[36]),
    .B(1'h0),
    .CI(_0058_[36]),
    .CO(_0058_[37]),
    .S(_0060_[36])
  );
  CC_ADDF _0820_ (
    .A(phase_increment[37]),
    .B(1'h0),
    .CI(_0058_[37]),
    .CO(_0058_[38]),
    .S(_0060_[37])
  );
  CC_ADDF _0821_ (
    .A(phase_increment[38]),
    .B(1'h1),
    .CI(_0058_[38]),
    .CO(_0058_[39]),
    .S(_0060_[38])
  );
  CC_ADDF _0822_ (
    .A(phase_increment[39]),
    .B(1'h0),
    .CI(_0058_[39]),
    .CO(_0058_[40]),
    .S(_0060_[39])
  );
  CC_ADDF _0823_ (
    .A(phase_increment[3]),
    .B(1'h1),
    .CI(_0058_[3]),
    .CO(_0058_[4]),
    .S(_0060_[3])
  );
  CC_ADDF _0824_ (
    .A(phase_increment[40]),
    .B(1'h0),
    .CI(_0058_[40]),
    .CO(_0058_[41]),
    .S(_0060_[40])
  );
  CC_ADDF _0825_ (
    .A(phase_increment[41]),
    .B(1'h0),
    .CI(_0058_[41]),
    .CO(_0058_[42]),
    .S(_0060_[41])
  );
  CC_ADDF _0826_ (
    .A(phase_increment[42]),
    .B(1'h0),
    .CI(_0058_[42]),
    .CO(_0058_[43]),
    .S(_0060_[42])
  );
  CC_ADDF _0827_ (
    .A(phase_increment[43]),
    .B(1'h1),
    .CI(_0058_[43]),
    .CO(_0058_[44]),
    .S(_0060_[43])
  );
  CC_ADDF _0828_ (
    .A(phase_increment[44]),
    .B(1'h1),
    .CI(_0058_[44]),
    .CO(_0058_[45]),
    .S(_0060_[44])
  );
  CC_ADDF _0829_ (
    .A(phase_increment[45]),
    .B(1'h0),
    .CI(_0058_[45]),
    .CO(_0058_[46]),
    .S(_0060_[45])
  );
  CC_ADDF _0830_ (
    .A(phase_increment[46]),
    .B(1'h0),
    .CI(_0058_[46]),
    .CO(_0058_[47]),
    .S(_0060_[46])
  );
  CC_ADDF _0831_ (
    .A(phase_increment[47]),
    .B(1'h0),
    .CI(_0058_[47]),
    .CO(_0058_[48]),
    .S(_0060_[47])
  );
  CC_ADDF _0832_ (
    .A(phase_increment[48]),
    .B(1'h0),
    .CI(_0058_[48]),
    .CO(_0058_[49]),
    .S(_0060_[48])
  );
  CC_ADDF _0833_ (
    .A(phase_increment[49]),
    .B(1'h1),
    .CI(_0058_[49]),
    .CO(_0058_[50]),
    .S(_0060_[49])
  );
  CC_ADDF _0834_ (
    .A(phase_increment[4]),
    .B(1'h0),
    .CI(_0058_[4]),
    .CO(_0058_[5]),
    .S(_0060_[4])
  );
  CC_ADDF _0835_ (
    .A(phase_increment[50]),
    .B(1'h0),
    .CI(_0058_[50]),
    .CO(_0058_[51]),
    .S(_0060_[50])
  );
  CC_ADDF _0836_ (
    .A(phase_increment[51]),
    .B(1'h1),
    .CI(_0058_[51]),
    .CO(_0058_[52]),
    .S(_0060_[51])
  );
  CC_ADDF _0837_ (
    .A(phase_increment[52]),
    .B(1'h1),
    .CI(_0058_[52]),
    .CO(_0058_[53]),
    .S(_0060_[52])
  );
  CC_ADDF _0838_ (
    .A(phase_increment[53]),
    .B(1'h1),
    .CI(_0058_[53]),
    .CO(_0058_[54]),
    .S(_0060_[53])
  );
  CC_ADDF _0839_ (
    .A(phase_increment[54]),
    .B(1'h0),
    .CI(_0058_[54]),
    .CO(_0058_[55]),
    .S(_0060_[54])
  );
  CC_ADDF _0840_ (
    .A(phase_increment[55]),
    .B(1'h1),
    .CI(_0058_[55]),
    .CO(_0058_[56]),
    .S(_0060_[55])
  );
  CC_ADDF _0841_ (
    .A(phase_increment[56]),
    .B(1'h1),
    .CI(_0058_[56]),
    .CO(_0058_[57]),
    .S(_0060_[56])
  );
  CC_ADDF _0842_ (
    .A(phase_increment[57]),
    .B(1'h1),
    .CI(_0058_[57]),
    .CO(_0058_[58]),
    .S(_0060_[57])
  );
  CC_ADDF _0843_ (
    .A(phase_increment[58]),
    .B(1'h1),
    .CI(_0058_[58]),
    .CO(_0058_[59]),
    .S(_0060_[58])
  );
  CC_ADDF _0844_ (
    .A(phase_increment[59]),
    .B(1'h1),
    .CI(_0058_[59]),
    .CO(_0058_[60]),
    .S(_0060_[59])
  );
  CC_ADDF _0845_ (
    .A(phase_increment[5]),
    .B(1'h0),
    .CI(_0058_[5]),
    .CO(_0058_[6]),
    .S(_0060_[5])
  );
  CC_ADDF _0846_ (
    .A(phase_increment[60]),
    .B(1'h1),
    .CI(_0058_[60]),
    .CO(_0058_[61]),
    .S(_0060_[60])
  );
  CC_ADDF _0847_ (
    .A(phase_increment[61]),
    .B(1'h1),
    .CI(_0058_[61]),
    .CO(_0058_[62]),
    .S(_0060_[61])
  );
  CC_ADDF _0848_ (
    .A(phase_increment[62]),
    .B(1'h1),
    .CI(_0058_[62]),
    .CO(_0058_[63]),
    .S(_0060_[62])
  );
  CC_ADDF _0849_ (
    .A(phase_increment[63]),
    .B(1'h1),
    .CI(_0058_[63]),
    .CO(_0059_[63]),
    .S(_0060_[63])
  );
  CC_ADDF _0850_ (
    .A(phase_increment[6]),
    .B(1'h0),
    .CI(_0058_[6]),
    .CO(_0058_[7]),
    .S(_0060_[6])
  );
  CC_ADDF _0851_ (
    .A(phase_increment[7]),
    .B(1'h1),
    .CI(_0058_[7]),
    .CO(_0058_[8]),
    .S(_0060_[7])
  );
  CC_ADDF _0852_ (
    .A(phase_increment[8]),
    .B(1'h1),
    .CI(_0058_[8]),
    .CO(_0058_[9]),
    .S(_0060_[8])
  );
  CC_ADDF _0853_ (
    .A(phase_increment[9]),
    .B(1'h1),
    .CI(_0058_[9]),
    .CO(_0058_[10]),
    .S(_0060_[9])
  );
  CC_BUFG _0854_ (
    .I(_0061_),
    .O(clk0)
  );
  CC_BUFG _0855_ (
    .I(_0062_),
    .O(clk_strobe)
  );
  CC_BUFG _0856_ (
    .I(_0063_),
    .O(\dac.i2s_clk [2])
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0857_ (
    .CLK(clk0),
    .D(_0016_),
    .EN(_0001_),
    .Q(\uart_rx_inst.r_Rx_Byte [7]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0858_ (
    .CLK(clk0),
    .D(_0074_[0]),
    .EN(_0004_),
    .Q(phase_increment[0]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0859_ (
    .CLK(clk0),
    .D(_0071_[0]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [0]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0860_ (
    .CLK(clk0),
    .D(_0071_[1]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [1]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0861_ (
    .CLK(clk0),
    .D(_0071_[2]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [2]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0862_ (
    .CLK(clk0),
    .D(_0071_[3]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [3]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0863_ (
    .CLK(clk0),
    .D(_0071_[4]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [4]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0864_ (
    .CLK(clk0),
    .D(_0071_[5]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [5]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0865_ (
    .CLK(clk0),
    .D(_0071_[6]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [6]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0866_ (
    .CLK(clk0),
    .D(_0071_[7]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [7]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0867_ (
    .CLK(clk0),
    .D(_0071_[8]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [8]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0868_ (
    .CLK(clk0),
    .D(_0071_[9]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [9]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0869_ (
    .CLK(clk0),
    .D(_0071_[10]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [10]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0870_ (
    .CLK(clk0),
    .D(_0071_[11]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [11]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0871_ (
    .CLK(clk0),
    .D(_0071_[12]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [12]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0872_ (
    .CLK(clk0),
    .D(_0071_[13]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [13]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0873_ (
    .CLK(clk0),
    .D(_0071_[14]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [14]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0874_ (
    .CLK(clk0),
    .D(_0071_[15]),
    .EN(_0003_),
    .Q(\uart_rx_inst.r_Clock_Count [15]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0875_ (
    .CLK(clk0),
    .D(\uart_rx_inst.r_Rx_Byte [0]),
    .EN(_0069_[2]),
    .Q(uart_rx_byte[0]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0876_ (
    .CLK(clk0),
    .D(\uart_rx_inst.r_Rx_Byte [1]),
    .EN(_0069_[2]),
    .Q(uart_rx_byte[1]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0877_ (
    .CLK(clk0),
    .D(\uart_rx_inst.r_Rx_Byte [2]),
    .EN(_0069_[2]),
    .Q(uart_rx_byte[2]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0878_ (
    .CLK(clk0),
    .D(\uart_rx_inst.r_Rx_Byte [3]),
    .EN(_0069_[2]),
    .Q(uart_rx_byte[3]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0879_ (
    .CLK(clk0),
    .D(\uart_rx_inst.r_Rx_Byte [4]),
    .EN(_0069_[2]),
    .Q(uart_rx_byte[4]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0880_ (
    .CLK(clk0),
    .D(\uart_rx_inst.r_Rx_Byte [5]),
    .EN(_0069_[2]),
    .Q(uart_rx_byte[5]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0881_ (
    .CLK(clk0),
    .D(\uart_rx_inst.r_Rx_Byte [6]),
    .EN(_0069_[2]),
    .Q(uart_rx_byte[6]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0882_ (
    .CLK(clk0),
    .D(\uart_rx_inst.r_Rx_Byte [7]),
    .EN(_0069_[2]),
    .Q(uart_rx_byte[7]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0883_ (
    .CLK(clk0),
    .D(_0005_),
    .EN(_0002_),
    .Q(\uart_rx_inst.r_Bit_Index [0]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0884_ (
    .CLK(clk0),
    .D(_0006_),
    .EN(_0002_),
    .Q(\uart_rx_inst.r_Bit_Index [1]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0885_ (
    .CLK(clk0),
    .D(_0007_),
    .EN(_0002_),
    .Q(\uart_rx_inst.r_Bit_Index [2]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h1),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0886_ (
    .CLK(clk_strobe),
    .D(1'h1),
    .EN(1'h1),
    .Q(_0064_),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0887_ (
    .CLK(clk0),
    .D(_0095_[0]),
    .EN(_0000_),
    .Q(\uart_rx_inst.r_Rx_DV ),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0888_ (
    .CLK(clk_strobe),
    .D(_0043_[0]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [0]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0889_ (
    .CLK(clk_strobe),
    .D(_0043_[1]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [1]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0890_ (
    .CLK(clk_strobe),
    .D(_0043_[2]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [2]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0891_ (
    .CLK(clk_strobe),
    .D(_0043_[3]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [3]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0892_ (
    .CLK(clk_strobe),
    .D(_0043_[4]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [4]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0893_ (
    .CLK(clk_strobe),
    .D(_0043_[5]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [5]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0894_ (
    .CLK(clk_strobe),
    .D(_0043_[6]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [6]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0895_ (
    .CLK(clk_strobe),
    .D(_0043_[7]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [7]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0896_ (
    .CLK(clk_strobe),
    .D(_0043_[8]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [8]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0897_ (
    .CLK(clk_strobe),
    .D(_0043_[9]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [9]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0898_ (
    .CLK(clk_strobe),
    .D(_0043_[10]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [10]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0899_ (
    .CLK(clk_strobe),
    .D(_0043_[11]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [11]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0900_ (
    .CLK(clk_strobe),
    .D(_0043_[12]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [12]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0901_ (
    .CLK(clk_strobe),
    .D(_0043_[13]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [13]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0902_ (
    .CLK(clk_strobe),
    .D(_0043_[14]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [14]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0903_ (
    .CLK(clk_strobe),
    .D(_0043_[15]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [15]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0904_ (
    .CLK(clk_strobe),
    .D(_0043_[16]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [16]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0905_ (
    .CLK(clk_strobe),
    .D(_0043_[17]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [17]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0906_ (
    .CLK(clk_strobe),
    .D(_0043_[18]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [18]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0907_ (
    .CLK(clk_strobe),
    .D(_0043_[19]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [19]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0908_ (
    .CLK(clk_strobe),
    .D(_0043_[20]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [20]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0909_ (
    .CLK(clk_strobe),
    .D(_0043_[21]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [21]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0910_ (
    .CLK(clk_strobe),
    .D(_0043_[22]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [22]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0911_ (
    .CLK(clk_strobe),
    .D(_0043_[23]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [23]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0912_ (
    .CLK(clk_strobe),
    .D(_0043_[24]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [24]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0913_ (
    .CLK(clk_strobe),
    .D(_0043_[25]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [25]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0914_ (
    .CLK(clk_strobe),
    .D(_0043_[26]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [26]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0915_ (
    .CLK(clk_strobe),
    .D(_0043_[27]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [27]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0916_ (
    .CLK(clk_strobe),
    .D(_0043_[28]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [28]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0917_ (
    .CLK(clk_strobe),
    .D(_0043_[29]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [29]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0918_ (
    .CLK(clk_strobe),
    .D(_0043_[30]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [30]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0919_ (
    .CLK(clk_strobe),
    .D(_0043_[31]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [31]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0920_ (
    .CLK(clk_strobe),
    .D(_0043_[32]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [32]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0921_ (
    .CLK(clk_strobe),
    .D(_0043_[33]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [33]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0922_ (
    .CLK(clk_strobe),
    .D(_0043_[34]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [34]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0923_ (
    .CLK(clk_strobe),
    .D(_0043_[35]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [35]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0924_ (
    .CLK(clk_strobe),
    .D(_0043_[36]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [36]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0925_ (
    .CLK(clk_strobe),
    .D(_0043_[37]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [37]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0926_ (
    .CLK(clk_strobe),
    .D(_0043_[38]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [38]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0927_ (
    .CLK(clk_strobe),
    .D(_0043_[39]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [39]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0928_ (
    .CLK(clk_strobe),
    .D(_0043_[40]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [40]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0929_ (
    .CLK(clk_strobe),
    .D(_0043_[41]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [41]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0930_ (
    .CLK(clk_strobe),
    .D(_0043_[42]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [42]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0931_ (
    .CLK(clk_strobe),
    .D(_0043_[43]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [43]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0932_ (
    .CLK(clk_strobe),
    .D(_0043_[44]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [44]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0933_ (
    .CLK(clk_strobe),
    .D(_0043_[45]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [45]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0934_ (
    .CLK(clk_strobe),
    .D(_0043_[46]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [46]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0935_ (
    .CLK(clk_strobe),
    .D(_0043_[47]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [47]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0936_ (
    .CLK(clk_strobe),
    .D(_0043_[48]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [48]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0937_ (
    .CLK(clk_strobe),
    .D(_0043_[49]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [49]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0938_ (
    .CLK(clk_strobe),
    .D(_0043_[50]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [50]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0939_ (
    .CLK(clk_strobe),
    .D(_0043_[51]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [51]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0940_ (
    .CLK(clk_strobe),
    .D(_0043_[52]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [52]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0941_ (
    .CLK(clk_strobe),
    .D(_0043_[53]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [53]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0942_ (
    .CLK(clk_strobe),
    .D(_0043_[54]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [54]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0943_ (
    .CLK(clk_strobe),
    .D(_0043_[55]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [55]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0944_ (
    .CLK(clk_strobe),
    .D(_0043_[56]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [56]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0945_ (
    .CLK(clk_strobe),
    .D(_0043_[57]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [57]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0946_ (
    .CLK(clk_strobe),
    .D(_0043_[58]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [58]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0947_ (
    .CLK(clk_strobe),
    .D(_0043_[59]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [59]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0948_ (
    .CLK(clk_strobe),
    .D(_0043_[60]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [60]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0949_ (
    .CLK(clk_strobe),
    .D(_0043_[61]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [61]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0950_ (
    .CLK(clk_strobe),
    .D(_0043_[62]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [62]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0951_ (
    .CLK(clk_strobe),
    .D(_0043_[63]),
    .EN(1'h1),
    .Q(\sine_gen_inst.phase_accumulator [63]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h1),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0952_ (
    .CLK(\dac.i2s_clk [2]),
    .D(_0040_[0]),
    .EN(1'h1),
    .Q(\dac.i2sword [0]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h1),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0953_ (
    .CLK(\dac.i2s_clk [2]),
    .D(_0040_[1]),
    .EN(1'h1),
    .Q(\dac.i2sword [1]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h1),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0954_ (
    .CLK(\dac.i2s_clk [2]),
    .D(_0040_[2]),
    .EN(1'h1),
    .Q(\dac.i2sword [2]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h1),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0955_ (
    .CLK(\dac.i2s_clk [2]),
    .D(_0040_[3]),
    .EN(1'h1),
    .Q(\dac.i2sword [3]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h1),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0956_ (
    .CLK(\dac.i2s_clk [2]),
    .D(_0040_[4]),
    .EN(1'h1),
    .Q(\dac.i2sword [4]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h1),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0957_ (
    .CLK(\dac.i2s_clk [2]),
    .D(_0040_[5]),
    .EN(1'h1),
    .Q(_0062_),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h1),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0958_ (
    .CLK(\dac.i2s_clk [2]),
    .D(\dac.i2sword [0]),
    .EN(1'h1),
    .Q(\dac.bck ),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h1),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0959_ (
    .CLK(\dac.i2s_clk [2]),
    .D(_0068_),
    .EN(1'h1),
    .Q(\dac.din ),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h1),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0960_ (
    .CLK(\dac.i2s_clk [2]),
    .D(clk_strobe),
    .EN(1'h1),
    .Q(\dac.lrck ),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0961_ (
    .CLK(clk0),
    .D(_0037_[0]),
    .EN(1'h1),
    .Q(\dac.i2s_clk [0]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0962_ (
    .CLK(clk0),
    .D(_0037_[1]),
    .EN(1'h1),
    .Q(\dac.i2s_clk [1]),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h1),
    .SR_VAL(1'h0)
  ) _0963_ (
    .CLK(clk0),
    .D(_0037_[2]),
    .EN(1'h1),
    .Q(_0063_),
    .SR(_0072_)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0964_ (
    .CLK(clk0),
    .D(_0074_[1]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[1]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0965_ (
    .CLK(clk0),
    .D(_0074_[2]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[2]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0966_ (
    .CLK(clk0),
    .D(_0074_[3]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[3]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0967_ (
    .CLK(clk0),
    .D(_0074_[4]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[4]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0968_ (
    .CLK(clk0),
    .D(_0074_[5]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[5]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0969_ (
    .CLK(clk0),
    .D(_0074_[6]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[6]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0970_ (
    .CLK(clk0),
    .D(_0074_[7]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[7]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0971_ (
    .CLK(clk0),
    .D(_0074_[8]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[8]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0972_ (
    .CLK(clk0),
    .D(_0074_[9]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[9]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0973_ (
    .CLK(clk0),
    .D(_0074_[10]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[10]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0974_ (
    .CLK(clk0),
    .D(_0074_[11]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[11]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0975_ (
    .CLK(clk0),
    .D(_0074_[12]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[12]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0976_ (
    .CLK(clk0),
    .D(_0074_[13]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[13]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0977_ (
    .CLK(clk0),
    .D(_0074_[14]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[14]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0978_ (
    .CLK(clk0),
    .D(_0074_[15]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[15]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0979_ (
    .CLK(clk0),
    .D(_0074_[16]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[16]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0980_ (
    .CLK(clk0),
    .D(_0074_[17]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[17]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0981_ (
    .CLK(clk0),
    .D(_0074_[18]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[18]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0982_ (
    .CLK(clk0),
    .D(_0074_[19]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[19]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0983_ (
    .CLK(clk0),
    .D(_0074_[20]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[20]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0984_ (
    .CLK(clk0),
    .D(_0074_[21]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[21]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0985_ (
    .CLK(clk0),
    .D(_0074_[22]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[22]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0986_ (
    .CLK(clk0),
    .D(_0074_[23]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[23]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0987_ (
    .CLK(clk0),
    .D(_0074_[24]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[24]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0988_ (
    .CLK(clk0),
    .D(_0074_[25]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[25]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0989_ (
    .CLK(clk0),
    .D(_0074_[26]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[26]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0990_ (
    .CLK(clk0),
    .D(_0074_[27]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[27]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0991_ (
    .CLK(clk0),
    .D(_0074_[28]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[28]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0992_ (
    .CLK(clk0),
    .D(_0074_[29]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[29]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0993_ (
    .CLK(clk0),
    .D(_0074_[30]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[30]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0994_ (
    .CLK(clk0),
    .D(_0074_[31]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[31]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0995_ (
    .CLK(clk0),
    .D(_0074_[32]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[32]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0996_ (
    .CLK(clk0),
    .D(_0074_[33]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[33]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0997_ (
    .CLK(clk0),
    .D(_0074_[34]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[34]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0998_ (
    .CLK(clk0),
    .D(_0074_[35]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[35]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _0999_ (
    .CLK(clk0),
    .D(_0074_[36]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[36]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1000_ (
    .CLK(clk0),
    .D(_0074_[37]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[37]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1001_ (
    .CLK(clk0),
    .D(_0074_[38]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[38]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1002_ (
    .CLK(clk0),
    .D(_0074_[39]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[39]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1003_ (
    .CLK(clk0),
    .D(_0074_[40]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[40]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1004_ (
    .CLK(clk0),
    .D(_0074_[41]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[41]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1005_ (
    .CLK(clk0),
    .D(_0074_[42]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[42]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1006_ (
    .CLK(clk0),
    .D(_0074_[43]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[43]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1007_ (
    .CLK(clk0),
    .D(_0074_[44]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[44]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1008_ (
    .CLK(clk0),
    .D(_0074_[45]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[45]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1009_ (
    .CLK(clk0),
    .D(_0074_[46]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[46]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1010_ (
    .CLK(clk0),
    .D(_0074_[47]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[47]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1011_ (
    .CLK(clk0),
    .D(_0074_[48]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[48]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1012_ (
    .CLK(clk0),
    .D(_0074_[49]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[49]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1013_ (
    .CLK(clk0),
    .D(_0074_[50]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[50]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1014_ (
    .CLK(clk0),
    .D(_0074_[51]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[51]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1015_ (
    .CLK(clk0),
    .D(_0074_[52]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[52]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1016_ (
    .CLK(clk0),
    .D(_0074_[53]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[53]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1017_ (
    .CLK(clk0),
    .D(_0074_[54]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[54]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1018_ (
    .CLK(clk0),
    .D(_0074_[55]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[55]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1019_ (
    .CLK(clk0),
    .D(_0074_[56]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[56]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1020_ (
    .CLK(clk0),
    .D(_0074_[57]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[57]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1021_ (
    .CLK(clk0),
    .D(_0074_[58]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[58]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1022_ (
    .CLK(clk0),
    .D(_0074_[59]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[59]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1023_ (
    .CLK(clk0),
    .D(_0074_[60]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[60]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1024_ (
    .CLK(clk0),
    .D(_0074_[61]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[61]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1025_ (
    .CLK(clk0),
    .D(_0074_[62]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[62]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1026_ (
    .CLK(clk0),
    .D(_0074_[63]),
    .EN(uart_rx_data_valid),
    .Q(phase_increment[63]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1027_ (
    .CLK(clk0),
    .D(\uart_rx_inst.r_Rx_DV ),
    .EN(1'h1),
    .Q(\uart_rx_inst.r_Rx_DV_last ),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'hx),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1028_ (
    .CLK(clk0),
    .D(_0008_),
    .EN(1'h1),
    .Q(uart_rx_data_valid),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h1),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1029_ (
    .CLK(clk0),
    .D(\uart_rx_inst.r_Rx_Data_R ),
    .EN(1'h1),
    .Q(\uart_rx_inst.r_Rx_Data ),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h1),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1030_ (
    .CLK(clk0),
    .D(\uart_rx_inst.i_Rx_Serial ),
    .EN(1'h1),
    .Q(\uart_rx_inst.r_Rx_Data_R ),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1031_ (
    .CLK(clk0),
    .D(_0070_[0]),
    .EN(1'h1),
    .Q(\uart_rx_inst.r_SM_Main [0]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1032_ (
    .CLK(clk0),
    .D(_0070_[1]),
    .EN(1'h1),
    .Q(\uart_rx_inst.r_SM_Main [1]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1033_ (
    .CLK(clk0),
    .D(_0070_[2]),
    .EN(1'h1),
    .Q(\uart_rx_inst.r_SM_Main [2]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1034_ (
    .CLK(clk0),
    .D(_0009_),
    .EN(_0001_),
    .Q(\uart_rx_inst.r_Rx_Byte [0]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1035_ (
    .CLK(clk0),
    .D(_0010_),
    .EN(_0001_),
    .Q(\uart_rx_inst.r_Rx_Byte [1]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1036_ (
    .CLK(clk0),
    .D(_0011_),
    .EN(_0001_),
    .Q(\uart_rx_inst.r_Rx_Byte [2]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1037_ (
    .CLK(clk0),
    .D(_0012_),
    .EN(_0001_),
    .Q(\uart_rx_inst.r_Rx_Byte [3]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1038_ (
    .CLK(clk0),
    .D(_0013_),
    .EN(_0001_),
    .Q(\uart_rx_inst.r_Rx_Byte [4]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1039_ (
    .CLK(clk0),
    .D(_0014_),
    .EN(_0001_),
    .Q(\uart_rx_inst.r_Rx_Byte [5]),
    .SR(1'h0)
  );
  CC_DFF #(
    .CLK_INV(1'h0),
    .EN_INV(1'h0),
    .INIT(1'h0),
    .SR_INV(1'h0),
    .SR_VAL(1'h0)
  ) _1040_ (
    .CLK(clk0),
    .D(_0015_),
    .EN(_0001_),
    .Q(\uart_rx_inst.r_Rx_Byte [6]),
    .SR(1'h0)
  );
  CC_MX4 _1041_ (
    .D0(1'h0),
    .D1(_0065_[15]),
    .D2(1'h0),
    .D3(_0065_[14]),
    .S0(_0064_),
    .S1(\dac.i2sword [1]),
    .Y(_0075_[14])
  );
  CC_MX4 _1042_ (
    .D0(1'h0),
    .D1(_0065_[13]),
    .D2(1'h0),
    .D3(_0065_[12]),
    .S0(_0064_),
    .S1(\dac.i2sword [1]),
    .Y(_0075_[12])
  );
  CC_MX4 _1043_ (
    .D0(1'h0),
    .D1(_0065_[11]),
    .D2(1'h0),
    .D3(_0065_[10]),
    .S0(_0064_),
    .S1(\dac.i2sword [1]),
    .Y(_0075_[10])
  );
  CC_MX4 _1044_ (
    .D0(1'h0),
    .D1(_0065_[9]),
    .D2(1'h0),
    .D3(_0065_[8]),
    .S0(_0064_),
    .S1(\dac.i2sword [1]),
    .Y(_0075_[8])
  );
  CC_MX4 _1045_ (
    .D0(_0075_[14]),
    .D1(_0075_[12]),
    .D2(_0075_[10]),
    .D3(_0075_[8]),
    .S0(\dac.i2sword [2]),
    .S1(\dac.i2sword [3]),
    .Y(_0116_[1])
  );
  CC_MX4 _1046_ (
    .D0(1'h0),
    .D1(_0065_[7]),
    .D2(1'h0),
    .D3(_0065_[6]),
    .S0(_0064_),
    .S1(\dac.i2sword [1]),
    .Y(_0075_[6])
  );
  CC_MX4 _1047_ (
    .D0(1'h0),
    .D1(_0065_[5]),
    .D2(1'h0),
    .D3(_0065_[4]),
    .S0(_0064_),
    .S1(\dac.i2sword [1]),
    .Y(_0075_[4])
  );
  CC_MX4 _1048_ (
    .D0(1'h0),
    .D1(_0065_[3]),
    .D2(1'h0),
    .D3(_0065_[2]),
    .S0(_0064_),
    .S1(\dac.i2sword [1]),
    .Y(_0075_[2])
  );
  CC_MX4 _1049_ (
    .D0(1'h0),
    .D1(_0065_[1]),
    .D2(1'h0),
    .D3(_0065_[0]),
    .S0(_0064_),
    .S1(\dac.i2sword [1]),
    .Y(_0075_[0])
  );
  CC_MX4 _1050_ (
    .D0(_0075_[6]),
    .D1(_0075_[4]),
    .D2(_0075_[2]),
    .D3(_0075_[0]),
    .S0(\dac.i2sword [2]),
    .S1(\dac.i2sword [3]),
    .Y(_0116_[0])
  );
  CC_BRAM_20K #(
    .A_CLK_INV(1'h1),
    .A_RD_WIDTH(32'd20),
    .A_WR_MODE("WRITE_THROUGH"),
    .A_WR_WIDTH(32'd0),
    .B_CLK_INV(1'h0),
    .B_RD_WIDTH(32'd0),
    .B_WR_MODE("WRITE_THROUGH"),
    .B_WR_WIDTH(32'd0),
    .INIT_00(320'h0ae100ab1e0a8260a5270a22309f1909c0a098f8095e1092c708faa08c8b0896a086470832307fff),
    .INIT_01(320'h0d8420d5f40d39a0d1320cebf0cc3f0c9b30c71c0c47a0c1cd0bf160bc550b98c0b6b90b3de0b0fb),
    .INIT_02(320'h0f5030f3b40f2540f0e10ef5e0edc90ec230ea6c0e8a50e6ce0e4e70e2f10e0eb0ded60dcb30da81),
    .INIT_03(320'h0fff50ffd70ffa60ff610ff080fe9c0fe1c0fd890fce20fc280fb5c0fa7c0f9890f8830f76b0f640),
    .INIT_04(320'h0f76b0f8830f9890fa7c0fb5c0fc280fce20fd890fe1c0fe9c0ff080ff610ffa60ffd70fff50ffff),
    .INIT_05(320'h0dcb30ded60e0eb0e2f10e4e70e6ce0e8a50ea6c0ec230edc90ef5e0f0e10f2540f3b40f5030f640),
    .INIT_06(320'h0b3de0b6b90b98c0bc550bf160c1cd0c47a0c71c0c9b30cc3f0cebf0d1320d39a0d5f40d8420da81),
    .INIT_07(320'h08323086470896a08c8b08faa092c7095e1098f809c0a09f190a2230a5270a8260ab1e0ae100b0fb),
    .INIT_08(320'h051ee054e0057d805ad705ddb060e5063f40670606a1d06d37070540737307694079b707cdb07fff),
    .INIT_09(320'h027bc02a0a02c6402ecc0313f033bf0364b038e203b8403e31040e8043a9046720494504c2004f03),
    .INIT_0A(320'h00afb00c4a00daa00f1d010a001235013db01592017590193001b1701d0d01f13021280234b0257d),
    .INIT_0B(320'h0000900027000580009d000f600162001e2002750031c003d6004a200582006750077b00893009be),
    .INIT_0C(320'h008930077b0067500582004a2003d60031c00275001e200162000f60009d00058000270000900000),
    .INIT_0D(320'h0234b0212801f1301d0d01b17019300175901592013db01235010a000f1d00daa00c4a00afb009be),
    .INIT_0E(320'h04c200494504672043a9040e803e3103b84038e20364b033bf0313f02ecc02c6402a0a027bc0257d),
    .INIT_0F(320'h07cdb079b707694073730705406d3706a1d06706063f4060e505ddb05ad7057d8054e0051ee04f03),
    .INIT_10(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(320'h00000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .RAM_MODE("TDP")
  ) _1051_ (
    .A_ADDR({ 2'h0, \sine_gen_inst.phase_accumulator [63:57], 1'h0, \sine_gen_inst.phase_accumulator [56], 5'h00 }),
    .A_BM(20'h00000),
    .A_CLK(clk_strobe),
    .A_DI(20'hxxxxx),
    .A_DO({ _0066_[19:16], _0065_ }),
    .A_EN(1'h1),
    .A_WE(1'h0),
    .B_ADDR(16'bxxxxxxxxx0x00000),
    .B_BM(20'h00000),
    .B_CLK(1'h0),
    .B_DI(20'hxxxxx),
    .B_DO(_0067_),
    .B_EN(1'h0),
    .B_WE(1'h0)
  );
  CC_IBUF _1052_ (
    .I(arst_n),
    .Y(_0072_)
  );
  CC_OBUF _1053_ (
    .A(\dac.bck ),
    .O(bck)
  );
  CC_IBUF _1054_ (
    .I(clk),
    .Y(_0073_)
  );
  CC_OBUF _1055_ (
    .A(clk0),
    .O(clk_check)
  );
  CC_OBUF _1056_ (
    .A(\dac.din ),
    .O(din)
  );
  CC_OBUF _1057_ (
    .A(_0017_),
    .O(led[0])
  );
  CC_OBUF _1058_ (
    .A(_0018_),
    .O(led[1])
  );
  CC_OBUF _1059_ (
    .A(_0019_),
    .O(led[2])
  );
  CC_OBUF _1060_ (
    .A(_0020_),
    .O(led[3])
  );
  CC_OBUF _1061_ (
    .A(_0021_),
    .O(led[4])
  );
  CC_OBUF _1062_ (
    .A(_0022_),
    .O(led[5])
  );
  CC_OBUF _1063_ (
    .A(_0023_),
    .O(led[6])
  );
  CC_OBUF _1064_ (
    .A(_0024_),
    .O(led[7])
  );
  CC_OBUF _1065_ (
    .A(\dac.lrck ),
    .O(lrck)
  );
  CC_IBUF _1066_ (
    .I(uart_rx_serial),
    .Y(\uart_rx_inst.i_Rx_Serial )
  );
  CC_PLL #(
    .CI_FILTER_CONST(32'sd2),
    .CP_FILTER_CONST(32'sd4),
    .LOW_JITTER(32'sd1),
    .OUT_CLK("48.0"),
    .PERF_MD("ECONOMY"),
    .REF_CLK("10.0")
  ) pll_inst (
    .CLK0(_0061_),
    .CLK180(clk180),
    .CLK270(clk270),
    .CLK90(clk90),
    .CLK_FEEDBACK(1'h0),
    .CLK_REF(_0073_),
    .CLK_REF_OUT(usr_ref_out),
    .USR_CLK_REF(1'h0),
    .USR_LOCKED_STDY_RST(1'h0),
    .USR_PLL_LOCKED(usr_pll_lock),
    .USR_PLL_LOCKED_STDY(usr_pll_lock_stdy)
  );
  assign _0026_[0] = 1'h1;
  assign _0027_[14:0] = _0026_[15:1];
  assign _0029_[0] = 1'h0;
  assign _0030_[61:0] = _0029_[62:1];
  assign _0032_[0] = 1'h0;
  assign _0033_[62:0] = _0032_[63:1];
  assign _0035_[0] = 1'h0;
  assign _0036_[1:0] = _0035_[2:1];
  assign _0038_[0] = 1'h0;
  assign _0039_[4:0] = _0038_[5:1];
  assign _0041_[0] = 1'h0;
  assign _0042_[62:0] = _0041_[63:1];
  assign _0044_[0] = 1'h0;
  assign _0045_[1:0] = _0044_[2:1];
  assign _0046_[2:1] = \uart_rx_inst.r_Bit_Index [2:1];
  assign _0048_[0] = 1'h0;
  assign _0049_[14:0] = _0048_[15:1];
  assign { _0051_[3], _0051_[0] } = { 1'h1, _0046_[0] };
  assign _0052_[0] = 1'h1;
  assign _0053_[2:0] = _0052_[3:1];
  assign _0055_[0] = 1'h1;
  assign _0056_[61:0] = _0055_[62:1];
  assign _0058_[0] = 1'h1;
  assign _0059_[62:0] = _0058_[63:1];
  assign _0066_[15:0] = _0065_;
  assign { _0069_[11:10], _0069_[8], _0069_[5], _0069_[0] } = { 4'h0, _0069_[1] };
  assign { _0077_[3], _0077_[0] } = uart_rx_byte[1:0];
  assign _0078_[0] = _0034_[0];
  assign _0079_[0] = _0077_[1];
  assign { _0080_[3], _0080_[0] } = { _0031_[29], _0057_[29] };
  assign { _0081_[3], _0081_[1:0] } = { _0060_[9], _0080_[2], _0031_[8] };
  assign _0083_[0] = _0060_[12];
  assign { _0084_[2], _0084_[0] } = { _0079_[2], _0077_[1] };
  assign _0086_[1:0] = { _0080_[1], _0057_[11] };
  assign _0088_[2:0] = { _0054_[2], \uart_rx_inst.r_Rx_Byte [6], \uart_rx_inst.r_Rx_Data  };
  assign _0089_[2:0] = { _0054_[2], \uart_rx_inst.r_Rx_Byte [5], \uart_rx_inst.r_Rx_Data  };
  assign _0091_[0] = \uart_rx_inst.r_Rx_Data ;
  assign _0092_[2:0] = _0090_[2:0];
  assign _0093_[3:1] = { _0027_[15], \uart_rx_inst.r_SM_Main [1], \uart_rx_inst.r_SM_Main [2] };
  assign _0095_[1] = \uart_rx_inst.r_SM_Main [2];
  assign _0096_[1:0] = { _0080_[1], _0057_[24] };
  assign _0099_[0] = _0085_[0];
  assign _0100_[1:0] = { _0080_[1], _0057_[21] };
  assign _0101_[0] = _0085_[1];
  assign _0102_[0] = _0078_[2];
  assign _0103_[0] = _0078_[2];
  assign _0104_[0] = _0085_[0];
  assign _0106_[0] = _0097_[0];
  assign _0107_[2] = _0087_[1];
  assign _0108_[0] = _0078_[2];
  assign _0109_[0] = _0085_[1];
  assign _0110_[1:0] = { _0080_[1], _0057_[43] };
  assign _0111_[1:0] = { _0080_[2], _0031_[45] };
  assign _0112_[0] = _0097_[0];
  assign _0114_[0] = _0078_[2];
  assign _0115_[1:0] = { _0080_[1], _0057_[61] };
  assign _0116_[2] = \dac.i2sword [4];
  assign { _0117_[2], _0117_[0] } = { _0050_[1], _0094_[0] };
  assign _0118_[3:1] = { \uart_rx_inst.r_SM_Main [0], \uart_rx_inst.r_SM_Main [1], \uart_rx_inst.r_SM_Main [2] };
  assign _0119_[1:0] = { \uart_rx_inst.r_Rx_Data , \uart_rx_inst.r_Rx_Byte [0] };
  assign { _0120_[3], _0120_[1:0] } = { _0054_[2], \uart_rx_inst.r_Rx_Byte [3], \uart_rx_inst.r_Rx_Data  };
  assign { _0121_[3], _0121_[1:0] } = { _0079_[1], _0079_[2], _0031_[57] };
  assign _0122_[0] = _0105_[0];
  assign _0123_[0] = _0077_[1];
  assign _0124_[1:0] = { _0083_[1], _0060_[37] };
  assign _0126_[0] = _0087_[0];
  assign _0127_[1:0] = { \uart_rx_inst.r_Rx_Data , \uart_rx_inst.r_Rx_Byte [4] };
  assign _0128_[1:0] = { _0094_[2], _0118_[0] };
  assign _0129_[1] = _0094_[2];
  assign _0130_[1] = _0047_[1];
  assign _0131_[1:0] = { _0094_[0], \uart_rx_inst.r_SM_Main [0] };
  assign _0133_[1:0] = { _0080_[1], _0057_[62] };
  assign _0134_[2] = _0087_[1];
  assign _0135_[0] = _0105_[0];
  assign _0136_[0] = _0082_[0];
  assign _0137_[0] = _0078_[2];
  assign _0138_[1] = _0098_[0];
  assign _0139_[0] = _0132_[0];
  assign _0140_[1:0] = { _0083_[1], _0060_[8] };
  assign _0141_[0] = _0132_[0];
  assign _0142_[0] = _0105_[0];
  assign _0143_[1:0] = { _0083_[1], _0060_[4] };
  assign _0144_[2:0] = { _0105_[0], _0080_[1], _0057_[7] };
  assign _0145_[0] = _0085_[1];
  assign _0146_[0] = _0085_[1];
  assign _0147_[1:0] = { _0083_[1], _0060_[3] };
  assign _0148_[2] = _0086_[2];
  assign _0149_[1:0] = { _0060_[0], _0083_[1] };
  assign _0150_[1] = _0097_[0];
  assign _0151_[0] = _0085_[1];
  assign _0152_[0] = _0085_[0];
  assign _0153_[0] = _0113_[0];
  assign _0155_[0] = _0097_[0];
  assign _0156_[0] = _0097_[0];
  assign _0157_[0] = _0082_[0];
  assign _0158_[1:0] = { _0083_[1], _0060_[51] };
  assign _0159_[0] = _0087_[0];
  assign _0160_[1:0] = { _0083_[1], _0060_[52] };
  assign _0161_[0] = _0125_[3];
  assign _0162_[2:0] = { _0086_[2], _0080_[1], _0057_[51] };
  assign _0163_[0] = _0087_[0];
  assign _0164_[1:0] = { _0080_[1], _0057_[44] };
  assign _0165_[0] = _0085_[1];
  assign _0166_[0] = _0085_[0];
  assign _0167_[0] = _0098_[0];
  assign _0168_[1:0] = { _0080_[2], _0031_[19] };
  assign _0169_[1] = _0125_[3];
  assign _0170_[0] = _0098_[0];
  assign _0171_[2:0] = { _0154_[0], _0080_[1], _0057_[36] };
  assign _0172_[0] = _0085_[0];
  assign \dac.i2sword [5] = clk_strobe;
endmodule
